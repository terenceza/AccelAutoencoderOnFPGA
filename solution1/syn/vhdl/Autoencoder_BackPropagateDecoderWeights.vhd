-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
-- Version: 2022.1
-- Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity Autoencoder_BackPropagateDecoderWeights is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    p_read : IN STD_LOGIC_VECTOR (0 downto 0);
    DecoderWeights_0_out : OUT STD_LOGIC_VECTOR (0 downto 0);
    DecoderWeights_0_out_ap_vld : OUT STD_LOGIC;
    p_read1 : IN STD_LOGIC_VECTOR (0 downto 0);
    DecoderWeights_1_out : OUT STD_LOGIC_VECTOR (0 downto 0);
    DecoderWeights_1_out_ap_vld : OUT STD_LOGIC;
    p_read2 : IN STD_LOGIC_VECTOR (0 downto 0);
    DecoderWeights_2_out : OUT STD_LOGIC_VECTOR (0 downto 0);
    DecoderWeights_2_out_ap_vld : OUT STD_LOGIC;
    p_read3 : IN STD_LOGIC_VECTOR (0 downto 0);
    DecoderWeights_3_out : OUT STD_LOGIC_VECTOR (0 downto 0);
    DecoderWeights_3_out_ap_vld : OUT STD_LOGIC;
    p_read4 : IN STD_LOGIC_VECTOR (0 downto 0);
    DecoderWeights_4_out : OUT STD_LOGIC_VECTOR (0 downto 0);
    DecoderWeights_4_out_ap_vld : OUT STD_LOGIC;
    p_read5 : IN STD_LOGIC_VECTOR (0 downto 0);
    DecoderWeights_5_out : OUT STD_LOGIC_VECTOR (0 downto 0);
    DecoderWeights_5_out_ap_vld : OUT STD_LOGIC;
    p_read6 : IN STD_LOGIC_VECTOR (0 downto 0);
    DecoderWeights_6_out : OUT STD_LOGIC_VECTOR (0 downto 0);
    DecoderWeights_6_out_ap_vld : OUT STD_LOGIC;
    p_read7 : IN STD_LOGIC_VECTOR (0 downto 0);
    DecoderWeights_7_out : OUT STD_LOGIC_VECTOR (0 downto 0);
    DecoderWeights_7_out_ap_vld : OUT STD_LOGIC;
    p_read8 : IN STD_LOGIC_VECTOR (0 downto 0);
    DecoderWeights_8_out : OUT STD_LOGIC_VECTOR (0 downto 0);
    DecoderWeights_8_out_ap_vld : OUT STD_LOGIC;
    p_read9 : IN STD_LOGIC_VECTOR (0 downto 0);
    DecoderWeights_9_out : OUT STD_LOGIC_VECTOR (0 downto 0);
    DecoderWeights_9_out_ap_vld : OUT STD_LOGIC;
    p_read10 : IN STD_LOGIC_VECTOR (0 downto 0);
    DecoderWeights_10_out : OUT STD_LOGIC_VECTOR (0 downto 0);
    DecoderWeights_10_out_ap_vld : OUT STD_LOGIC;
    p_read11 : IN STD_LOGIC_VECTOR (0 downto 0);
    DecoderWeights_11_out : OUT STD_LOGIC_VECTOR (0 downto 0);
    DecoderWeights_11_out_ap_vld : OUT STD_LOGIC;
    p_read12 : IN STD_LOGIC_VECTOR (0 downto 0);
    DecoderWeights_12_out : OUT STD_LOGIC_VECTOR (0 downto 0);
    DecoderWeights_12_out_ap_vld : OUT STD_LOGIC;
    p_read13 : IN STD_LOGIC_VECTOR (0 downto 0);
    DecoderWeights_13_out : OUT STD_LOGIC_VECTOR (0 downto 0);
    DecoderWeights_13_out_ap_vld : OUT STD_LOGIC;
    p_read14 : IN STD_LOGIC_VECTOR (0 downto 0);
    DecoderWeights_14_out : OUT STD_LOGIC_VECTOR (0 downto 0);
    DecoderWeights_14_out_ap_vld : OUT STD_LOGIC;
    p_read15 : IN STD_LOGIC_VECTOR (0 downto 0);
    DecoderWeights_15_out : OUT STD_LOGIC_VECTOR (0 downto 0);
    DecoderWeights_15_out_ap_vld : OUT STD_LOGIC;
    p_read16 : IN STD_LOGIC_VECTOR (0 downto 0);
    DecoderWeights_16_out : OUT STD_LOGIC_VECTOR (0 downto 0);
    DecoderWeights_16_out_ap_vld : OUT STD_LOGIC;
    p_read17 : IN STD_LOGIC_VECTOR (0 downto 0);
    DecoderWeights_17_out : OUT STD_LOGIC_VECTOR (0 downto 0);
    DecoderWeights_17_out_ap_vld : OUT STD_LOGIC;
    p_read18 : IN STD_LOGIC_VECTOR (0 downto 0);
    DecoderWeights_18_out : OUT STD_LOGIC_VECTOR (0 downto 0);
    DecoderWeights_18_out_ap_vld : OUT STD_LOGIC;
    p_read19 : IN STD_LOGIC_VECTOR (0 downto 0);
    DecoderWeights_19_out : OUT STD_LOGIC_VECTOR (0 downto 0);
    DecoderWeights_19_out_ap_vld : OUT STD_LOGIC;
    p_read20 : IN STD_LOGIC_VECTOR (0 downto 0);
    DecoderWeights_20_out : OUT STD_LOGIC_VECTOR (0 downto 0);
    DecoderWeights_20_out_ap_vld : OUT STD_LOGIC;
    p_read21 : IN STD_LOGIC_VECTOR (0 downto 0);
    DecoderWeights_21_out : OUT STD_LOGIC_VECTOR (0 downto 0);
    DecoderWeights_21_out_ap_vld : OUT STD_LOGIC;
    p_read22 : IN STD_LOGIC_VECTOR (0 downto 0);
    DecoderWeights_22_out : OUT STD_LOGIC_VECTOR (0 downto 0);
    DecoderWeights_22_out_ap_vld : OUT STD_LOGIC;
    p_read23 : IN STD_LOGIC_VECTOR (0 downto 0);
    DecoderWeights_23_out : OUT STD_LOGIC_VECTOR (0 downto 0);
    DecoderWeights_23_out_ap_vld : OUT STD_LOGIC;
    p_read24 : IN STD_LOGIC_VECTOR (0 downto 0);
    DecoderWeights_24_out : OUT STD_LOGIC_VECTOR (0 downto 0);
    DecoderWeights_24_out_ap_vld : OUT STD_LOGIC;
    p_read25 : IN STD_LOGIC_VECTOR (0 downto 0);
    DecoderWeights_25_out : OUT STD_LOGIC_VECTOR (0 downto 0);
    DecoderWeights_25_out_ap_vld : OUT STD_LOGIC;
    p_read26 : IN STD_LOGIC_VECTOR (0 downto 0);
    DecoderWeights_26_out : OUT STD_LOGIC_VECTOR (0 downto 0);
    DecoderWeights_26_out_ap_vld : OUT STD_LOGIC;
    p_read27 : IN STD_LOGIC_VECTOR (0 downto 0);
    DecoderWeights_27_out : OUT STD_LOGIC_VECTOR (0 downto 0);
    DecoderWeights_27_out_ap_vld : OUT STD_LOGIC;
    p_read28 : IN STD_LOGIC_VECTOR (0 downto 0);
    DecoderWeights_28_out : OUT STD_LOGIC_VECTOR (0 downto 0);
    DecoderWeights_28_out_ap_vld : OUT STD_LOGIC;
    p_read29 : IN STD_LOGIC_VECTOR (0 downto 0);
    DecoderWeights_29_out : OUT STD_LOGIC_VECTOR (0 downto 0);
    DecoderWeights_29_out_ap_vld : OUT STD_LOGIC;
    p_read30 : IN STD_LOGIC_VECTOR (0 downto 0);
    DecoderWeights_30_out : OUT STD_LOGIC_VECTOR (0 downto 0);
    DecoderWeights_30_out_ap_vld : OUT STD_LOGIC;
    p_read31 : IN STD_LOGIC_VECTOR (0 downto 0);
    DecoderWeights_31_out : OUT STD_LOGIC_VECTOR (0 downto 0);
    DecoderWeights_31_out_ap_vld : OUT STD_LOGIC;
    p_read32 : IN STD_LOGIC_VECTOR (0 downto 0);
    DecoderWeights_32_out : OUT STD_LOGIC_VECTOR (0 downto 0);
    DecoderWeights_32_out_ap_vld : OUT STD_LOGIC;
    p_read33 : IN STD_LOGIC_VECTOR (0 downto 0);
    DecoderWeights_33_out : OUT STD_LOGIC_VECTOR (0 downto 0);
    DecoderWeights_33_out_ap_vld : OUT STD_LOGIC;
    p_read34 : IN STD_LOGIC_VECTOR (0 downto 0);
    DecoderWeights_34_out : OUT STD_LOGIC_VECTOR (0 downto 0);
    DecoderWeights_34_out_ap_vld : OUT STD_LOGIC;
    p_read35 : IN STD_LOGIC_VECTOR (0 downto 0);
    DecoderWeights_35_out : OUT STD_LOGIC_VECTOR (0 downto 0);
    DecoderWeights_35_out_ap_vld : OUT STD_LOGIC;
    p_read36 : IN STD_LOGIC_VECTOR (0 downto 0);
    DecoderWeights_36_out : OUT STD_LOGIC_VECTOR (0 downto 0);
    DecoderWeights_36_out_ap_vld : OUT STD_LOGIC;
    p_read37 : IN STD_LOGIC_VECTOR (0 downto 0);
    DecoderWeights_37_out : OUT STD_LOGIC_VECTOR (0 downto 0);
    DecoderWeights_37_out_ap_vld : OUT STD_LOGIC;
    p_read38 : IN STD_LOGIC_VECTOR (0 downto 0);
    DecoderWeights_38_out : OUT STD_LOGIC_VECTOR (0 downto 0);
    DecoderWeights_38_out_ap_vld : OUT STD_LOGIC;
    p_read39 : IN STD_LOGIC_VECTOR (0 downto 0);
    DecoderWeights_39_out : OUT STD_LOGIC_VECTOR (0 downto 0);
    DecoderWeights_39_out_ap_vld : OUT STD_LOGIC;
    PrevDecoderWeightChanges_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    PrevDecoderWeightChanges_ce0 : OUT STD_LOGIC;
    PrevDecoderWeightChanges_we0 : OUT STD_LOGIC;
    PrevDecoderWeightChanges_d0 : OUT STD_LOGIC_VECTOR (0 downto 0) );
end;


architecture behav of Autoencoder_BackPropagateDecoderWeights is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (2 downto 0) := "010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv6_0 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    constant ap_const_lv6_1 : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    constant ap_const_lv6_2 : STD_LOGIC_VECTOR (5 downto 0) := "000010";
    constant ap_const_lv6_3 : STD_LOGIC_VECTOR (5 downto 0) := "000011";
    constant ap_const_lv6_4 : STD_LOGIC_VECTOR (5 downto 0) := "000100";
    constant ap_const_lv6_5 : STD_LOGIC_VECTOR (5 downto 0) := "000101";
    constant ap_const_lv6_6 : STD_LOGIC_VECTOR (5 downto 0) := "000110";
    constant ap_const_lv6_7 : STD_LOGIC_VECTOR (5 downto 0) := "000111";
    constant ap_const_lv6_8 : STD_LOGIC_VECTOR (5 downto 0) := "001000";
    constant ap_const_lv6_9 : STD_LOGIC_VECTOR (5 downto 0) := "001001";
    constant ap_const_lv6_A : STD_LOGIC_VECTOR (5 downto 0) := "001010";
    constant ap_const_lv6_B : STD_LOGIC_VECTOR (5 downto 0) := "001011";
    constant ap_const_lv6_C : STD_LOGIC_VECTOR (5 downto 0) := "001100";
    constant ap_const_lv6_D : STD_LOGIC_VECTOR (5 downto 0) := "001101";
    constant ap_const_lv6_E : STD_LOGIC_VECTOR (5 downto 0) := "001110";
    constant ap_const_lv6_F : STD_LOGIC_VECTOR (5 downto 0) := "001111";
    constant ap_const_lv6_10 : STD_LOGIC_VECTOR (5 downto 0) := "010000";
    constant ap_const_lv6_11 : STD_LOGIC_VECTOR (5 downto 0) := "010001";
    constant ap_const_lv6_12 : STD_LOGIC_VECTOR (5 downto 0) := "010010";
    constant ap_const_lv6_13 : STD_LOGIC_VECTOR (5 downto 0) := "010011";
    constant ap_const_lv6_14 : STD_LOGIC_VECTOR (5 downto 0) := "010100";
    constant ap_const_lv6_15 : STD_LOGIC_VECTOR (5 downto 0) := "010101";
    constant ap_const_lv6_16 : STD_LOGIC_VECTOR (5 downto 0) := "010110";
    constant ap_const_lv6_17 : STD_LOGIC_VECTOR (5 downto 0) := "010111";
    constant ap_const_lv6_18 : STD_LOGIC_VECTOR (5 downto 0) := "011000";
    constant ap_const_lv6_19 : STD_LOGIC_VECTOR (5 downto 0) := "011001";
    constant ap_const_lv6_1A : STD_LOGIC_VECTOR (5 downto 0) := "011010";
    constant ap_const_lv6_1B : STD_LOGIC_VECTOR (5 downto 0) := "011011";
    constant ap_const_lv6_1C : STD_LOGIC_VECTOR (5 downto 0) := "011100";
    constant ap_const_lv6_1D : STD_LOGIC_VECTOR (5 downto 0) := "011101";
    constant ap_const_lv6_1E : STD_LOGIC_VECTOR (5 downto 0) := "011110";
    constant ap_const_lv6_1F : STD_LOGIC_VECTOR (5 downto 0) := "011111";
    constant ap_const_lv6_20 : STD_LOGIC_VECTOR (5 downto 0) := "100000";
    constant ap_const_lv6_21 : STD_LOGIC_VECTOR (5 downto 0) := "100001";
    constant ap_const_lv6_22 : STD_LOGIC_VECTOR (5 downto 0) := "100010";
    constant ap_const_lv6_23 : STD_LOGIC_VECTOR (5 downto 0) := "100011";
    constant ap_const_lv6_24 : STD_LOGIC_VECTOR (5 downto 0) := "100100";
    constant ap_const_lv6_25 : STD_LOGIC_VECTOR (5 downto 0) := "100101";
    constant ap_const_lv6_26 : STD_LOGIC_VECTOR (5 downto 0) := "100110";
    constant ap_const_lv3_4 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv4_A : STD_LOGIC_VECTOR (3 downto 0) := "1010";
    constant ap_const_lv4_1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";

attribute shreg_extract : string;
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (2 downto 0) := "001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal add_ln328_fu_1361_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal add_ln328_reg_2231 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal zext_ln331_fu_1381_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal zext_ln331_reg_2236 : STD_LOGIC_VECTOR (5 downto 0);
    signal icmp_ln328_fu_1355_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln331_fu_1395_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal h_reg_976 : STD_LOGIC_VECTOR (3 downto 0);
    signal icmp_ln331_fu_1389_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln337_fu_1406_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal d_fu_278 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_block_state1 : BOOLEAN;
    signal DecoderWeights_0_copy_0_fu_282 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_fu_1411_p42 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln334_fu_1401_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal DecoderWeights_1_copy_0_fu_286 : STD_LOGIC_VECTOR (0 downto 0);
    signal DecoderWeights_2_copy_0_fu_290 : STD_LOGIC_VECTOR (0 downto 0);
    signal DecoderWeights_3_copy_0_fu_294 : STD_LOGIC_VECTOR (0 downto 0);
    signal DecoderWeights_4_copy_0_fu_298 : STD_LOGIC_VECTOR (0 downto 0);
    signal DecoderWeights_5_copy_0_fu_302 : STD_LOGIC_VECTOR (0 downto 0);
    signal DecoderWeights_6_copy_0_fu_306 : STD_LOGIC_VECTOR (0 downto 0);
    signal DecoderWeights_7_copy_0_fu_310 : STD_LOGIC_VECTOR (0 downto 0);
    signal DecoderWeights_8_copy_0_fu_314 : STD_LOGIC_VECTOR (0 downto 0);
    signal DecoderWeights_9_copy_0_fu_318 : STD_LOGIC_VECTOR (0 downto 0);
    signal DecoderWeights_10_copy_0_fu_322 : STD_LOGIC_VECTOR (0 downto 0);
    signal DecoderWeights_11_copy_0_fu_326 : STD_LOGIC_VECTOR (0 downto 0);
    signal DecoderWeights_12_copy_0_fu_330 : STD_LOGIC_VECTOR (0 downto 0);
    signal DecoderWeights_13_copy_0_fu_334 : STD_LOGIC_VECTOR (0 downto 0);
    signal DecoderWeights_14_copy_0_fu_338 : STD_LOGIC_VECTOR (0 downto 0);
    signal DecoderWeights_15_copy_0_fu_342 : STD_LOGIC_VECTOR (0 downto 0);
    signal DecoderWeights_16_copy_0_fu_346 : STD_LOGIC_VECTOR (0 downto 0);
    signal DecoderWeights_17_copy_0_fu_350 : STD_LOGIC_VECTOR (0 downto 0);
    signal DecoderWeights_18_copy_0_fu_354 : STD_LOGIC_VECTOR (0 downto 0);
    signal DecoderWeights_19_copy_0_fu_358 : STD_LOGIC_VECTOR (0 downto 0);
    signal DecoderWeights_20_copy_0_fu_362 : STD_LOGIC_VECTOR (0 downto 0);
    signal DecoderWeights_21_copy_0_fu_366 : STD_LOGIC_VECTOR (0 downto 0);
    signal DecoderWeights_22_copy_0_fu_370 : STD_LOGIC_VECTOR (0 downto 0);
    signal DecoderWeights_23_copy_0_fu_374 : STD_LOGIC_VECTOR (0 downto 0);
    signal DecoderWeights_24_copy_0_fu_378 : STD_LOGIC_VECTOR (0 downto 0);
    signal DecoderWeights_25_copy_0_fu_382 : STD_LOGIC_VECTOR (0 downto 0);
    signal DecoderWeights_26_copy_0_fu_386 : STD_LOGIC_VECTOR (0 downto 0);
    signal DecoderWeights_27_copy_0_fu_390 : STD_LOGIC_VECTOR (0 downto 0);
    signal DecoderWeights_28_copy_0_fu_394 : STD_LOGIC_VECTOR (0 downto 0);
    signal DecoderWeights_29_copy_0_fu_398 : STD_LOGIC_VECTOR (0 downto 0);
    signal DecoderWeights_30_copy_0_fu_402 : STD_LOGIC_VECTOR (0 downto 0);
    signal DecoderWeights_31_copy_0_fu_406 : STD_LOGIC_VECTOR (0 downto 0);
    signal DecoderWeights_32_copy_0_fu_410 : STD_LOGIC_VECTOR (0 downto 0);
    signal DecoderWeights_33_copy_0_fu_414 : STD_LOGIC_VECTOR (0 downto 0);
    signal DecoderWeights_34_copy_0_fu_418 : STD_LOGIC_VECTOR (0 downto 0);
    signal DecoderWeights_35_copy_0_fu_422 : STD_LOGIC_VECTOR (0 downto 0);
    signal DecoderWeights_36_copy_0_fu_426 : STD_LOGIC_VECTOR (0 downto 0);
    signal DecoderWeights_37_copy_0_fu_430 : STD_LOGIC_VECTOR (0 downto 0);
    signal DecoderWeights_38_copy_0_fu_434 : STD_LOGIC_VECTOR (0 downto 0);
    signal DecoderWeights_39_copy_0_fu_438 : STD_LOGIC_VECTOR (0 downto 0);
    signal DecoderWeights_0_out_preg : STD_LOGIC_VECTOR (0 downto 0) := "0";
    signal DecoderWeights_1_out_preg : STD_LOGIC_VECTOR (0 downto 0) := "0";
    signal DecoderWeights_2_out_preg : STD_LOGIC_VECTOR (0 downto 0) := "0";
    signal DecoderWeights_3_out_preg : STD_LOGIC_VECTOR (0 downto 0) := "0";
    signal DecoderWeights_4_out_preg : STD_LOGIC_VECTOR (0 downto 0) := "0";
    signal DecoderWeights_5_out_preg : STD_LOGIC_VECTOR (0 downto 0) := "0";
    signal DecoderWeights_6_out_preg : STD_LOGIC_VECTOR (0 downto 0) := "0";
    signal DecoderWeights_7_out_preg : STD_LOGIC_VECTOR (0 downto 0) := "0";
    signal DecoderWeights_8_out_preg : STD_LOGIC_VECTOR (0 downto 0) := "0";
    signal DecoderWeights_9_out_preg : STD_LOGIC_VECTOR (0 downto 0) := "0";
    signal DecoderWeights_10_out_preg : STD_LOGIC_VECTOR (0 downto 0) := "0";
    signal DecoderWeights_11_out_preg : STD_LOGIC_VECTOR (0 downto 0) := "0";
    signal DecoderWeights_12_out_preg : STD_LOGIC_VECTOR (0 downto 0) := "0";
    signal DecoderWeights_13_out_preg : STD_LOGIC_VECTOR (0 downto 0) := "0";
    signal DecoderWeights_14_out_preg : STD_LOGIC_VECTOR (0 downto 0) := "0";
    signal DecoderWeights_15_out_preg : STD_LOGIC_VECTOR (0 downto 0) := "0";
    signal DecoderWeights_16_out_preg : STD_LOGIC_VECTOR (0 downto 0) := "0";
    signal DecoderWeights_17_out_preg : STD_LOGIC_VECTOR (0 downto 0) := "0";
    signal DecoderWeights_18_out_preg : STD_LOGIC_VECTOR (0 downto 0) := "0";
    signal DecoderWeights_19_out_preg : STD_LOGIC_VECTOR (0 downto 0) := "0";
    signal DecoderWeights_20_out_preg : STD_LOGIC_VECTOR (0 downto 0) := "0";
    signal DecoderWeights_21_out_preg : STD_LOGIC_VECTOR (0 downto 0) := "0";
    signal DecoderWeights_22_out_preg : STD_LOGIC_VECTOR (0 downto 0) := "0";
    signal DecoderWeights_23_out_preg : STD_LOGIC_VECTOR (0 downto 0) := "0";
    signal DecoderWeights_24_out_preg : STD_LOGIC_VECTOR (0 downto 0) := "0";
    signal DecoderWeights_25_out_preg : STD_LOGIC_VECTOR (0 downto 0) := "0";
    signal DecoderWeights_26_out_preg : STD_LOGIC_VECTOR (0 downto 0) := "0";
    signal DecoderWeights_27_out_preg : STD_LOGIC_VECTOR (0 downto 0) := "0";
    signal DecoderWeights_28_out_preg : STD_LOGIC_VECTOR (0 downto 0) := "0";
    signal DecoderWeights_29_out_preg : STD_LOGIC_VECTOR (0 downto 0) := "0";
    signal DecoderWeights_30_out_preg : STD_LOGIC_VECTOR (0 downto 0) := "0";
    signal DecoderWeights_31_out_preg : STD_LOGIC_VECTOR (0 downto 0) := "0";
    signal DecoderWeights_32_out_preg : STD_LOGIC_VECTOR (0 downto 0) := "0";
    signal DecoderWeights_33_out_preg : STD_LOGIC_VECTOR (0 downto 0) := "0";
    signal DecoderWeights_34_out_preg : STD_LOGIC_VECTOR (0 downto 0) := "0";
    signal DecoderWeights_35_out_preg : STD_LOGIC_VECTOR (0 downto 0) := "0";
    signal DecoderWeights_36_out_preg : STD_LOGIC_VECTOR (0 downto 0) := "0";
    signal DecoderWeights_37_out_preg : STD_LOGIC_VECTOR (0 downto 0) := "0";
    signal DecoderWeights_38_out_preg : STD_LOGIC_VECTOR (0 downto 0) := "0";
    signal DecoderWeights_39_out_preg : STD_LOGIC_VECTOR (0 downto 0) := "0";
    signal empty_49_fu_1367_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_5_fu_1371_p4 : STD_LOGIC_VECTOR (4 downto 0);
    signal zext_ln331_1_fu_1385_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_ST_fsm_state3_blk : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component Autoencoder_mux_406_1_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        din4_WIDTH : INTEGER;
        din5_WIDTH : INTEGER;
        din6_WIDTH : INTEGER;
        din7_WIDTH : INTEGER;
        din8_WIDTH : INTEGER;
        din9_WIDTH : INTEGER;
        din10_WIDTH : INTEGER;
        din11_WIDTH : INTEGER;
        din12_WIDTH : INTEGER;
        din13_WIDTH : INTEGER;
        din14_WIDTH : INTEGER;
        din15_WIDTH : INTEGER;
        din16_WIDTH : INTEGER;
        din17_WIDTH : INTEGER;
        din18_WIDTH : INTEGER;
        din19_WIDTH : INTEGER;
        din20_WIDTH : INTEGER;
        din21_WIDTH : INTEGER;
        din22_WIDTH : INTEGER;
        din23_WIDTH : INTEGER;
        din24_WIDTH : INTEGER;
        din25_WIDTH : INTEGER;
        din26_WIDTH : INTEGER;
        din27_WIDTH : INTEGER;
        din28_WIDTH : INTEGER;
        din29_WIDTH : INTEGER;
        din30_WIDTH : INTEGER;
        din31_WIDTH : INTEGER;
        din32_WIDTH : INTEGER;
        din33_WIDTH : INTEGER;
        din34_WIDTH : INTEGER;
        din35_WIDTH : INTEGER;
        din36_WIDTH : INTEGER;
        din37_WIDTH : INTEGER;
        din38_WIDTH : INTEGER;
        din39_WIDTH : INTEGER;
        din40_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (0 downto 0);
        din1 : IN STD_LOGIC_VECTOR (0 downto 0);
        din2 : IN STD_LOGIC_VECTOR (0 downto 0);
        din3 : IN STD_LOGIC_VECTOR (0 downto 0);
        din4 : IN STD_LOGIC_VECTOR (0 downto 0);
        din5 : IN STD_LOGIC_VECTOR (0 downto 0);
        din6 : IN STD_LOGIC_VECTOR (0 downto 0);
        din7 : IN STD_LOGIC_VECTOR (0 downto 0);
        din8 : IN STD_LOGIC_VECTOR (0 downto 0);
        din9 : IN STD_LOGIC_VECTOR (0 downto 0);
        din10 : IN STD_LOGIC_VECTOR (0 downto 0);
        din11 : IN STD_LOGIC_VECTOR (0 downto 0);
        din12 : IN STD_LOGIC_VECTOR (0 downto 0);
        din13 : IN STD_LOGIC_VECTOR (0 downto 0);
        din14 : IN STD_LOGIC_VECTOR (0 downto 0);
        din15 : IN STD_LOGIC_VECTOR (0 downto 0);
        din16 : IN STD_LOGIC_VECTOR (0 downto 0);
        din17 : IN STD_LOGIC_VECTOR (0 downto 0);
        din18 : IN STD_LOGIC_VECTOR (0 downto 0);
        din19 : IN STD_LOGIC_VECTOR (0 downto 0);
        din20 : IN STD_LOGIC_VECTOR (0 downto 0);
        din21 : IN STD_LOGIC_VECTOR (0 downto 0);
        din22 : IN STD_LOGIC_VECTOR (0 downto 0);
        din23 : IN STD_LOGIC_VECTOR (0 downto 0);
        din24 : IN STD_LOGIC_VECTOR (0 downto 0);
        din25 : IN STD_LOGIC_VECTOR (0 downto 0);
        din26 : IN STD_LOGIC_VECTOR (0 downto 0);
        din27 : IN STD_LOGIC_VECTOR (0 downto 0);
        din28 : IN STD_LOGIC_VECTOR (0 downto 0);
        din29 : IN STD_LOGIC_VECTOR (0 downto 0);
        din30 : IN STD_LOGIC_VECTOR (0 downto 0);
        din31 : IN STD_LOGIC_VECTOR (0 downto 0);
        din32 : IN STD_LOGIC_VECTOR (0 downto 0);
        din33 : IN STD_LOGIC_VECTOR (0 downto 0);
        din34 : IN STD_LOGIC_VECTOR (0 downto 0);
        din35 : IN STD_LOGIC_VECTOR (0 downto 0);
        din36 : IN STD_LOGIC_VECTOR (0 downto 0);
        din37 : IN STD_LOGIC_VECTOR (0 downto 0);
        din38 : IN STD_LOGIC_VECTOR (0 downto 0);
        din39 : IN STD_LOGIC_VECTOR (0 downto 0);
        din40 : IN STD_LOGIC_VECTOR (5 downto 0);
        dout : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;



begin
    mux_406_1_1_1_U180 : component Autoencoder_mux_406_1_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 1,
        din1_WIDTH => 1,
        din2_WIDTH => 1,
        din3_WIDTH => 1,
        din4_WIDTH => 1,
        din5_WIDTH => 1,
        din6_WIDTH => 1,
        din7_WIDTH => 1,
        din8_WIDTH => 1,
        din9_WIDTH => 1,
        din10_WIDTH => 1,
        din11_WIDTH => 1,
        din12_WIDTH => 1,
        din13_WIDTH => 1,
        din14_WIDTH => 1,
        din15_WIDTH => 1,
        din16_WIDTH => 1,
        din17_WIDTH => 1,
        din18_WIDTH => 1,
        din19_WIDTH => 1,
        din20_WIDTH => 1,
        din21_WIDTH => 1,
        din22_WIDTH => 1,
        din23_WIDTH => 1,
        din24_WIDTH => 1,
        din25_WIDTH => 1,
        din26_WIDTH => 1,
        din27_WIDTH => 1,
        din28_WIDTH => 1,
        din29_WIDTH => 1,
        din30_WIDTH => 1,
        din31_WIDTH => 1,
        din32_WIDTH => 1,
        din33_WIDTH => 1,
        din34_WIDTH => 1,
        din35_WIDTH => 1,
        din36_WIDTH => 1,
        din37_WIDTH => 1,
        din38_WIDTH => 1,
        din39_WIDTH => 1,
        din40_WIDTH => 6,
        dout_WIDTH => 1)
    port map (
        din0 => DecoderWeights_0_copy_0_fu_282,
        din1 => DecoderWeights_1_copy_0_fu_286,
        din2 => DecoderWeights_2_copy_0_fu_290,
        din3 => DecoderWeights_3_copy_0_fu_294,
        din4 => DecoderWeights_4_copy_0_fu_298,
        din5 => DecoderWeights_5_copy_0_fu_302,
        din6 => DecoderWeights_6_copy_0_fu_306,
        din7 => DecoderWeights_7_copy_0_fu_310,
        din8 => DecoderWeights_8_copy_0_fu_314,
        din9 => DecoderWeights_9_copy_0_fu_318,
        din10 => DecoderWeights_10_copy_0_fu_322,
        din11 => DecoderWeights_11_copy_0_fu_326,
        din12 => DecoderWeights_12_copy_0_fu_330,
        din13 => DecoderWeights_13_copy_0_fu_334,
        din14 => DecoderWeights_14_copy_0_fu_338,
        din15 => DecoderWeights_15_copy_0_fu_342,
        din16 => DecoderWeights_16_copy_0_fu_346,
        din17 => DecoderWeights_17_copy_0_fu_350,
        din18 => DecoderWeights_18_copy_0_fu_354,
        din19 => DecoderWeights_19_copy_0_fu_358,
        din20 => DecoderWeights_20_copy_0_fu_362,
        din21 => DecoderWeights_21_copy_0_fu_366,
        din22 => DecoderWeights_22_copy_0_fu_370,
        din23 => DecoderWeights_23_copy_0_fu_374,
        din24 => DecoderWeights_24_copy_0_fu_378,
        din25 => DecoderWeights_25_copy_0_fu_382,
        din26 => DecoderWeights_26_copy_0_fu_386,
        din27 => DecoderWeights_27_copy_0_fu_390,
        din28 => DecoderWeights_28_copy_0_fu_394,
        din29 => DecoderWeights_29_copy_0_fu_398,
        din30 => DecoderWeights_30_copy_0_fu_402,
        din31 => DecoderWeights_31_copy_0_fu_406,
        din32 => DecoderWeights_32_copy_0_fu_410,
        din33 => DecoderWeights_33_copy_0_fu_414,
        din34 => DecoderWeights_34_copy_0_fu_418,
        din35 => DecoderWeights_35_copy_0_fu_422,
        din36 => DecoderWeights_36_copy_0_fu_426,
        din37 => DecoderWeights_37_copy_0_fu_430,
        din38 => DecoderWeights_38_copy_0_fu_434,
        din39 => DecoderWeights_39_copy_0_fu_438,
        din40 => add_ln334_fu_1401_p2,
        dout => tmp_fu_1411_p42);





    DecoderWeights_0_out_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                DecoderWeights_0_out_preg <= ap_const_lv1_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln328_fu_1355_p2 = ap_const_lv1_1))) then 
                    DecoderWeights_0_out_preg <= DecoderWeights_0_copy_0_fu_282;
                end if; 
            end if;
        end if;
    end process;


    DecoderWeights_10_out_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                DecoderWeights_10_out_preg <= ap_const_lv1_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln328_fu_1355_p2 = ap_const_lv1_1))) then 
                    DecoderWeights_10_out_preg <= DecoderWeights_10_copy_0_fu_322;
                end if; 
            end if;
        end if;
    end process;


    DecoderWeights_11_out_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                DecoderWeights_11_out_preg <= ap_const_lv1_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln328_fu_1355_p2 = ap_const_lv1_1))) then 
                    DecoderWeights_11_out_preg <= DecoderWeights_11_copy_0_fu_326;
                end if; 
            end if;
        end if;
    end process;


    DecoderWeights_12_out_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                DecoderWeights_12_out_preg <= ap_const_lv1_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln328_fu_1355_p2 = ap_const_lv1_1))) then 
                    DecoderWeights_12_out_preg <= DecoderWeights_12_copy_0_fu_330;
                end if; 
            end if;
        end if;
    end process;


    DecoderWeights_13_out_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                DecoderWeights_13_out_preg <= ap_const_lv1_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln328_fu_1355_p2 = ap_const_lv1_1))) then 
                    DecoderWeights_13_out_preg <= DecoderWeights_13_copy_0_fu_334;
                end if; 
            end if;
        end if;
    end process;


    DecoderWeights_14_out_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                DecoderWeights_14_out_preg <= ap_const_lv1_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln328_fu_1355_p2 = ap_const_lv1_1))) then 
                    DecoderWeights_14_out_preg <= DecoderWeights_14_copy_0_fu_338;
                end if; 
            end if;
        end if;
    end process;


    DecoderWeights_15_out_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                DecoderWeights_15_out_preg <= ap_const_lv1_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln328_fu_1355_p2 = ap_const_lv1_1))) then 
                    DecoderWeights_15_out_preg <= DecoderWeights_15_copy_0_fu_342;
                end if; 
            end if;
        end if;
    end process;


    DecoderWeights_16_out_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                DecoderWeights_16_out_preg <= ap_const_lv1_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln328_fu_1355_p2 = ap_const_lv1_1))) then 
                    DecoderWeights_16_out_preg <= DecoderWeights_16_copy_0_fu_346;
                end if; 
            end if;
        end if;
    end process;


    DecoderWeights_17_out_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                DecoderWeights_17_out_preg <= ap_const_lv1_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln328_fu_1355_p2 = ap_const_lv1_1))) then 
                    DecoderWeights_17_out_preg <= DecoderWeights_17_copy_0_fu_350;
                end if; 
            end if;
        end if;
    end process;


    DecoderWeights_18_out_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                DecoderWeights_18_out_preg <= ap_const_lv1_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln328_fu_1355_p2 = ap_const_lv1_1))) then 
                    DecoderWeights_18_out_preg <= DecoderWeights_18_copy_0_fu_354;
                end if; 
            end if;
        end if;
    end process;


    DecoderWeights_19_out_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                DecoderWeights_19_out_preg <= ap_const_lv1_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln328_fu_1355_p2 = ap_const_lv1_1))) then 
                    DecoderWeights_19_out_preg <= DecoderWeights_19_copy_0_fu_358;
                end if; 
            end if;
        end if;
    end process;


    DecoderWeights_1_out_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                DecoderWeights_1_out_preg <= ap_const_lv1_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln328_fu_1355_p2 = ap_const_lv1_1))) then 
                    DecoderWeights_1_out_preg <= DecoderWeights_1_copy_0_fu_286;
                end if; 
            end if;
        end if;
    end process;


    DecoderWeights_20_out_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                DecoderWeights_20_out_preg <= ap_const_lv1_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln328_fu_1355_p2 = ap_const_lv1_1))) then 
                    DecoderWeights_20_out_preg <= DecoderWeights_20_copy_0_fu_362;
                end if; 
            end if;
        end if;
    end process;


    DecoderWeights_21_out_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                DecoderWeights_21_out_preg <= ap_const_lv1_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln328_fu_1355_p2 = ap_const_lv1_1))) then 
                    DecoderWeights_21_out_preg <= DecoderWeights_21_copy_0_fu_366;
                end if; 
            end if;
        end if;
    end process;


    DecoderWeights_22_out_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                DecoderWeights_22_out_preg <= ap_const_lv1_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln328_fu_1355_p2 = ap_const_lv1_1))) then 
                    DecoderWeights_22_out_preg <= DecoderWeights_22_copy_0_fu_370;
                end if; 
            end if;
        end if;
    end process;


    DecoderWeights_23_out_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                DecoderWeights_23_out_preg <= ap_const_lv1_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln328_fu_1355_p2 = ap_const_lv1_1))) then 
                    DecoderWeights_23_out_preg <= DecoderWeights_23_copy_0_fu_374;
                end if; 
            end if;
        end if;
    end process;


    DecoderWeights_24_out_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                DecoderWeights_24_out_preg <= ap_const_lv1_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln328_fu_1355_p2 = ap_const_lv1_1))) then 
                    DecoderWeights_24_out_preg <= DecoderWeights_24_copy_0_fu_378;
                end if; 
            end if;
        end if;
    end process;


    DecoderWeights_25_out_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                DecoderWeights_25_out_preg <= ap_const_lv1_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln328_fu_1355_p2 = ap_const_lv1_1))) then 
                    DecoderWeights_25_out_preg <= DecoderWeights_25_copy_0_fu_382;
                end if; 
            end if;
        end if;
    end process;


    DecoderWeights_26_out_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                DecoderWeights_26_out_preg <= ap_const_lv1_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln328_fu_1355_p2 = ap_const_lv1_1))) then 
                    DecoderWeights_26_out_preg <= DecoderWeights_26_copy_0_fu_386;
                end if; 
            end if;
        end if;
    end process;


    DecoderWeights_27_out_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                DecoderWeights_27_out_preg <= ap_const_lv1_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln328_fu_1355_p2 = ap_const_lv1_1))) then 
                    DecoderWeights_27_out_preg <= DecoderWeights_27_copy_0_fu_390;
                end if; 
            end if;
        end if;
    end process;


    DecoderWeights_28_out_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                DecoderWeights_28_out_preg <= ap_const_lv1_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln328_fu_1355_p2 = ap_const_lv1_1))) then 
                    DecoderWeights_28_out_preg <= DecoderWeights_28_copy_0_fu_394;
                end if; 
            end if;
        end if;
    end process;


    DecoderWeights_29_out_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                DecoderWeights_29_out_preg <= ap_const_lv1_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln328_fu_1355_p2 = ap_const_lv1_1))) then 
                    DecoderWeights_29_out_preg <= DecoderWeights_29_copy_0_fu_398;
                end if; 
            end if;
        end if;
    end process;


    DecoderWeights_2_out_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                DecoderWeights_2_out_preg <= ap_const_lv1_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln328_fu_1355_p2 = ap_const_lv1_1))) then 
                    DecoderWeights_2_out_preg <= DecoderWeights_2_copy_0_fu_290;
                end if; 
            end if;
        end if;
    end process;


    DecoderWeights_30_out_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                DecoderWeights_30_out_preg <= ap_const_lv1_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln328_fu_1355_p2 = ap_const_lv1_1))) then 
                    DecoderWeights_30_out_preg <= DecoderWeights_30_copy_0_fu_402;
                end if; 
            end if;
        end if;
    end process;


    DecoderWeights_31_out_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                DecoderWeights_31_out_preg <= ap_const_lv1_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln328_fu_1355_p2 = ap_const_lv1_1))) then 
                    DecoderWeights_31_out_preg <= DecoderWeights_31_copy_0_fu_406;
                end if; 
            end if;
        end if;
    end process;


    DecoderWeights_32_out_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                DecoderWeights_32_out_preg <= ap_const_lv1_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln328_fu_1355_p2 = ap_const_lv1_1))) then 
                    DecoderWeights_32_out_preg <= DecoderWeights_32_copy_0_fu_410;
                end if; 
            end if;
        end if;
    end process;


    DecoderWeights_33_out_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                DecoderWeights_33_out_preg <= ap_const_lv1_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln328_fu_1355_p2 = ap_const_lv1_1))) then 
                    DecoderWeights_33_out_preg <= DecoderWeights_33_copy_0_fu_414;
                end if; 
            end if;
        end if;
    end process;


    DecoderWeights_34_out_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                DecoderWeights_34_out_preg <= ap_const_lv1_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln328_fu_1355_p2 = ap_const_lv1_1))) then 
                    DecoderWeights_34_out_preg <= DecoderWeights_34_copy_0_fu_418;
                end if; 
            end if;
        end if;
    end process;


    DecoderWeights_35_out_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                DecoderWeights_35_out_preg <= ap_const_lv1_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln328_fu_1355_p2 = ap_const_lv1_1))) then 
                    DecoderWeights_35_out_preg <= DecoderWeights_35_copy_0_fu_422;
                end if; 
            end if;
        end if;
    end process;


    DecoderWeights_36_out_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                DecoderWeights_36_out_preg <= ap_const_lv1_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln328_fu_1355_p2 = ap_const_lv1_1))) then 
                    DecoderWeights_36_out_preg <= DecoderWeights_36_copy_0_fu_426;
                end if; 
            end if;
        end if;
    end process;


    DecoderWeights_37_out_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                DecoderWeights_37_out_preg <= ap_const_lv1_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln328_fu_1355_p2 = ap_const_lv1_1))) then 
                    DecoderWeights_37_out_preg <= DecoderWeights_37_copy_0_fu_430;
                end if; 
            end if;
        end if;
    end process;


    DecoderWeights_38_out_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                DecoderWeights_38_out_preg <= ap_const_lv1_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln328_fu_1355_p2 = ap_const_lv1_1))) then 
                    DecoderWeights_38_out_preg <= DecoderWeights_38_copy_0_fu_434;
                end if; 
            end if;
        end if;
    end process;


    DecoderWeights_39_out_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                DecoderWeights_39_out_preg <= ap_const_lv1_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln328_fu_1355_p2 = ap_const_lv1_1))) then 
                    DecoderWeights_39_out_preg <= DecoderWeights_39_copy_0_fu_438;
                end if; 
            end if;
        end if;
    end process;


    DecoderWeights_3_out_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                DecoderWeights_3_out_preg <= ap_const_lv1_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln328_fu_1355_p2 = ap_const_lv1_1))) then 
                    DecoderWeights_3_out_preg <= DecoderWeights_3_copy_0_fu_294;
                end if; 
            end if;
        end if;
    end process;


    DecoderWeights_4_out_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                DecoderWeights_4_out_preg <= ap_const_lv1_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln328_fu_1355_p2 = ap_const_lv1_1))) then 
                    DecoderWeights_4_out_preg <= DecoderWeights_4_copy_0_fu_298;
                end if; 
            end if;
        end if;
    end process;


    DecoderWeights_5_out_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                DecoderWeights_5_out_preg <= ap_const_lv1_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln328_fu_1355_p2 = ap_const_lv1_1))) then 
                    DecoderWeights_5_out_preg <= DecoderWeights_5_copy_0_fu_302;
                end if; 
            end if;
        end if;
    end process;


    DecoderWeights_6_out_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                DecoderWeights_6_out_preg <= ap_const_lv1_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln328_fu_1355_p2 = ap_const_lv1_1))) then 
                    DecoderWeights_6_out_preg <= DecoderWeights_6_copy_0_fu_306;
                end if; 
            end if;
        end if;
    end process;


    DecoderWeights_7_out_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                DecoderWeights_7_out_preg <= ap_const_lv1_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln328_fu_1355_p2 = ap_const_lv1_1))) then 
                    DecoderWeights_7_out_preg <= DecoderWeights_7_copy_0_fu_310;
                end if; 
            end if;
        end if;
    end process;


    DecoderWeights_8_out_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                DecoderWeights_8_out_preg <= ap_const_lv1_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln328_fu_1355_p2 = ap_const_lv1_1))) then 
                    DecoderWeights_8_out_preg <= DecoderWeights_8_copy_0_fu_314;
                end if; 
            end if;
        end if;
    end process;


    DecoderWeights_9_out_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                DecoderWeights_9_out_preg <= ap_const_lv1_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln328_fu_1355_p2 = ap_const_lv1_1))) then 
                    DecoderWeights_9_out_preg <= DecoderWeights_9_copy_0_fu_318;
                end if; 
            end if;
        end if;
    end process;


    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln328_fu_1355_p2 = ap_const_lv1_1))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    DecoderWeights_0_copy_0_fu_282_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                DecoderWeights_0_copy_0_fu_282 <= p_read;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state3) and (ap_const_lv6_0 = add_ln334_fu_1401_p2) and (icmp_ln331_fu_1389_p2 = ap_const_lv1_0))) then 
                DecoderWeights_0_copy_0_fu_282 <= tmp_fu_1411_p42;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state3) and (ap_const_lv6_0 = add_ln334_fu_1401_p2) and (tmp_fu_1411_p42 = ap_const_lv1_0) and (icmp_ln331_fu_1389_p2 = ap_const_lv1_0))) then 
                DecoderWeights_0_copy_0_fu_282 <= ap_const_lv1_0;
            end if; 
        end if;
    end process;

    DecoderWeights_10_copy_0_fu_322_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                DecoderWeights_10_copy_0_fu_322 <= p_read10;
            elsif (((ap_const_lv6_A = add_ln334_fu_1401_p2) and (ap_const_logic_1 = ap_CS_fsm_state3) and (icmp_ln331_fu_1389_p2 = ap_const_lv1_0))) then 
                DecoderWeights_10_copy_0_fu_322 <= tmp_fu_1411_p42;
            elsif (((ap_const_lv6_A = add_ln334_fu_1401_p2) and (ap_const_logic_1 = ap_CS_fsm_state3) and (tmp_fu_1411_p42 = ap_const_lv1_0) and (icmp_ln331_fu_1389_p2 = ap_const_lv1_0))) then 
                DecoderWeights_10_copy_0_fu_322 <= ap_const_lv1_0;
            end if; 
        end if;
    end process;

    DecoderWeights_11_copy_0_fu_326_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                DecoderWeights_11_copy_0_fu_326 <= p_read11;
            elsif (((ap_const_lv6_B = add_ln334_fu_1401_p2) and (ap_const_logic_1 = ap_CS_fsm_state3) and (icmp_ln331_fu_1389_p2 = ap_const_lv1_0))) then 
                DecoderWeights_11_copy_0_fu_326 <= tmp_fu_1411_p42;
            elsif (((ap_const_lv6_B = add_ln334_fu_1401_p2) and (ap_const_logic_1 = ap_CS_fsm_state3) and (tmp_fu_1411_p42 = ap_const_lv1_0) and (icmp_ln331_fu_1389_p2 = ap_const_lv1_0))) then 
                DecoderWeights_11_copy_0_fu_326 <= ap_const_lv1_0;
            end if; 
        end if;
    end process;

    DecoderWeights_12_copy_0_fu_330_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                DecoderWeights_12_copy_0_fu_330 <= p_read12;
            elsif (((ap_const_lv6_C = add_ln334_fu_1401_p2) and (ap_const_logic_1 = ap_CS_fsm_state3) and (icmp_ln331_fu_1389_p2 = ap_const_lv1_0))) then 
                DecoderWeights_12_copy_0_fu_330 <= tmp_fu_1411_p42;
            elsif (((ap_const_lv6_C = add_ln334_fu_1401_p2) and (ap_const_logic_1 = ap_CS_fsm_state3) and (tmp_fu_1411_p42 = ap_const_lv1_0) and (icmp_ln331_fu_1389_p2 = ap_const_lv1_0))) then 
                DecoderWeights_12_copy_0_fu_330 <= ap_const_lv1_0;
            end if; 
        end if;
    end process;

    DecoderWeights_13_copy_0_fu_334_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                DecoderWeights_13_copy_0_fu_334 <= p_read13;
            elsif (((ap_const_lv6_D = add_ln334_fu_1401_p2) and (ap_const_logic_1 = ap_CS_fsm_state3) and (icmp_ln331_fu_1389_p2 = ap_const_lv1_0))) then 
                DecoderWeights_13_copy_0_fu_334 <= tmp_fu_1411_p42;
            elsif (((ap_const_lv6_D = add_ln334_fu_1401_p2) and (ap_const_logic_1 = ap_CS_fsm_state3) and (tmp_fu_1411_p42 = ap_const_lv1_0) and (icmp_ln331_fu_1389_p2 = ap_const_lv1_0))) then 
                DecoderWeights_13_copy_0_fu_334 <= ap_const_lv1_0;
            end if; 
        end if;
    end process;

    DecoderWeights_14_copy_0_fu_338_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                DecoderWeights_14_copy_0_fu_338 <= p_read14;
            elsif (((ap_const_lv6_E = add_ln334_fu_1401_p2) and (ap_const_logic_1 = ap_CS_fsm_state3) and (icmp_ln331_fu_1389_p2 = ap_const_lv1_0))) then 
                DecoderWeights_14_copy_0_fu_338 <= tmp_fu_1411_p42;
            elsif (((ap_const_lv6_E = add_ln334_fu_1401_p2) and (ap_const_logic_1 = ap_CS_fsm_state3) and (tmp_fu_1411_p42 = ap_const_lv1_0) and (icmp_ln331_fu_1389_p2 = ap_const_lv1_0))) then 
                DecoderWeights_14_copy_0_fu_338 <= ap_const_lv1_0;
            end if; 
        end if;
    end process;

    DecoderWeights_15_copy_0_fu_342_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                DecoderWeights_15_copy_0_fu_342 <= p_read15;
            elsif (((ap_const_lv6_F = add_ln334_fu_1401_p2) and (ap_const_logic_1 = ap_CS_fsm_state3) and (icmp_ln331_fu_1389_p2 = ap_const_lv1_0))) then 
                DecoderWeights_15_copy_0_fu_342 <= tmp_fu_1411_p42;
            elsif (((ap_const_lv6_F = add_ln334_fu_1401_p2) and (ap_const_logic_1 = ap_CS_fsm_state3) and (tmp_fu_1411_p42 = ap_const_lv1_0) and (icmp_ln331_fu_1389_p2 = ap_const_lv1_0))) then 
                DecoderWeights_15_copy_0_fu_342 <= ap_const_lv1_0;
            end if; 
        end if;
    end process;

    DecoderWeights_16_copy_0_fu_346_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                DecoderWeights_16_copy_0_fu_346 <= p_read16;
            elsif (((ap_const_lv6_10 = add_ln334_fu_1401_p2) and (ap_const_logic_1 = ap_CS_fsm_state3) and (icmp_ln331_fu_1389_p2 = ap_const_lv1_0))) then 
                DecoderWeights_16_copy_0_fu_346 <= tmp_fu_1411_p42;
            elsif (((ap_const_lv6_10 = add_ln334_fu_1401_p2) and (ap_const_logic_1 = ap_CS_fsm_state3) and (tmp_fu_1411_p42 = ap_const_lv1_0) and (icmp_ln331_fu_1389_p2 = ap_const_lv1_0))) then 
                DecoderWeights_16_copy_0_fu_346 <= ap_const_lv1_0;
            end if; 
        end if;
    end process;

    DecoderWeights_17_copy_0_fu_350_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                DecoderWeights_17_copy_0_fu_350 <= p_read17;
            elsif (((ap_const_lv6_11 = add_ln334_fu_1401_p2) and (ap_const_logic_1 = ap_CS_fsm_state3) and (icmp_ln331_fu_1389_p2 = ap_const_lv1_0))) then 
                DecoderWeights_17_copy_0_fu_350 <= tmp_fu_1411_p42;
            elsif (((ap_const_lv6_11 = add_ln334_fu_1401_p2) and (ap_const_logic_1 = ap_CS_fsm_state3) and (tmp_fu_1411_p42 = ap_const_lv1_0) and (icmp_ln331_fu_1389_p2 = ap_const_lv1_0))) then 
                DecoderWeights_17_copy_0_fu_350 <= ap_const_lv1_0;
            end if; 
        end if;
    end process;

    DecoderWeights_18_copy_0_fu_354_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                DecoderWeights_18_copy_0_fu_354 <= p_read18;
            elsif (((ap_const_lv6_12 = add_ln334_fu_1401_p2) and (ap_const_logic_1 = ap_CS_fsm_state3) and (icmp_ln331_fu_1389_p2 = ap_const_lv1_0))) then 
                DecoderWeights_18_copy_0_fu_354 <= tmp_fu_1411_p42;
            elsif (((ap_const_lv6_12 = add_ln334_fu_1401_p2) and (ap_const_logic_1 = ap_CS_fsm_state3) and (tmp_fu_1411_p42 = ap_const_lv1_0) and (icmp_ln331_fu_1389_p2 = ap_const_lv1_0))) then 
                DecoderWeights_18_copy_0_fu_354 <= ap_const_lv1_0;
            end if; 
        end if;
    end process;

    DecoderWeights_19_copy_0_fu_358_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                DecoderWeights_19_copy_0_fu_358 <= p_read19;
            elsif (((ap_const_lv6_13 = add_ln334_fu_1401_p2) and (ap_const_logic_1 = ap_CS_fsm_state3) and (icmp_ln331_fu_1389_p2 = ap_const_lv1_0))) then 
                DecoderWeights_19_copy_0_fu_358 <= tmp_fu_1411_p42;
            elsif (((ap_const_lv6_13 = add_ln334_fu_1401_p2) and (ap_const_logic_1 = ap_CS_fsm_state3) and (tmp_fu_1411_p42 = ap_const_lv1_0) and (icmp_ln331_fu_1389_p2 = ap_const_lv1_0))) then 
                DecoderWeights_19_copy_0_fu_358 <= ap_const_lv1_0;
            end if; 
        end if;
    end process;

    DecoderWeights_1_copy_0_fu_286_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                DecoderWeights_1_copy_0_fu_286 <= p_read1;
            elsif (((ap_const_lv6_1 = add_ln334_fu_1401_p2) and (ap_const_logic_1 = ap_CS_fsm_state3) and (icmp_ln331_fu_1389_p2 = ap_const_lv1_0))) then 
                DecoderWeights_1_copy_0_fu_286 <= tmp_fu_1411_p42;
            elsif (((ap_const_lv6_1 = add_ln334_fu_1401_p2) and (ap_const_logic_1 = ap_CS_fsm_state3) and (tmp_fu_1411_p42 = ap_const_lv1_0) and (icmp_ln331_fu_1389_p2 = ap_const_lv1_0))) then 
                DecoderWeights_1_copy_0_fu_286 <= ap_const_lv1_0;
            end if; 
        end if;
    end process;

    DecoderWeights_20_copy_0_fu_362_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                DecoderWeights_20_copy_0_fu_362 <= p_read20;
            elsif (((ap_const_lv6_14 = add_ln334_fu_1401_p2) and (ap_const_logic_1 = ap_CS_fsm_state3) and (icmp_ln331_fu_1389_p2 = ap_const_lv1_0))) then 
                DecoderWeights_20_copy_0_fu_362 <= tmp_fu_1411_p42;
            elsif (((ap_const_lv6_14 = add_ln334_fu_1401_p2) and (ap_const_logic_1 = ap_CS_fsm_state3) and (tmp_fu_1411_p42 = ap_const_lv1_0) and (icmp_ln331_fu_1389_p2 = ap_const_lv1_0))) then 
                DecoderWeights_20_copy_0_fu_362 <= ap_const_lv1_0;
            end if; 
        end if;
    end process;

    DecoderWeights_21_copy_0_fu_366_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                DecoderWeights_21_copy_0_fu_366 <= p_read21;
            elsif (((ap_const_lv6_15 = add_ln334_fu_1401_p2) and (ap_const_logic_1 = ap_CS_fsm_state3) and (icmp_ln331_fu_1389_p2 = ap_const_lv1_0))) then 
                DecoderWeights_21_copy_0_fu_366 <= tmp_fu_1411_p42;
            elsif (((ap_const_lv6_15 = add_ln334_fu_1401_p2) and (ap_const_logic_1 = ap_CS_fsm_state3) and (tmp_fu_1411_p42 = ap_const_lv1_0) and (icmp_ln331_fu_1389_p2 = ap_const_lv1_0))) then 
                DecoderWeights_21_copy_0_fu_366 <= ap_const_lv1_0;
            end if; 
        end if;
    end process;

    DecoderWeights_22_copy_0_fu_370_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                DecoderWeights_22_copy_0_fu_370 <= p_read22;
            elsif (((ap_const_lv6_16 = add_ln334_fu_1401_p2) and (ap_const_logic_1 = ap_CS_fsm_state3) and (icmp_ln331_fu_1389_p2 = ap_const_lv1_0))) then 
                DecoderWeights_22_copy_0_fu_370 <= tmp_fu_1411_p42;
            elsif (((ap_const_lv6_16 = add_ln334_fu_1401_p2) and (ap_const_logic_1 = ap_CS_fsm_state3) and (tmp_fu_1411_p42 = ap_const_lv1_0) and (icmp_ln331_fu_1389_p2 = ap_const_lv1_0))) then 
                DecoderWeights_22_copy_0_fu_370 <= ap_const_lv1_0;
            end if; 
        end if;
    end process;

    DecoderWeights_23_copy_0_fu_374_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                DecoderWeights_23_copy_0_fu_374 <= p_read23;
            elsif (((ap_const_lv6_17 = add_ln334_fu_1401_p2) and (ap_const_logic_1 = ap_CS_fsm_state3) and (icmp_ln331_fu_1389_p2 = ap_const_lv1_0))) then 
                DecoderWeights_23_copy_0_fu_374 <= tmp_fu_1411_p42;
            elsif (((ap_const_lv6_17 = add_ln334_fu_1401_p2) and (ap_const_logic_1 = ap_CS_fsm_state3) and (tmp_fu_1411_p42 = ap_const_lv1_0) and (icmp_ln331_fu_1389_p2 = ap_const_lv1_0))) then 
                DecoderWeights_23_copy_0_fu_374 <= ap_const_lv1_0;
            end if; 
        end if;
    end process;

    DecoderWeights_24_copy_0_fu_378_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                DecoderWeights_24_copy_0_fu_378 <= p_read24;
            elsif (((ap_const_lv6_18 = add_ln334_fu_1401_p2) and (ap_const_logic_1 = ap_CS_fsm_state3) and (icmp_ln331_fu_1389_p2 = ap_const_lv1_0))) then 
                DecoderWeights_24_copy_0_fu_378 <= tmp_fu_1411_p42;
            elsif (((ap_const_lv6_18 = add_ln334_fu_1401_p2) and (ap_const_logic_1 = ap_CS_fsm_state3) and (tmp_fu_1411_p42 = ap_const_lv1_0) and (icmp_ln331_fu_1389_p2 = ap_const_lv1_0))) then 
                DecoderWeights_24_copy_0_fu_378 <= ap_const_lv1_0;
            end if; 
        end if;
    end process;

    DecoderWeights_25_copy_0_fu_382_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                DecoderWeights_25_copy_0_fu_382 <= p_read25;
            elsif (((ap_const_lv6_19 = add_ln334_fu_1401_p2) and (ap_const_logic_1 = ap_CS_fsm_state3) and (icmp_ln331_fu_1389_p2 = ap_const_lv1_0))) then 
                DecoderWeights_25_copy_0_fu_382 <= tmp_fu_1411_p42;
            elsif (((ap_const_lv6_19 = add_ln334_fu_1401_p2) and (ap_const_logic_1 = ap_CS_fsm_state3) and (tmp_fu_1411_p42 = ap_const_lv1_0) and (icmp_ln331_fu_1389_p2 = ap_const_lv1_0))) then 
                DecoderWeights_25_copy_0_fu_382 <= ap_const_lv1_0;
            end if; 
        end if;
    end process;

    DecoderWeights_26_copy_0_fu_386_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                DecoderWeights_26_copy_0_fu_386 <= p_read26;
            elsif (((ap_const_lv6_1A = add_ln334_fu_1401_p2) and (ap_const_logic_1 = ap_CS_fsm_state3) and (icmp_ln331_fu_1389_p2 = ap_const_lv1_0))) then 
                DecoderWeights_26_copy_0_fu_386 <= tmp_fu_1411_p42;
            elsif (((ap_const_lv6_1A = add_ln334_fu_1401_p2) and (ap_const_logic_1 = ap_CS_fsm_state3) and (tmp_fu_1411_p42 = ap_const_lv1_0) and (icmp_ln331_fu_1389_p2 = ap_const_lv1_0))) then 
                DecoderWeights_26_copy_0_fu_386 <= ap_const_lv1_0;
            end if; 
        end if;
    end process;

    DecoderWeights_27_copy_0_fu_390_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                DecoderWeights_27_copy_0_fu_390 <= p_read27;
            elsif (((ap_const_lv6_1B = add_ln334_fu_1401_p2) and (ap_const_logic_1 = ap_CS_fsm_state3) and (icmp_ln331_fu_1389_p2 = ap_const_lv1_0))) then 
                DecoderWeights_27_copy_0_fu_390 <= tmp_fu_1411_p42;
            elsif (((ap_const_lv6_1B = add_ln334_fu_1401_p2) and (ap_const_logic_1 = ap_CS_fsm_state3) and (tmp_fu_1411_p42 = ap_const_lv1_0) and (icmp_ln331_fu_1389_p2 = ap_const_lv1_0))) then 
                DecoderWeights_27_copy_0_fu_390 <= ap_const_lv1_0;
            end if; 
        end if;
    end process;

    DecoderWeights_28_copy_0_fu_394_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                DecoderWeights_28_copy_0_fu_394 <= p_read28;
            elsif (((ap_const_lv6_1C = add_ln334_fu_1401_p2) and (ap_const_logic_1 = ap_CS_fsm_state3) and (icmp_ln331_fu_1389_p2 = ap_const_lv1_0))) then 
                DecoderWeights_28_copy_0_fu_394 <= tmp_fu_1411_p42;
            elsif (((ap_const_lv6_1C = add_ln334_fu_1401_p2) and (ap_const_logic_1 = ap_CS_fsm_state3) and (tmp_fu_1411_p42 = ap_const_lv1_0) and (icmp_ln331_fu_1389_p2 = ap_const_lv1_0))) then 
                DecoderWeights_28_copy_0_fu_394 <= ap_const_lv1_0;
            end if; 
        end if;
    end process;

    DecoderWeights_29_copy_0_fu_398_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                DecoderWeights_29_copy_0_fu_398 <= p_read29;
            elsif (((ap_const_lv6_1D = add_ln334_fu_1401_p2) and (ap_const_logic_1 = ap_CS_fsm_state3) and (icmp_ln331_fu_1389_p2 = ap_const_lv1_0))) then 
                DecoderWeights_29_copy_0_fu_398 <= tmp_fu_1411_p42;
            elsif (((ap_const_lv6_1D = add_ln334_fu_1401_p2) and (ap_const_logic_1 = ap_CS_fsm_state3) and (tmp_fu_1411_p42 = ap_const_lv1_0) and (icmp_ln331_fu_1389_p2 = ap_const_lv1_0))) then 
                DecoderWeights_29_copy_0_fu_398 <= ap_const_lv1_0;
            end if; 
        end if;
    end process;

    DecoderWeights_2_copy_0_fu_290_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                DecoderWeights_2_copy_0_fu_290 <= p_read2;
            elsif (((ap_const_lv6_2 = add_ln334_fu_1401_p2) and (ap_const_logic_1 = ap_CS_fsm_state3) and (icmp_ln331_fu_1389_p2 = ap_const_lv1_0))) then 
                DecoderWeights_2_copy_0_fu_290 <= tmp_fu_1411_p42;
            elsif (((ap_const_lv6_2 = add_ln334_fu_1401_p2) and (ap_const_logic_1 = ap_CS_fsm_state3) and (tmp_fu_1411_p42 = ap_const_lv1_0) and (icmp_ln331_fu_1389_p2 = ap_const_lv1_0))) then 
                DecoderWeights_2_copy_0_fu_290 <= ap_const_lv1_0;
            end if; 
        end if;
    end process;

    DecoderWeights_30_copy_0_fu_402_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                DecoderWeights_30_copy_0_fu_402 <= p_read30;
            elsif (((ap_const_lv6_1E = add_ln334_fu_1401_p2) and (ap_const_logic_1 = ap_CS_fsm_state3) and (icmp_ln331_fu_1389_p2 = ap_const_lv1_0))) then 
                DecoderWeights_30_copy_0_fu_402 <= tmp_fu_1411_p42;
            elsif (((ap_const_lv6_1E = add_ln334_fu_1401_p2) and (ap_const_logic_1 = ap_CS_fsm_state3) and (tmp_fu_1411_p42 = ap_const_lv1_0) and (icmp_ln331_fu_1389_p2 = ap_const_lv1_0))) then 
                DecoderWeights_30_copy_0_fu_402 <= ap_const_lv1_0;
            end if; 
        end if;
    end process;

    DecoderWeights_31_copy_0_fu_406_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                DecoderWeights_31_copy_0_fu_406 <= p_read31;
            elsif (((ap_const_lv6_1F = add_ln334_fu_1401_p2) and (ap_const_logic_1 = ap_CS_fsm_state3) and (icmp_ln331_fu_1389_p2 = ap_const_lv1_0))) then 
                DecoderWeights_31_copy_0_fu_406 <= tmp_fu_1411_p42;
            elsif (((ap_const_lv6_1F = add_ln334_fu_1401_p2) and (ap_const_logic_1 = ap_CS_fsm_state3) and (tmp_fu_1411_p42 = ap_const_lv1_0) and (icmp_ln331_fu_1389_p2 = ap_const_lv1_0))) then 
                DecoderWeights_31_copy_0_fu_406 <= ap_const_lv1_0;
            end if; 
        end if;
    end process;

    DecoderWeights_32_copy_0_fu_410_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                DecoderWeights_32_copy_0_fu_410 <= p_read32;
            elsif (((ap_const_lv6_20 = add_ln334_fu_1401_p2) and (ap_const_logic_1 = ap_CS_fsm_state3) and (icmp_ln331_fu_1389_p2 = ap_const_lv1_0))) then 
                DecoderWeights_32_copy_0_fu_410 <= tmp_fu_1411_p42;
            elsif (((ap_const_lv6_20 = add_ln334_fu_1401_p2) and (ap_const_logic_1 = ap_CS_fsm_state3) and (tmp_fu_1411_p42 = ap_const_lv1_0) and (icmp_ln331_fu_1389_p2 = ap_const_lv1_0))) then 
                DecoderWeights_32_copy_0_fu_410 <= ap_const_lv1_0;
            end if; 
        end if;
    end process;

    DecoderWeights_33_copy_0_fu_414_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                DecoderWeights_33_copy_0_fu_414 <= p_read33;
            elsif (((ap_const_lv6_21 = add_ln334_fu_1401_p2) and (ap_const_logic_1 = ap_CS_fsm_state3) and (icmp_ln331_fu_1389_p2 = ap_const_lv1_0))) then 
                DecoderWeights_33_copy_0_fu_414 <= tmp_fu_1411_p42;
            elsif (((ap_const_lv6_21 = add_ln334_fu_1401_p2) and (ap_const_logic_1 = ap_CS_fsm_state3) and (tmp_fu_1411_p42 = ap_const_lv1_0) and (icmp_ln331_fu_1389_p2 = ap_const_lv1_0))) then 
                DecoderWeights_33_copy_0_fu_414 <= ap_const_lv1_0;
            end if; 
        end if;
    end process;

    DecoderWeights_34_copy_0_fu_418_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                DecoderWeights_34_copy_0_fu_418 <= p_read34;
            elsif (((ap_const_lv6_22 = add_ln334_fu_1401_p2) and (ap_const_logic_1 = ap_CS_fsm_state3) and (icmp_ln331_fu_1389_p2 = ap_const_lv1_0))) then 
                DecoderWeights_34_copy_0_fu_418 <= tmp_fu_1411_p42;
            elsif (((ap_const_lv6_22 = add_ln334_fu_1401_p2) and (ap_const_logic_1 = ap_CS_fsm_state3) and (tmp_fu_1411_p42 = ap_const_lv1_0) and (icmp_ln331_fu_1389_p2 = ap_const_lv1_0))) then 
                DecoderWeights_34_copy_0_fu_418 <= ap_const_lv1_0;
            end if; 
        end if;
    end process;

    DecoderWeights_35_copy_0_fu_422_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                DecoderWeights_35_copy_0_fu_422 <= p_read35;
            elsif (((ap_const_lv6_23 = add_ln334_fu_1401_p2) and (ap_const_logic_1 = ap_CS_fsm_state3) and (icmp_ln331_fu_1389_p2 = ap_const_lv1_0))) then 
                DecoderWeights_35_copy_0_fu_422 <= tmp_fu_1411_p42;
            elsif (((ap_const_lv6_23 = add_ln334_fu_1401_p2) and (ap_const_logic_1 = ap_CS_fsm_state3) and (tmp_fu_1411_p42 = ap_const_lv1_0) and (icmp_ln331_fu_1389_p2 = ap_const_lv1_0))) then 
                DecoderWeights_35_copy_0_fu_422 <= ap_const_lv1_0;
            end if; 
        end if;
    end process;

    DecoderWeights_36_copy_0_fu_426_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                DecoderWeights_36_copy_0_fu_426 <= p_read36;
            elsif (((ap_const_lv6_24 = add_ln334_fu_1401_p2) and (ap_const_logic_1 = ap_CS_fsm_state3) and (icmp_ln331_fu_1389_p2 = ap_const_lv1_0))) then 
                DecoderWeights_36_copy_0_fu_426 <= tmp_fu_1411_p42;
            elsif (((ap_const_lv6_24 = add_ln334_fu_1401_p2) and (ap_const_logic_1 = ap_CS_fsm_state3) and (tmp_fu_1411_p42 = ap_const_lv1_0) and (icmp_ln331_fu_1389_p2 = ap_const_lv1_0))) then 
                DecoderWeights_36_copy_0_fu_426 <= ap_const_lv1_0;
            end if; 
        end if;
    end process;

    DecoderWeights_37_copy_0_fu_430_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                DecoderWeights_37_copy_0_fu_430 <= p_read37;
            elsif (((ap_const_lv6_25 = add_ln334_fu_1401_p2) and (ap_const_logic_1 = ap_CS_fsm_state3) and (icmp_ln331_fu_1389_p2 = ap_const_lv1_0))) then 
                DecoderWeights_37_copy_0_fu_430 <= tmp_fu_1411_p42;
            elsif (((ap_const_lv6_25 = add_ln334_fu_1401_p2) and (ap_const_logic_1 = ap_CS_fsm_state3) and (tmp_fu_1411_p42 = ap_const_lv1_0) and (icmp_ln331_fu_1389_p2 = ap_const_lv1_0))) then 
                DecoderWeights_37_copy_0_fu_430 <= ap_const_lv1_0;
            end if; 
        end if;
    end process;

    DecoderWeights_38_copy_0_fu_434_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                DecoderWeights_38_copy_0_fu_434 <= p_read38;
            elsif (((ap_const_lv6_26 = add_ln334_fu_1401_p2) and (ap_const_logic_1 = ap_CS_fsm_state3) and (icmp_ln331_fu_1389_p2 = ap_const_lv1_0))) then 
                DecoderWeights_38_copy_0_fu_434 <= tmp_fu_1411_p42;
            elsif (((ap_const_lv6_26 = add_ln334_fu_1401_p2) and (ap_const_logic_1 = ap_CS_fsm_state3) and (tmp_fu_1411_p42 = ap_const_lv1_0) and (icmp_ln331_fu_1389_p2 = ap_const_lv1_0))) then 
                DecoderWeights_38_copy_0_fu_434 <= ap_const_lv1_0;
            end if; 
        end if;
    end process;

    DecoderWeights_39_copy_0_fu_438_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                DecoderWeights_39_copy_0_fu_438 <= p_read39;
            elsif ((not((ap_const_lv6_26 = add_ln334_fu_1401_p2)) and not((ap_const_lv6_25 = add_ln334_fu_1401_p2)) and not((ap_const_lv6_24 = add_ln334_fu_1401_p2)) and not((ap_const_lv6_23 = add_ln334_fu_1401_p2)) and not((ap_const_lv6_22 = add_ln334_fu_1401_p2)) and not((ap_const_lv6_21 = add_ln334_fu_1401_p2)) and not((ap_const_lv6_20 = add_ln334_fu_1401_p2)) and not((ap_const_lv6_1F = add_ln334_fu_1401_p2)) and not((ap_const_lv6_1E = add_ln334_fu_1401_p2)) and not((ap_const_lv6_1D = add_ln334_fu_1401_p2)) and not((ap_const_lv6_1C = add_ln334_fu_1401_p2)) and not((ap_const_lv6_1B = add_ln334_fu_1401_p2)) and not((ap_const_lv6_1A = add_ln334_fu_1401_p2)) and not((ap_const_lv6_19 = add_ln334_fu_1401_p2)) and not((ap_const_lv6_18 = add_ln334_fu_1401_p2)) and not((ap_const_lv6_17 = add_ln334_fu_1401_p2)) and not((ap_const_lv6_16 = add_ln334_fu_1401_p2)) and not((ap_const_lv6_15 = add_ln334_fu_1401_p2)) and not((ap_const_lv6_14 = add_ln334_fu_1401_p2)) and not((ap_const_lv6_13 = add_ln334_fu_1401_p2)) and not((ap_const_lv6_12 = add_ln334_fu_1401_p2)) and not((ap_const_lv6_11 = add_ln334_fu_1401_p2)) and not((ap_const_lv6_10 = add_ln334_fu_1401_p2)) and not((ap_const_lv6_F = add_ln334_fu_1401_p2)) and not((ap_const_lv6_E = add_ln334_fu_1401_p2)) and not((ap_const_lv6_D = add_ln334_fu_1401_p2)) and not((ap_const_lv6_C = add_ln334_fu_1401_p2)) and not((ap_const_lv6_B = add_ln334_fu_1401_p2)) and not((ap_const_lv6_A = add_ln334_fu_1401_p2)) and not((ap_const_lv6_9 = add_ln334_fu_1401_p2)) and not((ap_const_lv6_8 = add_ln334_fu_1401_p2)) and not((ap_const_lv6_7 = add_ln334_fu_1401_p2)) and not((ap_const_lv6_6 = add_ln334_fu_1401_p2)) and not((ap_const_lv6_5 = add_ln334_fu_1401_p2)) and not((ap_const_lv6_4 = add_ln334_fu_1401_p2)) and not((ap_const_lv6_3 = add_ln334_fu_1401_p2)) and not((ap_const_lv6_2 = add_ln334_fu_1401_p2)) and not((ap_const_lv6_1 = add_ln334_fu_1401_p2)) and not((ap_const_lv6_0 = add_ln334_fu_1401_p2)) and (ap_const_logic_1 = ap_CS_fsm_state3) and (icmp_ln331_fu_1389_p2 = ap_const_lv1_0))) then 
                DecoderWeights_39_copy_0_fu_438 <= tmp_fu_1411_p42;
            elsif ((not((ap_const_lv6_26 = add_ln334_fu_1401_p2)) and not((ap_const_lv6_25 = add_ln334_fu_1401_p2)) and not((ap_const_lv6_24 = add_ln334_fu_1401_p2)) and not((ap_const_lv6_23 = add_ln334_fu_1401_p2)) and not((ap_const_lv6_22 = add_ln334_fu_1401_p2)) and not((ap_const_lv6_21 = add_ln334_fu_1401_p2)) and not((ap_const_lv6_20 = add_ln334_fu_1401_p2)) and not((ap_const_lv6_1F = add_ln334_fu_1401_p2)) and not((ap_const_lv6_1E = add_ln334_fu_1401_p2)) and not((ap_const_lv6_1D = add_ln334_fu_1401_p2)) and not((ap_const_lv6_1C = add_ln334_fu_1401_p2)) and not((ap_const_lv6_1B = add_ln334_fu_1401_p2)) and not((ap_const_lv6_1A = add_ln334_fu_1401_p2)) and not((ap_const_lv6_19 = add_ln334_fu_1401_p2)) and not((ap_const_lv6_18 = add_ln334_fu_1401_p2)) and not((ap_const_lv6_17 = add_ln334_fu_1401_p2)) and not((ap_const_lv6_16 = add_ln334_fu_1401_p2)) and not((ap_const_lv6_15 = add_ln334_fu_1401_p2)) and not((ap_const_lv6_14 = add_ln334_fu_1401_p2)) and not((ap_const_lv6_13 = add_ln334_fu_1401_p2)) and not((ap_const_lv6_12 = add_ln334_fu_1401_p2)) and not((ap_const_lv6_11 = add_ln334_fu_1401_p2)) and not((ap_const_lv6_10 = add_ln334_fu_1401_p2)) and not((ap_const_lv6_F = add_ln334_fu_1401_p2)) and not((ap_const_lv6_E = add_ln334_fu_1401_p2)) and not((ap_const_lv6_D = add_ln334_fu_1401_p2)) and not((ap_const_lv6_C = add_ln334_fu_1401_p2)) and not((ap_const_lv6_B = add_ln334_fu_1401_p2)) and not((ap_const_lv6_A = add_ln334_fu_1401_p2)) and not((ap_const_lv6_9 = add_ln334_fu_1401_p2)) and not((ap_const_lv6_8 = add_ln334_fu_1401_p2)) and not((ap_const_lv6_7 = add_ln334_fu_1401_p2)) and not((ap_const_lv6_6 = add_ln334_fu_1401_p2)) and not((ap_const_lv6_5 = add_ln334_fu_1401_p2)) and not((ap_const_lv6_4 = add_ln334_fu_1401_p2)) and not((ap_const_lv6_3 = add_ln334_fu_1401_p2)) and not((ap_const_lv6_2 = add_ln334_fu_1401_p2)) and not((ap_const_lv6_1 = add_ln334_fu_1401_p2)) and not((ap_const_lv6_0 = add_ln334_fu_1401_p2)) and (ap_const_logic_1 = ap_CS_fsm_state3) and (tmp_fu_1411_p42 = ap_const_lv1_0) and (icmp_ln331_fu_1389_p2 = ap_const_lv1_0))) then 
                DecoderWeights_39_copy_0_fu_438 <= ap_const_lv1_0;
            end if; 
        end if;
    end process;

    DecoderWeights_3_copy_0_fu_294_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                DecoderWeights_3_copy_0_fu_294 <= p_read3;
            elsif (((ap_const_lv6_3 = add_ln334_fu_1401_p2) and (ap_const_logic_1 = ap_CS_fsm_state3) and (icmp_ln331_fu_1389_p2 = ap_const_lv1_0))) then 
                DecoderWeights_3_copy_0_fu_294 <= tmp_fu_1411_p42;
            elsif (((ap_const_lv6_3 = add_ln334_fu_1401_p2) and (ap_const_logic_1 = ap_CS_fsm_state3) and (tmp_fu_1411_p42 = ap_const_lv1_0) and (icmp_ln331_fu_1389_p2 = ap_const_lv1_0))) then 
                DecoderWeights_3_copy_0_fu_294 <= ap_const_lv1_0;
            end if; 
        end if;
    end process;

    DecoderWeights_4_copy_0_fu_298_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                DecoderWeights_4_copy_0_fu_298 <= p_read4;
            elsif (((ap_const_lv6_4 = add_ln334_fu_1401_p2) and (ap_const_logic_1 = ap_CS_fsm_state3) and (icmp_ln331_fu_1389_p2 = ap_const_lv1_0))) then 
                DecoderWeights_4_copy_0_fu_298 <= tmp_fu_1411_p42;
            elsif (((ap_const_lv6_4 = add_ln334_fu_1401_p2) and (ap_const_logic_1 = ap_CS_fsm_state3) and (tmp_fu_1411_p42 = ap_const_lv1_0) and (icmp_ln331_fu_1389_p2 = ap_const_lv1_0))) then 
                DecoderWeights_4_copy_0_fu_298 <= ap_const_lv1_0;
            end if; 
        end if;
    end process;

    DecoderWeights_5_copy_0_fu_302_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                DecoderWeights_5_copy_0_fu_302 <= p_read5;
            elsif (((ap_const_lv6_5 = add_ln334_fu_1401_p2) and (ap_const_logic_1 = ap_CS_fsm_state3) and (icmp_ln331_fu_1389_p2 = ap_const_lv1_0))) then 
                DecoderWeights_5_copy_0_fu_302 <= tmp_fu_1411_p42;
            elsif (((ap_const_lv6_5 = add_ln334_fu_1401_p2) and (ap_const_logic_1 = ap_CS_fsm_state3) and (tmp_fu_1411_p42 = ap_const_lv1_0) and (icmp_ln331_fu_1389_p2 = ap_const_lv1_0))) then 
                DecoderWeights_5_copy_0_fu_302 <= ap_const_lv1_0;
            end if; 
        end if;
    end process;

    DecoderWeights_6_copy_0_fu_306_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                DecoderWeights_6_copy_0_fu_306 <= p_read6;
            elsif (((ap_const_lv6_6 = add_ln334_fu_1401_p2) and (ap_const_logic_1 = ap_CS_fsm_state3) and (icmp_ln331_fu_1389_p2 = ap_const_lv1_0))) then 
                DecoderWeights_6_copy_0_fu_306 <= tmp_fu_1411_p42;
            elsif (((ap_const_lv6_6 = add_ln334_fu_1401_p2) and (ap_const_logic_1 = ap_CS_fsm_state3) and (tmp_fu_1411_p42 = ap_const_lv1_0) and (icmp_ln331_fu_1389_p2 = ap_const_lv1_0))) then 
                DecoderWeights_6_copy_0_fu_306 <= ap_const_lv1_0;
            end if; 
        end if;
    end process;

    DecoderWeights_7_copy_0_fu_310_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                DecoderWeights_7_copy_0_fu_310 <= p_read7;
            elsif (((ap_const_lv6_7 = add_ln334_fu_1401_p2) and (ap_const_logic_1 = ap_CS_fsm_state3) and (icmp_ln331_fu_1389_p2 = ap_const_lv1_0))) then 
                DecoderWeights_7_copy_0_fu_310 <= tmp_fu_1411_p42;
            elsif (((ap_const_lv6_7 = add_ln334_fu_1401_p2) and (ap_const_logic_1 = ap_CS_fsm_state3) and (tmp_fu_1411_p42 = ap_const_lv1_0) and (icmp_ln331_fu_1389_p2 = ap_const_lv1_0))) then 
                DecoderWeights_7_copy_0_fu_310 <= ap_const_lv1_0;
            end if; 
        end if;
    end process;

    DecoderWeights_8_copy_0_fu_314_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                DecoderWeights_8_copy_0_fu_314 <= p_read8;
            elsif (((ap_const_lv6_8 = add_ln334_fu_1401_p2) and (ap_const_logic_1 = ap_CS_fsm_state3) and (icmp_ln331_fu_1389_p2 = ap_const_lv1_0))) then 
                DecoderWeights_8_copy_0_fu_314 <= tmp_fu_1411_p42;
            elsif (((ap_const_lv6_8 = add_ln334_fu_1401_p2) and (ap_const_logic_1 = ap_CS_fsm_state3) and (tmp_fu_1411_p42 = ap_const_lv1_0) and (icmp_ln331_fu_1389_p2 = ap_const_lv1_0))) then 
                DecoderWeights_8_copy_0_fu_314 <= ap_const_lv1_0;
            end if; 
        end if;
    end process;

    DecoderWeights_9_copy_0_fu_318_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                DecoderWeights_9_copy_0_fu_318 <= p_read9;
            elsif (((ap_const_lv6_9 = add_ln334_fu_1401_p2) and (ap_const_logic_1 = ap_CS_fsm_state3) and (icmp_ln331_fu_1389_p2 = ap_const_lv1_0))) then 
                DecoderWeights_9_copy_0_fu_318 <= tmp_fu_1411_p42;
            elsif (((ap_const_lv6_9 = add_ln334_fu_1401_p2) and (ap_const_logic_1 = ap_CS_fsm_state3) and (tmp_fu_1411_p42 = ap_const_lv1_0) and (icmp_ln331_fu_1389_p2 = ap_const_lv1_0))) then 
                DecoderWeights_9_copy_0_fu_318 <= ap_const_lv1_0;
            end if; 
        end if;
    end process;

    d_fu_278_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                d_fu_278 <= ap_const_lv3_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state3) and (icmp_ln331_fu_1389_p2 = ap_const_lv1_1))) then 
                d_fu_278 <= add_ln328_reg_2231;
            end if; 
        end if;
    end process;

    h_reg_976_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state3) and (icmp_ln331_fu_1389_p2 = ap_const_lv1_0))) then 
                h_reg_976 <= add_ln331_fu_1395_p2;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln328_fu_1355_p2 = ap_const_lv1_0))) then 
                h_reg_976 <= ap_const_lv4_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                add_ln328_reg_2231 <= add_ln328_fu_1361_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln328_fu_1355_p2 = ap_const_lv1_0))) then
                    zext_ln331_reg_2236(4 downto 1) <= zext_ln331_fu_1381_p1(4 downto 1);
            end if;
        end if;
    end process;
    zext_ln331_reg_2236(0) <= '0';
    zext_ln331_reg_2236(5) <= '0';

    ap_NS_fsm_assign_proc : process (ap_start, ap_done_reg, ap_CS_fsm, ap_CS_fsm_state1, ap_CS_fsm_state2, icmp_ln328_fu_1355_p2, ap_CS_fsm_state3, icmp_ln331_fu_1389_p2)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln328_fu_1355_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state3 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state3) and (icmp_ln331_fu_1389_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when others =>  
                ap_NS_fsm <= "XXX";
        end case;
    end process;

    DecoderWeights_0_out_assign_proc : process(ap_CS_fsm_state2, icmp_ln328_fu_1355_p2, DecoderWeights_0_copy_0_fu_282, DecoderWeights_0_out_preg)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln328_fu_1355_p2 = ap_const_lv1_1))) then 
            DecoderWeights_0_out <= DecoderWeights_0_copy_0_fu_282;
        else 
            DecoderWeights_0_out <= DecoderWeights_0_out_preg;
        end if; 
    end process;


    DecoderWeights_0_out_ap_vld_assign_proc : process(ap_CS_fsm_state2, icmp_ln328_fu_1355_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln328_fu_1355_p2 = ap_const_lv1_1))) then 
            DecoderWeights_0_out_ap_vld <= ap_const_logic_1;
        else 
            DecoderWeights_0_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    DecoderWeights_10_out_assign_proc : process(ap_CS_fsm_state2, icmp_ln328_fu_1355_p2, DecoderWeights_10_copy_0_fu_322, DecoderWeights_10_out_preg)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln328_fu_1355_p2 = ap_const_lv1_1))) then 
            DecoderWeights_10_out <= DecoderWeights_10_copy_0_fu_322;
        else 
            DecoderWeights_10_out <= DecoderWeights_10_out_preg;
        end if; 
    end process;


    DecoderWeights_10_out_ap_vld_assign_proc : process(ap_CS_fsm_state2, icmp_ln328_fu_1355_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln328_fu_1355_p2 = ap_const_lv1_1))) then 
            DecoderWeights_10_out_ap_vld <= ap_const_logic_1;
        else 
            DecoderWeights_10_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    DecoderWeights_11_out_assign_proc : process(ap_CS_fsm_state2, icmp_ln328_fu_1355_p2, DecoderWeights_11_copy_0_fu_326, DecoderWeights_11_out_preg)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln328_fu_1355_p2 = ap_const_lv1_1))) then 
            DecoderWeights_11_out <= DecoderWeights_11_copy_0_fu_326;
        else 
            DecoderWeights_11_out <= DecoderWeights_11_out_preg;
        end if; 
    end process;


    DecoderWeights_11_out_ap_vld_assign_proc : process(ap_CS_fsm_state2, icmp_ln328_fu_1355_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln328_fu_1355_p2 = ap_const_lv1_1))) then 
            DecoderWeights_11_out_ap_vld <= ap_const_logic_1;
        else 
            DecoderWeights_11_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    DecoderWeights_12_out_assign_proc : process(ap_CS_fsm_state2, icmp_ln328_fu_1355_p2, DecoderWeights_12_copy_0_fu_330, DecoderWeights_12_out_preg)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln328_fu_1355_p2 = ap_const_lv1_1))) then 
            DecoderWeights_12_out <= DecoderWeights_12_copy_0_fu_330;
        else 
            DecoderWeights_12_out <= DecoderWeights_12_out_preg;
        end if; 
    end process;


    DecoderWeights_12_out_ap_vld_assign_proc : process(ap_CS_fsm_state2, icmp_ln328_fu_1355_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln328_fu_1355_p2 = ap_const_lv1_1))) then 
            DecoderWeights_12_out_ap_vld <= ap_const_logic_1;
        else 
            DecoderWeights_12_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    DecoderWeights_13_out_assign_proc : process(ap_CS_fsm_state2, icmp_ln328_fu_1355_p2, DecoderWeights_13_copy_0_fu_334, DecoderWeights_13_out_preg)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln328_fu_1355_p2 = ap_const_lv1_1))) then 
            DecoderWeights_13_out <= DecoderWeights_13_copy_0_fu_334;
        else 
            DecoderWeights_13_out <= DecoderWeights_13_out_preg;
        end if; 
    end process;


    DecoderWeights_13_out_ap_vld_assign_proc : process(ap_CS_fsm_state2, icmp_ln328_fu_1355_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln328_fu_1355_p2 = ap_const_lv1_1))) then 
            DecoderWeights_13_out_ap_vld <= ap_const_logic_1;
        else 
            DecoderWeights_13_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    DecoderWeights_14_out_assign_proc : process(ap_CS_fsm_state2, icmp_ln328_fu_1355_p2, DecoderWeights_14_copy_0_fu_338, DecoderWeights_14_out_preg)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln328_fu_1355_p2 = ap_const_lv1_1))) then 
            DecoderWeights_14_out <= DecoderWeights_14_copy_0_fu_338;
        else 
            DecoderWeights_14_out <= DecoderWeights_14_out_preg;
        end if; 
    end process;


    DecoderWeights_14_out_ap_vld_assign_proc : process(ap_CS_fsm_state2, icmp_ln328_fu_1355_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln328_fu_1355_p2 = ap_const_lv1_1))) then 
            DecoderWeights_14_out_ap_vld <= ap_const_logic_1;
        else 
            DecoderWeights_14_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    DecoderWeights_15_out_assign_proc : process(ap_CS_fsm_state2, icmp_ln328_fu_1355_p2, DecoderWeights_15_copy_0_fu_342, DecoderWeights_15_out_preg)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln328_fu_1355_p2 = ap_const_lv1_1))) then 
            DecoderWeights_15_out <= DecoderWeights_15_copy_0_fu_342;
        else 
            DecoderWeights_15_out <= DecoderWeights_15_out_preg;
        end if; 
    end process;


    DecoderWeights_15_out_ap_vld_assign_proc : process(ap_CS_fsm_state2, icmp_ln328_fu_1355_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln328_fu_1355_p2 = ap_const_lv1_1))) then 
            DecoderWeights_15_out_ap_vld <= ap_const_logic_1;
        else 
            DecoderWeights_15_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    DecoderWeights_16_out_assign_proc : process(ap_CS_fsm_state2, icmp_ln328_fu_1355_p2, DecoderWeights_16_copy_0_fu_346, DecoderWeights_16_out_preg)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln328_fu_1355_p2 = ap_const_lv1_1))) then 
            DecoderWeights_16_out <= DecoderWeights_16_copy_0_fu_346;
        else 
            DecoderWeights_16_out <= DecoderWeights_16_out_preg;
        end if; 
    end process;


    DecoderWeights_16_out_ap_vld_assign_proc : process(ap_CS_fsm_state2, icmp_ln328_fu_1355_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln328_fu_1355_p2 = ap_const_lv1_1))) then 
            DecoderWeights_16_out_ap_vld <= ap_const_logic_1;
        else 
            DecoderWeights_16_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    DecoderWeights_17_out_assign_proc : process(ap_CS_fsm_state2, icmp_ln328_fu_1355_p2, DecoderWeights_17_copy_0_fu_350, DecoderWeights_17_out_preg)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln328_fu_1355_p2 = ap_const_lv1_1))) then 
            DecoderWeights_17_out <= DecoderWeights_17_copy_0_fu_350;
        else 
            DecoderWeights_17_out <= DecoderWeights_17_out_preg;
        end if; 
    end process;


    DecoderWeights_17_out_ap_vld_assign_proc : process(ap_CS_fsm_state2, icmp_ln328_fu_1355_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln328_fu_1355_p2 = ap_const_lv1_1))) then 
            DecoderWeights_17_out_ap_vld <= ap_const_logic_1;
        else 
            DecoderWeights_17_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    DecoderWeights_18_out_assign_proc : process(ap_CS_fsm_state2, icmp_ln328_fu_1355_p2, DecoderWeights_18_copy_0_fu_354, DecoderWeights_18_out_preg)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln328_fu_1355_p2 = ap_const_lv1_1))) then 
            DecoderWeights_18_out <= DecoderWeights_18_copy_0_fu_354;
        else 
            DecoderWeights_18_out <= DecoderWeights_18_out_preg;
        end if; 
    end process;


    DecoderWeights_18_out_ap_vld_assign_proc : process(ap_CS_fsm_state2, icmp_ln328_fu_1355_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln328_fu_1355_p2 = ap_const_lv1_1))) then 
            DecoderWeights_18_out_ap_vld <= ap_const_logic_1;
        else 
            DecoderWeights_18_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    DecoderWeights_19_out_assign_proc : process(ap_CS_fsm_state2, icmp_ln328_fu_1355_p2, DecoderWeights_19_copy_0_fu_358, DecoderWeights_19_out_preg)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln328_fu_1355_p2 = ap_const_lv1_1))) then 
            DecoderWeights_19_out <= DecoderWeights_19_copy_0_fu_358;
        else 
            DecoderWeights_19_out <= DecoderWeights_19_out_preg;
        end if; 
    end process;


    DecoderWeights_19_out_ap_vld_assign_proc : process(ap_CS_fsm_state2, icmp_ln328_fu_1355_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln328_fu_1355_p2 = ap_const_lv1_1))) then 
            DecoderWeights_19_out_ap_vld <= ap_const_logic_1;
        else 
            DecoderWeights_19_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    DecoderWeights_1_out_assign_proc : process(ap_CS_fsm_state2, icmp_ln328_fu_1355_p2, DecoderWeights_1_copy_0_fu_286, DecoderWeights_1_out_preg)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln328_fu_1355_p2 = ap_const_lv1_1))) then 
            DecoderWeights_1_out <= DecoderWeights_1_copy_0_fu_286;
        else 
            DecoderWeights_1_out <= DecoderWeights_1_out_preg;
        end if; 
    end process;


    DecoderWeights_1_out_ap_vld_assign_proc : process(ap_CS_fsm_state2, icmp_ln328_fu_1355_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln328_fu_1355_p2 = ap_const_lv1_1))) then 
            DecoderWeights_1_out_ap_vld <= ap_const_logic_1;
        else 
            DecoderWeights_1_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    DecoderWeights_20_out_assign_proc : process(ap_CS_fsm_state2, icmp_ln328_fu_1355_p2, DecoderWeights_20_copy_0_fu_362, DecoderWeights_20_out_preg)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln328_fu_1355_p2 = ap_const_lv1_1))) then 
            DecoderWeights_20_out <= DecoderWeights_20_copy_0_fu_362;
        else 
            DecoderWeights_20_out <= DecoderWeights_20_out_preg;
        end if; 
    end process;


    DecoderWeights_20_out_ap_vld_assign_proc : process(ap_CS_fsm_state2, icmp_ln328_fu_1355_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln328_fu_1355_p2 = ap_const_lv1_1))) then 
            DecoderWeights_20_out_ap_vld <= ap_const_logic_1;
        else 
            DecoderWeights_20_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    DecoderWeights_21_out_assign_proc : process(ap_CS_fsm_state2, icmp_ln328_fu_1355_p2, DecoderWeights_21_copy_0_fu_366, DecoderWeights_21_out_preg)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln328_fu_1355_p2 = ap_const_lv1_1))) then 
            DecoderWeights_21_out <= DecoderWeights_21_copy_0_fu_366;
        else 
            DecoderWeights_21_out <= DecoderWeights_21_out_preg;
        end if; 
    end process;


    DecoderWeights_21_out_ap_vld_assign_proc : process(ap_CS_fsm_state2, icmp_ln328_fu_1355_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln328_fu_1355_p2 = ap_const_lv1_1))) then 
            DecoderWeights_21_out_ap_vld <= ap_const_logic_1;
        else 
            DecoderWeights_21_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    DecoderWeights_22_out_assign_proc : process(ap_CS_fsm_state2, icmp_ln328_fu_1355_p2, DecoderWeights_22_copy_0_fu_370, DecoderWeights_22_out_preg)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln328_fu_1355_p2 = ap_const_lv1_1))) then 
            DecoderWeights_22_out <= DecoderWeights_22_copy_0_fu_370;
        else 
            DecoderWeights_22_out <= DecoderWeights_22_out_preg;
        end if; 
    end process;


    DecoderWeights_22_out_ap_vld_assign_proc : process(ap_CS_fsm_state2, icmp_ln328_fu_1355_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln328_fu_1355_p2 = ap_const_lv1_1))) then 
            DecoderWeights_22_out_ap_vld <= ap_const_logic_1;
        else 
            DecoderWeights_22_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    DecoderWeights_23_out_assign_proc : process(ap_CS_fsm_state2, icmp_ln328_fu_1355_p2, DecoderWeights_23_copy_0_fu_374, DecoderWeights_23_out_preg)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln328_fu_1355_p2 = ap_const_lv1_1))) then 
            DecoderWeights_23_out <= DecoderWeights_23_copy_0_fu_374;
        else 
            DecoderWeights_23_out <= DecoderWeights_23_out_preg;
        end if; 
    end process;


    DecoderWeights_23_out_ap_vld_assign_proc : process(ap_CS_fsm_state2, icmp_ln328_fu_1355_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln328_fu_1355_p2 = ap_const_lv1_1))) then 
            DecoderWeights_23_out_ap_vld <= ap_const_logic_1;
        else 
            DecoderWeights_23_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    DecoderWeights_24_out_assign_proc : process(ap_CS_fsm_state2, icmp_ln328_fu_1355_p2, DecoderWeights_24_copy_0_fu_378, DecoderWeights_24_out_preg)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln328_fu_1355_p2 = ap_const_lv1_1))) then 
            DecoderWeights_24_out <= DecoderWeights_24_copy_0_fu_378;
        else 
            DecoderWeights_24_out <= DecoderWeights_24_out_preg;
        end if; 
    end process;


    DecoderWeights_24_out_ap_vld_assign_proc : process(ap_CS_fsm_state2, icmp_ln328_fu_1355_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln328_fu_1355_p2 = ap_const_lv1_1))) then 
            DecoderWeights_24_out_ap_vld <= ap_const_logic_1;
        else 
            DecoderWeights_24_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    DecoderWeights_25_out_assign_proc : process(ap_CS_fsm_state2, icmp_ln328_fu_1355_p2, DecoderWeights_25_copy_0_fu_382, DecoderWeights_25_out_preg)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln328_fu_1355_p2 = ap_const_lv1_1))) then 
            DecoderWeights_25_out <= DecoderWeights_25_copy_0_fu_382;
        else 
            DecoderWeights_25_out <= DecoderWeights_25_out_preg;
        end if; 
    end process;


    DecoderWeights_25_out_ap_vld_assign_proc : process(ap_CS_fsm_state2, icmp_ln328_fu_1355_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln328_fu_1355_p2 = ap_const_lv1_1))) then 
            DecoderWeights_25_out_ap_vld <= ap_const_logic_1;
        else 
            DecoderWeights_25_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    DecoderWeights_26_out_assign_proc : process(ap_CS_fsm_state2, icmp_ln328_fu_1355_p2, DecoderWeights_26_copy_0_fu_386, DecoderWeights_26_out_preg)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln328_fu_1355_p2 = ap_const_lv1_1))) then 
            DecoderWeights_26_out <= DecoderWeights_26_copy_0_fu_386;
        else 
            DecoderWeights_26_out <= DecoderWeights_26_out_preg;
        end if; 
    end process;


    DecoderWeights_26_out_ap_vld_assign_proc : process(ap_CS_fsm_state2, icmp_ln328_fu_1355_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln328_fu_1355_p2 = ap_const_lv1_1))) then 
            DecoderWeights_26_out_ap_vld <= ap_const_logic_1;
        else 
            DecoderWeights_26_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    DecoderWeights_27_out_assign_proc : process(ap_CS_fsm_state2, icmp_ln328_fu_1355_p2, DecoderWeights_27_copy_0_fu_390, DecoderWeights_27_out_preg)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln328_fu_1355_p2 = ap_const_lv1_1))) then 
            DecoderWeights_27_out <= DecoderWeights_27_copy_0_fu_390;
        else 
            DecoderWeights_27_out <= DecoderWeights_27_out_preg;
        end if; 
    end process;


    DecoderWeights_27_out_ap_vld_assign_proc : process(ap_CS_fsm_state2, icmp_ln328_fu_1355_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln328_fu_1355_p2 = ap_const_lv1_1))) then 
            DecoderWeights_27_out_ap_vld <= ap_const_logic_1;
        else 
            DecoderWeights_27_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    DecoderWeights_28_out_assign_proc : process(ap_CS_fsm_state2, icmp_ln328_fu_1355_p2, DecoderWeights_28_copy_0_fu_394, DecoderWeights_28_out_preg)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln328_fu_1355_p2 = ap_const_lv1_1))) then 
            DecoderWeights_28_out <= DecoderWeights_28_copy_0_fu_394;
        else 
            DecoderWeights_28_out <= DecoderWeights_28_out_preg;
        end if; 
    end process;


    DecoderWeights_28_out_ap_vld_assign_proc : process(ap_CS_fsm_state2, icmp_ln328_fu_1355_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln328_fu_1355_p2 = ap_const_lv1_1))) then 
            DecoderWeights_28_out_ap_vld <= ap_const_logic_1;
        else 
            DecoderWeights_28_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    DecoderWeights_29_out_assign_proc : process(ap_CS_fsm_state2, icmp_ln328_fu_1355_p2, DecoderWeights_29_copy_0_fu_398, DecoderWeights_29_out_preg)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln328_fu_1355_p2 = ap_const_lv1_1))) then 
            DecoderWeights_29_out <= DecoderWeights_29_copy_0_fu_398;
        else 
            DecoderWeights_29_out <= DecoderWeights_29_out_preg;
        end if; 
    end process;


    DecoderWeights_29_out_ap_vld_assign_proc : process(ap_CS_fsm_state2, icmp_ln328_fu_1355_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln328_fu_1355_p2 = ap_const_lv1_1))) then 
            DecoderWeights_29_out_ap_vld <= ap_const_logic_1;
        else 
            DecoderWeights_29_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    DecoderWeights_2_out_assign_proc : process(ap_CS_fsm_state2, icmp_ln328_fu_1355_p2, DecoderWeights_2_copy_0_fu_290, DecoderWeights_2_out_preg)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln328_fu_1355_p2 = ap_const_lv1_1))) then 
            DecoderWeights_2_out <= DecoderWeights_2_copy_0_fu_290;
        else 
            DecoderWeights_2_out <= DecoderWeights_2_out_preg;
        end if; 
    end process;


    DecoderWeights_2_out_ap_vld_assign_proc : process(ap_CS_fsm_state2, icmp_ln328_fu_1355_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln328_fu_1355_p2 = ap_const_lv1_1))) then 
            DecoderWeights_2_out_ap_vld <= ap_const_logic_1;
        else 
            DecoderWeights_2_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    DecoderWeights_30_out_assign_proc : process(ap_CS_fsm_state2, icmp_ln328_fu_1355_p2, DecoderWeights_30_copy_0_fu_402, DecoderWeights_30_out_preg)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln328_fu_1355_p2 = ap_const_lv1_1))) then 
            DecoderWeights_30_out <= DecoderWeights_30_copy_0_fu_402;
        else 
            DecoderWeights_30_out <= DecoderWeights_30_out_preg;
        end if; 
    end process;


    DecoderWeights_30_out_ap_vld_assign_proc : process(ap_CS_fsm_state2, icmp_ln328_fu_1355_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln328_fu_1355_p2 = ap_const_lv1_1))) then 
            DecoderWeights_30_out_ap_vld <= ap_const_logic_1;
        else 
            DecoderWeights_30_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    DecoderWeights_31_out_assign_proc : process(ap_CS_fsm_state2, icmp_ln328_fu_1355_p2, DecoderWeights_31_copy_0_fu_406, DecoderWeights_31_out_preg)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln328_fu_1355_p2 = ap_const_lv1_1))) then 
            DecoderWeights_31_out <= DecoderWeights_31_copy_0_fu_406;
        else 
            DecoderWeights_31_out <= DecoderWeights_31_out_preg;
        end if; 
    end process;


    DecoderWeights_31_out_ap_vld_assign_proc : process(ap_CS_fsm_state2, icmp_ln328_fu_1355_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln328_fu_1355_p2 = ap_const_lv1_1))) then 
            DecoderWeights_31_out_ap_vld <= ap_const_logic_1;
        else 
            DecoderWeights_31_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    DecoderWeights_32_out_assign_proc : process(ap_CS_fsm_state2, icmp_ln328_fu_1355_p2, DecoderWeights_32_copy_0_fu_410, DecoderWeights_32_out_preg)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln328_fu_1355_p2 = ap_const_lv1_1))) then 
            DecoderWeights_32_out <= DecoderWeights_32_copy_0_fu_410;
        else 
            DecoderWeights_32_out <= DecoderWeights_32_out_preg;
        end if; 
    end process;


    DecoderWeights_32_out_ap_vld_assign_proc : process(ap_CS_fsm_state2, icmp_ln328_fu_1355_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln328_fu_1355_p2 = ap_const_lv1_1))) then 
            DecoderWeights_32_out_ap_vld <= ap_const_logic_1;
        else 
            DecoderWeights_32_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    DecoderWeights_33_out_assign_proc : process(ap_CS_fsm_state2, icmp_ln328_fu_1355_p2, DecoderWeights_33_copy_0_fu_414, DecoderWeights_33_out_preg)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln328_fu_1355_p2 = ap_const_lv1_1))) then 
            DecoderWeights_33_out <= DecoderWeights_33_copy_0_fu_414;
        else 
            DecoderWeights_33_out <= DecoderWeights_33_out_preg;
        end if; 
    end process;


    DecoderWeights_33_out_ap_vld_assign_proc : process(ap_CS_fsm_state2, icmp_ln328_fu_1355_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln328_fu_1355_p2 = ap_const_lv1_1))) then 
            DecoderWeights_33_out_ap_vld <= ap_const_logic_1;
        else 
            DecoderWeights_33_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    DecoderWeights_34_out_assign_proc : process(ap_CS_fsm_state2, icmp_ln328_fu_1355_p2, DecoderWeights_34_copy_0_fu_418, DecoderWeights_34_out_preg)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln328_fu_1355_p2 = ap_const_lv1_1))) then 
            DecoderWeights_34_out <= DecoderWeights_34_copy_0_fu_418;
        else 
            DecoderWeights_34_out <= DecoderWeights_34_out_preg;
        end if; 
    end process;


    DecoderWeights_34_out_ap_vld_assign_proc : process(ap_CS_fsm_state2, icmp_ln328_fu_1355_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln328_fu_1355_p2 = ap_const_lv1_1))) then 
            DecoderWeights_34_out_ap_vld <= ap_const_logic_1;
        else 
            DecoderWeights_34_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    DecoderWeights_35_out_assign_proc : process(ap_CS_fsm_state2, icmp_ln328_fu_1355_p2, DecoderWeights_35_copy_0_fu_422, DecoderWeights_35_out_preg)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln328_fu_1355_p2 = ap_const_lv1_1))) then 
            DecoderWeights_35_out <= DecoderWeights_35_copy_0_fu_422;
        else 
            DecoderWeights_35_out <= DecoderWeights_35_out_preg;
        end if; 
    end process;


    DecoderWeights_35_out_ap_vld_assign_proc : process(ap_CS_fsm_state2, icmp_ln328_fu_1355_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln328_fu_1355_p2 = ap_const_lv1_1))) then 
            DecoderWeights_35_out_ap_vld <= ap_const_logic_1;
        else 
            DecoderWeights_35_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    DecoderWeights_36_out_assign_proc : process(ap_CS_fsm_state2, icmp_ln328_fu_1355_p2, DecoderWeights_36_copy_0_fu_426, DecoderWeights_36_out_preg)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln328_fu_1355_p2 = ap_const_lv1_1))) then 
            DecoderWeights_36_out <= DecoderWeights_36_copy_0_fu_426;
        else 
            DecoderWeights_36_out <= DecoderWeights_36_out_preg;
        end if; 
    end process;


    DecoderWeights_36_out_ap_vld_assign_proc : process(ap_CS_fsm_state2, icmp_ln328_fu_1355_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln328_fu_1355_p2 = ap_const_lv1_1))) then 
            DecoderWeights_36_out_ap_vld <= ap_const_logic_1;
        else 
            DecoderWeights_36_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    DecoderWeights_37_out_assign_proc : process(ap_CS_fsm_state2, icmp_ln328_fu_1355_p2, DecoderWeights_37_copy_0_fu_430, DecoderWeights_37_out_preg)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln328_fu_1355_p2 = ap_const_lv1_1))) then 
            DecoderWeights_37_out <= DecoderWeights_37_copy_0_fu_430;
        else 
            DecoderWeights_37_out <= DecoderWeights_37_out_preg;
        end if; 
    end process;


    DecoderWeights_37_out_ap_vld_assign_proc : process(ap_CS_fsm_state2, icmp_ln328_fu_1355_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln328_fu_1355_p2 = ap_const_lv1_1))) then 
            DecoderWeights_37_out_ap_vld <= ap_const_logic_1;
        else 
            DecoderWeights_37_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    DecoderWeights_38_out_assign_proc : process(ap_CS_fsm_state2, icmp_ln328_fu_1355_p2, DecoderWeights_38_copy_0_fu_434, DecoderWeights_38_out_preg)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln328_fu_1355_p2 = ap_const_lv1_1))) then 
            DecoderWeights_38_out <= DecoderWeights_38_copy_0_fu_434;
        else 
            DecoderWeights_38_out <= DecoderWeights_38_out_preg;
        end if; 
    end process;


    DecoderWeights_38_out_ap_vld_assign_proc : process(ap_CS_fsm_state2, icmp_ln328_fu_1355_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln328_fu_1355_p2 = ap_const_lv1_1))) then 
            DecoderWeights_38_out_ap_vld <= ap_const_logic_1;
        else 
            DecoderWeights_38_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    DecoderWeights_39_out_assign_proc : process(ap_CS_fsm_state2, icmp_ln328_fu_1355_p2, DecoderWeights_39_copy_0_fu_438, DecoderWeights_39_out_preg)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln328_fu_1355_p2 = ap_const_lv1_1))) then 
            DecoderWeights_39_out <= DecoderWeights_39_copy_0_fu_438;
        else 
            DecoderWeights_39_out <= DecoderWeights_39_out_preg;
        end if; 
    end process;


    DecoderWeights_39_out_ap_vld_assign_proc : process(ap_CS_fsm_state2, icmp_ln328_fu_1355_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln328_fu_1355_p2 = ap_const_lv1_1))) then 
            DecoderWeights_39_out_ap_vld <= ap_const_logic_1;
        else 
            DecoderWeights_39_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    DecoderWeights_3_out_assign_proc : process(ap_CS_fsm_state2, icmp_ln328_fu_1355_p2, DecoderWeights_3_copy_0_fu_294, DecoderWeights_3_out_preg)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln328_fu_1355_p2 = ap_const_lv1_1))) then 
            DecoderWeights_3_out <= DecoderWeights_3_copy_0_fu_294;
        else 
            DecoderWeights_3_out <= DecoderWeights_3_out_preg;
        end if; 
    end process;


    DecoderWeights_3_out_ap_vld_assign_proc : process(ap_CS_fsm_state2, icmp_ln328_fu_1355_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln328_fu_1355_p2 = ap_const_lv1_1))) then 
            DecoderWeights_3_out_ap_vld <= ap_const_logic_1;
        else 
            DecoderWeights_3_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    DecoderWeights_4_out_assign_proc : process(ap_CS_fsm_state2, icmp_ln328_fu_1355_p2, DecoderWeights_4_copy_0_fu_298, DecoderWeights_4_out_preg)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln328_fu_1355_p2 = ap_const_lv1_1))) then 
            DecoderWeights_4_out <= DecoderWeights_4_copy_0_fu_298;
        else 
            DecoderWeights_4_out <= DecoderWeights_4_out_preg;
        end if; 
    end process;


    DecoderWeights_4_out_ap_vld_assign_proc : process(ap_CS_fsm_state2, icmp_ln328_fu_1355_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln328_fu_1355_p2 = ap_const_lv1_1))) then 
            DecoderWeights_4_out_ap_vld <= ap_const_logic_1;
        else 
            DecoderWeights_4_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    DecoderWeights_5_out_assign_proc : process(ap_CS_fsm_state2, icmp_ln328_fu_1355_p2, DecoderWeights_5_copy_0_fu_302, DecoderWeights_5_out_preg)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln328_fu_1355_p2 = ap_const_lv1_1))) then 
            DecoderWeights_5_out <= DecoderWeights_5_copy_0_fu_302;
        else 
            DecoderWeights_5_out <= DecoderWeights_5_out_preg;
        end if; 
    end process;


    DecoderWeights_5_out_ap_vld_assign_proc : process(ap_CS_fsm_state2, icmp_ln328_fu_1355_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln328_fu_1355_p2 = ap_const_lv1_1))) then 
            DecoderWeights_5_out_ap_vld <= ap_const_logic_1;
        else 
            DecoderWeights_5_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    DecoderWeights_6_out_assign_proc : process(ap_CS_fsm_state2, icmp_ln328_fu_1355_p2, DecoderWeights_6_copy_0_fu_306, DecoderWeights_6_out_preg)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln328_fu_1355_p2 = ap_const_lv1_1))) then 
            DecoderWeights_6_out <= DecoderWeights_6_copy_0_fu_306;
        else 
            DecoderWeights_6_out <= DecoderWeights_6_out_preg;
        end if; 
    end process;


    DecoderWeights_6_out_ap_vld_assign_proc : process(ap_CS_fsm_state2, icmp_ln328_fu_1355_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln328_fu_1355_p2 = ap_const_lv1_1))) then 
            DecoderWeights_6_out_ap_vld <= ap_const_logic_1;
        else 
            DecoderWeights_6_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    DecoderWeights_7_out_assign_proc : process(ap_CS_fsm_state2, icmp_ln328_fu_1355_p2, DecoderWeights_7_copy_0_fu_310, DecoderWeights_7_out_preg)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln328_fu_1355_p2 = ap_const_lv1_1))) then 
            DecoderWeights_7_out <= DecoderWeights_7_copy_0_fu_310;
        else 
            DecoderWeights_7_out <= DecoderWeights_7_out_preg;
        end if; 
    end process;


    DecoderWeights_7_out_ap_vld_assign_proc : process(ap_CS_fsm_state2, icmp_ln328_fu_1355_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln328_fu_1355_p2 = ap_const_lv1_1))) then 
            DecoderWeights_7_out_ap_vld <= ap_const_logic_1;
        else 
            DecoderWeights_7_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    DecoderWeights_8_out_assign_proc : process(ap_CS_fsm_state2, icmp_ln328_fu_1355_p2, DecoderWeights_8_copy_0_fu_314, DecoderWeights_8_out_preg)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln328_fu_1355_p2 = ap_const_lv1_1))) then 
            DecoderWeights_8_out <= DecoderWeights_8_copy_0_fu_314;
        else 
            DecoderWeights_8_out <= DecoderWeights_8_out_preg;
        end if; 
    end process;


    DecoderWeights_8_out_ap_vld_assign_proc : process(ap_CS_fsm_state2, icmp_ln328_fu_1355_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln328_fu_1355_p2 = ap_const_lv1_1))) then 
            DecoderWeights_8_out_ap_vld <= ap_const_logic_1;
        else 
            DecoderWeights_8_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    DecoderWeights_9_out_assign_proc : process(ap_CS_fsm_state2, icmp_ln328_fu_1355_p2, DecoderWeights_9_copy_0_fu_318, DecoderWeights_9_out_preg)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln328_fu_1355_p2 = ap_const_lv1_1))) then 
            DecoderWeights_9_out <= DecoderWeights_9_copy_0_fu_318;
        else 
            DecoderWeights_9_out <= DecoderWeights_9_out_preg;
        end if; 
    end process;


    DecoderWeights_9_out_ap_vld_assign_proc : process(ap_CS_fsm_state2, icmp_ln328_fu_1355_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln328_fu_1355_p2 = ap_const_lv1_1))) then 
            DecoderWeights_9_out_ap_vld <= ap_const_logic_1;
        else 
            DecoderWeights_9_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    PrevDecoderWeightChanges_address0 <= zext_ln337_fu_1406_p1(6 - 1 downto 0);

    PrevDecoderWeightChanges_ce0_assign_proc : process(ap_CS_fsm_state3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            PrevDecoderWeightChanges_ce0 <= ap_const_logic_1;
        else 
            PrevDecoderWeightChanges_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    PrevDecoderWeightChanges_d0 <= ap_const_lv1_0;

    PrevDecoderWeightChanges_we0_assign_proc : process(ap_CS_fsm_state3, icmp_ln331_fu_1389_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state3) and (icmp_ln331_fu_1389_p2 = ap_const_lv1_0))) then 
            PrevDecoderWeightChanges_we0 <= ap_const_logic_1;
        else 
            PrevDecoderWeightChanges_we0 <= ap_const_logic_0;
        end if; 
    end process;

    add_ln328_fu_1361_p2 <= std_logic_vector(unsigned(d_fu_278) + unsigned(ap_const_lv3_1));
    add_ln331_fu_1395_p2 <= std_logic_vector(unsigned(h_reg_976) + unsigned(ap_const_lv4_1));
    add_ln334_fu_1401_p2 <= std_logic_vector(unsigned(zext_ln331_reg_2236) + unsigned(zext_ln331_1_fu_1385_p1));
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);

    ap_ST_fsm_state1_blk_assign_proc : process(ap_start, ap_done_reg)
    begin
        if (((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state2_blk <= ap_const_logic_0;
    ap_ST_fsm_state3_blk <= ap_const_logic_0;

    ap_block_state1_assign_proc : process(ap_start, ap_done_reg)
    begin
                ap_block_state1 <= ((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1));
    end process;


    ap_done_assign_proc : process(ap_done_reg, ap_CS_fsm_state2, icmp_ln328_fu_1355_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln328_fu_1355_p2 = ap_const_lv1_1))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state2, icmp_ln328_fu_1355_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln328_fu_1355_p2 = ap_const_lv1_1))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    empty_49_fu_1367_p1 <= d_fu_278(2 - 1 downto 0);
    icmp_ln328_fu_1355_p2 <= "1" when (d_fu_278 = ap_const_lv3_4) else "0";
    icmp_ln331_fu_1389_p2 <= "1" when (h_reg_976 = ap_const_lv4_A) else "0";
    tmp_5_fu_1371_p4 <= ((empty_49_fu_1367_p1 & empty_49_fu_1367_p1) & ap_const_lv1_0);
    zext_ln331_1_fu_1385_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(h_reg_976),6));
    zext_ln331_fu_1381_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_5_fu_1371_p4),6));
    zext_ln337_fu_1406_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln334_fu_1401_p2),64));
end behav;
