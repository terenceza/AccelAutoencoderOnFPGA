// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
// Version: 2022.1
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module Autoencoder_BackPropagateEncoderWeights (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        p_read,
        EncoderWeights_0_out,
        EncoderWeights_0_out_ap_vld,
        p_read1,
        EncoderWeights_1_out,
        EncoderWeights_1_out_ap_vld,
        p_read2,
        EncoderWeights_2_out,
        EncoderWeights_2_out_ap_vld,
        p_read3,
        EncoderWeights_3_out,
        EncoderWeights_3_out_ap_vld,
        p_read4,
        EncoderWeights_4_out,
        EncoderWeights_4_out_ap_vld,
        p_read5,
        EncoderWeights_5_out,
        EncoderWeights_5_out_ap_vld,
        p_read6,
        EncoderWeights_6_out,
        EncoderWeights_6_out_ap_vld,
        p_read7,
        EncoderWeights_7_out,
        EncoderWeights_7_out_ap_vld,
        p_read8,
        EncoderWeights_8_out,
        EncoderWeights_8_out_ap_vld,
        p_read9,
        EncoderWeights_9_out,
        EncoderWeights_9_out_ap_vld,
        p_read10,
        EncoderWeights_10_out,
        EncoderWeights_10_out_ap_vld,
        p_read11,
        EncoderWeights_11_out,
        EncoderWeights_11_out_ap_vld,
        p_read12,
        EncoderWeights_12_out,
        EncoderWeights_12_out_ap_vld,
        p_read13,
        EncoderWeights_13_out,
        EncoderWeights_13_out_ap_vld,
        p_read14,
        EncoderWeights_14_out,
        EncoderWeights_14_out_ap_vld,
        p_read15,
        EncoderWeights_15_out,
        EncoderWeights_15_out_ap_vld,
        p_read16,
        EncoderWeights_16_out,
        EncoderWeights_16_out_ap_vld,
        p_read17,
        EncoderWeights_17_out,
        EncoderWeights_17_out_ap_vld,
        p_read18,
        EncoderWeights_18_out,
        EncoderWeights_18_out_ap_vld,
        p_read19,
        EncoderWeights_19_out,
        EncoderWeights_19_out_ap_vld,
        p_read20,
        EncoderWeights_20_out,
        EncoderWeights_20_out_ap_vld,
        p_read21,
        EncoderWeights_21_out,
        EncoderWeights_21_out_ap_vld,
        p_read22,
        EncoderWeights_22_out,
        EncoderWeights_22_out_ap_vld,
        p_read23,
        EncoderWeights_23_out,
        EncoderWeights_23_out_ap_vld,
        p_read24,
        EncoderWeights_24_out,
        EncoderWeights_24_out_ap_vld,
        p_read25,
        EncoderWeights_25_out,
        EncoderWeights_25_out_ap_vld,
        p_read26,
        EncoderWeights_26_out,
        EncoderWeights_26_out_ap_vld,
        p_read27,
        EncoderWeights_27_out,
        EncoderWeights_27_out_ap_vld,
        p_read28,
        EncoderWeights_28_out,
        EncoderWeights_28_out_ap_vld,
        p_read29,
        EncoderWeights_29_out,
        EncoderWeights_29_out_ap_vld,
        p_read30,
        EncoderWeights_30_out,
        EncoderWeights_30_out_ap_vld,
        p_read31,
        EncoderWeights_31_out,
        EncoderWeights_31_out_ap_vld,
        p_read32,
        EncoderWeights_32_out,
        EncoderWeights_32_out_ap_vld,
        p_read33,
        EncoderWeights_33_out,
        EncoderWeights_33_out_ap_vld,
        p_read34,
        EncoderWeights_34_out,
        EncoderWeights_34_out_ap_vld,
        p_read35,
        EncoderWeights_35_out,
        EncoderWeights_35_out_ap_vld,
        p_read36,
        EncoderWeights_36_out,
        EncoderWeights_36_out_ap_vld,
        p_read37,
        EncoderWeights_37_out,
        EncoderWeights_37_out_ap_vld,
        p_read38,
        EncoderWeights_38_out,
        EncoderWeights_38_out_ap_vld,
        p_read39,
        EncoderWeights_39_out,
        EncoderWeights_39_out_ap_vld,
        PrevEncoderWeightChanges_address0,
        PrevEncoderWeightChanges_ce0,
        PrevEncoderWeightChanges_we0,
        PrevEncoderWeightChanges_d0
);

parameter    ap_ST_fsm_state1 = 3'd1;
parameter    ap_ST_fsm_state2 = 3'd2;
parameter    ap_ST_fsm_state3 = 3'd4;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input  [0:0] p_read;
output  [0:0] EncoderWeights_0_out;
output   EncoderWeights_0_out_ap_vld;
input  [0:0] p_read1;
output  [0:0] EncoderWeights_1_out;
output   EncoderWeights_1_out_ap_vld;
input  [0:0] p_read2;
output  [0:0] EncoderWeights_2_out;
output   EncoderWeights_2_out_ap_vld;
input  [0:0] p_read3;
output  [0:0] EncoderWeights_3_out;
output   EncoderWeights_3_out_ap_vld;
input  [0:0] p_read4;
output  [0:0] EncoderWeights_4_out;
output   EncoderWeights_4_out_ap_vld;
input  [0:0] p_read5;
output  [0:0] EncoderWeights_5_out;
output   EncoderWeights_5_out_ap_vld;
input  [0:0] p_read6;
output  [0:0] EncoderWeights_6_out;
output   EncoderWeights_6_out_ap_vld;
input  [0:0] p_read7;
output  [0:0] EncoderWeights_7_out;
output   EncoderWeights_7_out_ap_vld;
input  [0:0] p_read8;
output  [0:0] EncoderWeights_8_out;
output   EncoderWeights_8_out_ap_vld;
input  [0:0] p_read9;
output  [0:0] EncoderWeights_9_out;
output   EncoderWeights_9_out_ap_vld;
input  [0:0] p_read10;
output  [0:0] EncoderWeights_10_out;
output   EncoderWeights_10_out_ap_vld;
input  [0:0] p_read11;
output  [0:0] EncoderWeights_11_out;
output   EncoderWeights_11_out_ap_vld;
input  [0:0] p_read12;
output  [0:0] EncoderWeights_12_out;
output   EncoderWeights_12_out_ap_vld;
input  [0:0] p_read13;
output  [0:0] EncoderWeights_13_out;
output   EncoderWeights_13_out_ap_vld;
input  [0:0] p_read14;
output  [0:0] EncoderWeights_14_out;
output   EncoderWeights_14_out_ap_vld;
input  [0:0] p_read15;
output  [0:0] EncoderWeights_15_out;
output   EncoderWeights_15_out_ap_vld;
input  [0:0] p_read16;
output  [0:0] EncoderWeights_16_out;
output   EncoderWeights_16_out_ap_vld;
input  [0:0] p_read17;
output  [0:0] EncoderWeights_17_out;
output   EncoderWeights_17_out_ap_vld;
input  [0:0] p_read18;
output  [0:0] EncoderWeights_18_out;
output   EncoderWeights_18_out_ap_vld;
input  [0:0] p_read19;
output  [0:0] EncoderWeights_19_out;
output   EncoderWeights_19_out_ap_vld;
input  [0:0] p_read20;
output  [0:0] EncoderWeights_20_out;
output   EncoderWeights_20_out_ap_vld;
input  [0:0] p_read21;
output  [0:0] EncoderWeights_21_out;
output   EncoderWeights_21_out_ap_vld;
input  [0:0] p_read22;
output  [0:0] EncoderWeights_22_out;
output   EncoderWeights_22_out_ap_vld;
input  [0:0] p_read23;
output  [0:0] EncoderWeights_23_out;
output   EncoderWeights_23_out_ap_vld;
input  [0:0] p_read24;
output  [0:0] EncoderWeights_24_out;
output   EncoderWeights_24_out_ap_vld;
input  [0:0] p_read25;
output  [0:0] EncoderWeights_25_out;
output   EncoderWeights_25_out_ap_vld;
input  [0:0] p_read26;
output  [0:0] EncoderWeights_26_out;
output   EncoderWeights_26_out_ap_vld;
input  [0:0] p_read27;
output  [0:0] EncoderWeights_27_out;
output   EncoderWeights_27_out_ap_vld;
input  [0:0] p_read28;
output  [0:0] EncoderWeights_28_out;
output   EncoderWeights_28_out_ap_vld;
input  [0:0] p_read29;
output  [0:0] EncoderWeights_29_out;
output   EncoderWeights_29_out_ap_vld;
input  [0:0] p_read30;
output  [0:0] EncoderWeights_30_out;
output   EncoderWeights_30_out_ap_vld;
input  [0:0] p_read31;
output  [0:0] EncoderWeights_31_out;
output   EncoderWeights_31_out_ap_vld;
input  [0:0] p_read32;
output  [0:0] EncoderWeights_32_out;
output   EncoderWeights_32_out_ap_vld;
input  [0:0] p_read33;
output  [0:0] EncoderWeights_33_out;
output   EncoderWeights_33_out_ap_vld;
input  [0:0] p_read34;
output  [0:0] EncoderWeights_34_out;
output   EncoderWeights_34_out_ap_vld;
input  [0:0] p_read35;
output  [0:0] EncoderWeights_35_out;
output   EncoderWeights_35_out_ap_vld;
input  [0:0] p_read36;
output  [0:0] EncoderWeights_36_out;
output   EncoderWeights_36_out_ap_vld;
input  [0:0] p_read37;
output  [0:0] EncoderWeights_37_out;
output   EncoderWeights_37_out_ap_vld;
input  [0:0] p_read38;
output  [0:0] EncoderWeights_38_out;
output   EncoderWeights_38_out_ap_vld;
input  [0:0] p_read39;
output  [0:0] EncoderWeights_39_out;
output   EncoderWeights_39_out_ap_vld;
output  [5:0] PrevEncoderWeightChanges_address0;
output   PrevEncoderWeightChanges_ce0;
output   PrevEncoderWeightChanges_we0;
output  [0:0] PrevEncoderWeightChanges_d0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[0:0] EncoderWeights_0_out;
reg EncoderWeights_0_out_ap_vld;
reg[0:0] EncoderWeights_1_out;
reg EncoderWeights_1_out_ap_vld;
reg[0:0] EncoderWeights_2_out;
reg EncoderWeights_2_out_ap_vld;
reg[0:0] EncoderWeights_3_out;
reg EncoderWeights_3_out_ap_vld;
reg[0:0] EncoderWeights_4_out;
reg EncoderWeights_4_out_ap_vld;
reg[0:0] EncoderWeights_5_out;
reg EncoderWeights_5_out_ap_vld;
reg[0:0] EncoderWeights_6_out;
reg EncoderWeights_6_out_ap_vld;
reg[0:0] EncoderWeights_7_out;
reg EncoderWeights_7_out_ap_vld;
reg[0:0] EncoderWeights_8_out;
reg EncoderWeights_8_out_ap_vld;
reg[0:0] EncoderWeights_9_out;
reg EncoderWeights_9_out_ap_vld;
reg[0:0] EncoderWeights_10_out;
reg EncoderWeights_10_out_ap_vld;
reg[0:0] EncoderWeights_11_out;
reg EncoderWeights_11_out_ap_vld;
reg[0:0] EncoderWeights_12_out;
reg EncoderWeights_12_out_ap_vld;
reg[0:0] EncoderWeights_13_out;
reg EncoderWeights_13_out_ap_vld;
reg[0:0] EncoderWeights_14_out;
reg EncoderWeights_14_out_ap_vld;
reg[0:0] EncoderWeights_15_out;
reg EncoderWeights_15_out_ap_vld;
reg[0:0] EncoderWeights_16_out;
reg EncoderWeights_16_out_ap_vld;
reg[0:0] EncoderWeights_17_out;
reg EncoderWeights_17_out_ap_vld;
reg[0:0] EncoderWeights_18_out;
reg EncoderWeights_18_out_ap_vld;
reg[0:0] EncoderWeights_19_out;
reg EncoderWeights_19_out_ap_vld;
reg[0:0] EncoderWeights_20_out;
reg EncoderWeights_20_out_ap_vld;
reg[0:0] EncoderWeights_21_out;
reg EncoderWeights_21_out_ap_vld;
reg[0:0] EncoderWeights_22_out;
reg EncoderWeights_22_out_ap_vld;
reg[0:0] EncoderWeights_23_out;
reg EncoderWeights_23_out_ap_vld;
reg[0:0] EncoderWeights_24_out;
reg EncoderWeights_24_out_ap_vld;
reg[0:0] EncoderWeights_25_out;
reg EncoderWeights_25_out_ap_vld;
reg[0:0] EncoderWeights_26_out;
reg EncoderWeights_26_out_ap_vld;
reg[0:0] EncoderWeights_27_out;
reg EncoderWeights_27_out_ap_vld;
reg[0:0] EncoderWeights_28_out;
reg EncoderWeights_28_out_ap_vld;
reg[0:0] EncoderWeights_29_out;
reg EncoderWeights_29_out_ap_vld;
reg[0:0] EncoderWeights_30_out;
reg EncoderWeights_30_out_ap_vld;
reg[0:0] EncoderWeights_31_out;
reg EncoderWeights_31_out_ap_vld;
reg[0:0] EncoderWeights_32_out;
reg EncoderWeights_32_out_ap_vld;
reg[0:0] EncoderWeights_33_out;
reg EncoderWeights_33_out_ap_vld;
reg[0:0] EncoderWeights_34_out;
reg EncoderWeights_34_out_ap_vld;
reg[0:0] EncoderWeights_35_out;
reg EncoderWeights_35_out_ap_vld;
reg[0:0] EncoderWeights_36_out;
reg EncoderWeights_36_out_ap_vld;
reg[0:0] EncoderWeights_37_out;
reg EncoderWeights_37_out_ap_vld;
reg[0:0] EncoderWeights_38_out;
reg EncoderWeights_38_out_ap_vld;
reg[0:0] EncoderWeights_39_out;
reg EncoderWeights_39_out_ap_vld;
reg PrevEncoderWeightChanges_ce0;
reg PrevEncoderWeightChanges_we0;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [2:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [2:0] add_ln304_fu_1361_p2;
reg   [2:0] add_ln304_reg_2231;
wire    ap_CS_fsm_state2;
wire   [5:0] zext_ln307_fu_1381_p1;
reg   [5:0] zext_ln307_reg_2236;
wire   [0:0] icmp_ln304_fu_1355_p2;
wire   [3:0] add_ln307_fu_1395_p2;
wire    ap_CS_fsm_state3;
reg   [3:0] h_reg_976;
wire   [0:0] icmp_ln307_fu_1389_p2;
wire   [63:0] zext_ln313_fu_1406_p1;
reg   [2:0] d_fu_278;
reg    ap_block_state1;
reg   [0:0] EncoderWeights_0_copy_0_fu_282;
wire   [0:0] tmp_fu_1411_p42;
wire   [5:0] add_ln310_fu_1401_p2;
reg   [0:0] EncoderWeights_1_copy_0_fu_286;
reg   [0:0] EncoderWeights_2_copy_0_fu_290;
reg   [0:0] EncoderWeights_3_copy_0_fu_294;
reg   [0:0] EncoderWeights_4_copy_0_fu_298;
reg   [0:0] EncoderWeights_5_copy_0_fu_302;
reg   [0:0] EncoderWeights_6_copy_0_fu_306;
reg   [0:0] EncoderWeights_7_copy_0_fu_310;
reg   [0:0] EncoderWeights_8_copy_0_fu_314;
reg   [0:0] EncoderWeights_9_copy_0_fu_318;
reg   [0:0] EncoderWeights_10_copy_0_fu_322;
reg   [0:0] EncoderWeights_11_copy_0_fu_326;
reg   [0:0] EncoderWeights_12_copy_0_fu_330;
reg   [0:0] EncoderWeights_13_copy_0_fu_334;
reg   [0:0] EncoderWeights_14_copy_0_fu_338;
reg   [0:0] EncoderWeights_15_copy_0_fu_342;
reg   [0:0] EncoderWeights_16_copy_0_fu_346;
reg   [0:0] EncoderWeights_17_copy_0_fu_350;
reg   [0:0] EncoderWeights_18_copy_0_fu_354;
reg   [0:0] EncoderWeights_19_copy_0_fu_358;
reg   [0:0] EncoderWeights_20_copy_0_fu_362;
reg   [0:0] EncoderWeights_21_copy_0_fu_366;
reg   [0:0] EncoderWeights_22_copy_0_fu_370;
reg   [0:0] EncoderWeights_23_copy_0_fu_374;
reg   [0:0] EncoderWeights_24_copy_0_fu_378;
reg   [0:0] EncoderWeights_25_copy_0_fu_382;
reg   [0:0] EncoderWeights_26_copy_0_fu_386;
reg   [0:0] EncoderWeights_27_copy_0_fu_390;
reg   [0:0] EncoderWeights_28_copy_0_fu_394;
reg   [0:0] EncoderWeights_29_copy_0_fu_398;
reg   [0:0] EncoderWeights_30_copy_0_fu_402;
reg   [0:0] EncoderWeights_31_copy_0_fu_406;
reg   [0:0] EncoderWeights_32_copy_0_fu_410;
reg   [0:0] EncoderWeights_33_copy_0_fu_414;
reg   [0:0] EncoderWeights_34_copy_0_fu_418;
reg   [0:0] EncoderWeights_35_copy_0_fu_422;
reg   [0:0] EncoderWeights_36_copy_0_fu_426;
reg   [0:0] EncoderWeights_37_copy_0_fu_430;
reg   [0:0] EncoderWeights_38_copy_0_fu_434;
reg   [0:0] EncoderWeights_39_copy_0_fu_438;
reg   [0:0] EncoderWeights_0_out_preg;
reg   [0:0] EncoderWeights_1_out_preg;
reg   [0:0] EncoderWeights_2_out_preg;
reg   [0:0] EncoderWeights_3_out_preg;
reg   [0:0] EncoderWeights_4_out_preg;
reg   [0:0] EncoderWeights_5_out_preg;
reg   [0:0] EncoderWeights_6_out_preg;
reg   [0:0] EncoderWeights_7_out_preg;
reg   [0:0] EncoderWeights_8_out_preg;
reg   [0:0] EncoderWeights_9_out_preg;
reg   [0:0] EncoderWeights_10_out_preg;
reg   [0:0] EncoderWeights_11_out_preg;
reg   [0:0] EncoderWeights_12_out_preg;
reg   [0:0] EncoderWeights_13_out_preg;
reg   [0:0] EncoderWeights_14_out_preg;
reg   [0:0] EncoderWeights_15_out_preg;
reg   [0:0] EncoderWeights_16_out_preg;
reg   [0:0] EncoderWeights_17_out_preg;
reg   [0:0] EncoderWeights_18_out_preg;
reg   [0:0] EncoderWeights_19_out_preg;
reg   [0:0] EncoderWeights_20_out_preg;
reg   [0:0] EncoderWeights_21_out_preg;
reg   [0:0] EncoderWeights_22_out_preg;
reg   [0:0] EncoderWeights_23_out_preg;
reg   [0:0] EncoderWeights_24_out_preg;
reg   [0:0] EncoderWeights_25_out_preg;
reg   [0:0] EncoderWeights_26_out_preg;
reg   [0:0] EncoderWeights_27_out_preg;
reg   [0:0] EncoderWeights_28_out_preg;
reg   [0:0] EncoderWeights_29_out_preg;
reg   [0:0] EncoderWeights_30_out_preg;
reg   [0:0] EncoderWeights_31_out_preg;
reg   [0:0] EncoderWeights_32_out_preg;
reg   [0:0] EncoderWeights_33_out_preg;
reg   [0:0] EncoderWeights_34_out_preg;
reg   [0:0] EncoderWeights_35_out_preg;
reg   [0:0] EncoderWeights_36_out_preg;
reg   [0:0] EncoderWeights_37_out_preg;
reg   [0:0] EncoderWeights_38_out_preg;
reg   [0:0] EncoderWeights_39_out_preg;
wire   [1:0] empty_47_fu_1367_p1;
wire   [4:0] tmp_3_fu_1371_p4;
wire   [5:0] zext_ln307_1_fu_1385_p1;
reg   [2:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
wire    ap_ST_fsm_state2_blk;
wire    ap_ST_fsm_state3_blk;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 3'd1;
#0 EncoderWeights_0_out_preg = 1'd0;
#0 EncoderWeights_1_out_preg = 1'd0;
#0 EncoderWeights_2_out_preg = 1'd0;
#0 EncoderWeights_3_out_preg = 1'd0;
#0 EncoderWeights_4_out_preg = 1'd0;
#0 EncoderWeights_5_out_preg = 1'd0;
#0 EncoderWeights_6_out_preg = 1'd0;
#0 EncoderWeights_7_out_preg = 1'd0;
#0 EncoderWeights_8_out_preg = 1'd0;
#0 EncoderWeights_9_out_preg = 1'd0;
#0 EncoderWeights_10_out_preg = 1'd0;
#0 EncoderWeights_11_out_preg = 1'd0;
#0 EncoderWeights_12_out_preg = 1'd0;
#0 EncoderWeights_13_out_preg = 1'd0;
#0 EncoderWeights_14_out_preg = 1'd0;
#0 EncoderWeights_15_out_preg = 1'd0;
#0 EncoderWeights_16_out_preg = 1'd0;
#0 EncoderWeights_17_out_preg = 1'd0;
#0 EncoderWeights_18_out_preg = 1'd0;
#0 EncoderWeights_19_out_preg = 1'd0;
#0 EncoderWeights_20_out_preg = 1'd0;
#0 EncoderWeights_21_out_preg = 1'd0;
#0 EncoderWeights_22_out_preg = 1'd0;
#0 EncoderWeights_23_out_preg = 1'd0;
#0 EncoderWeights_24_out_preg = 1'd0;
#0 EncoderWeights_25_out_preg = 1'd0;
#0 EncoderWeights_26_out_preg = 1'd0;
#0 EncoderWeights_27_out_preg = 1'd0;
#0 EncoderWeights_28_out_preg = 1'd0;
#0 EncoderWeights_29_out_preg = 1'd0;
#0 EncoderWeights_30_out_preg = 1'd0;
#0 EncoderWeights_31_out_preg = 1'd0;
#0 EncoderWeights_32_out_preg = 1'd0;
#0 EncoderWeights_33_out_preg = 1'd0;
#0 EncoderWeights_34_out_preg = 1'd0;
#0 EncoderWeights_35_out_preg = 1'd0;
#0 EncoderWeights_36_out_preg = 1'd0;
#0 EncoderWeights_37_out_preg = 1'd0;
#0 EncoderWeights_38_out_preg = 1'd0;
#0 EncoderWeights_39_out_preg = 1'd0;
end

Autoencoder_mux_406_1_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 1 ),
    .din1_WIDTH( 1 ),
    .din2_WIDTH( 1 ),
    .din3_WIDTH( 1 ),
    .din4_WIDTH( 1 ),
    .din5_WIDTH( 1 ),
    .din6_WIDTH( 1 ),
    .din7_WIDTH( 1 ),
    .din8_WIDTH( 1 ),
    .din9_WIDTH( 1 ),
    .din10_WIDTH( 1 ),
    .din11_WIDTH( 1 ),
    .din12_WIDTH( 1 ),
    .din13_WIDTH( 1 ),
    .din14_WIDTH( 1 ),
    .din15_WIDTH( 1 ),
    .din16_WIDTH( 1 ),
    .din17_WIDTH( 1 ),
    .din18_WIDTH( 1 ),
    .din19_WIDTH( 1 ),
    .din20_WIDTH( 1 ),
    .din21_WIDTH( 1 ),
    .din22_WIDTH( 1 ),
    .din23_WIDTH( 1 ),
    .din24_WIDTH( 1 ),
    .din25_WIDTH( 1 ),
    .din26_WIDTH( 1 ),
    .din27_WIDTH( 1 ),
    .din28_WIDTH( 1 ),
    .din29_WIDTH( 1 ),
    .din30_WIDTH( 1 ),
    .din31_WIDTH( 1 ),
    .din32_WIDTH( 1 ),
    .din33_WIDTH( 1 ),
    .din34_WIDTH( 1 ),
    .din35_WIDTH( 1 ),
    .din36_WIDTH( 1 ),
    .din37_WIDTH( 1 ),
    .din38_WIDTH( 1 ),
    .din39_WIDTH( 1 ),
    .din40_WIDTH( 6 ),
    .dout_WIDTH( 1 ))
mux_406_1_1_1_U97(
    .din0(EncoderWeights_0_copy_0_fu_282),
    .din1(EncoderWeights_1_copy_0_fu_286),
    .din2(EncoderWeights_2_copy_0_fu_290),
    .din3(EncoderWeights_3_copy_0_fu_294),
    .din4(EncoderWeights_4_copy_0_fu_298),
    .din5(EncoderWeights_5_copy_0_fu_302),
    .din6(EncoderWeights_6_copy_0_fu_306),
    .din7(EncoderWeights_7_copy_0_fu_310),
    .din8(EncoderWeights_8_copy_0_fu_314),
    .din9(EncoderWeights_9_copy_0_fu_318),
    .din10(EncoderWeights_10_copy_0_fu_322),
    .din11(EncoderWeights_11_copy_0_fu_326),
    .din12(EncoderWeights_12_copy_0_fu_330),
    .din13(EncoderWeights_13_copy_0_fu_334),
    .din14(EncoderWeights_14_copy_0_fu_338),
    .din15(EncoderWeights_15_copy_0_fu_342),
    .din16(EncoderWeights_16_copy_0_fu_346),
    .din17(EncoderWeights_17_copy_0_fu_350),
    .din18(EncoderWeights_18_copy_0_fu_354),
    .din19(EncoderWeights_19_copy_0_fu_358),
    .din20(EncoderWeights_20_copy_0_fu_362),
    .din21(EncoderWeights_21_copy_0_fu_366),
    .din22(EncoderWeights_22_copy_0_fu_370),
    .din23(EncoderWeights_23_copy_0_fu_374),
    .din24(EncoderWeights_24_copy_0_fu_378),
    .din25(EncoderWeights_25_copy_0_fu_382),
    .din26(EncoderWeights_26_copy_0_fu_386),
    .din27(EncoderWeights_27_copy_0_fu_390),
    .din28(EncoderWeights_28_copy_0_fu_394),
    .din29(EncoderWeights_29_copy_0_fu_398),
    .din30(EncoderWeights_30_copy_0_fu_402),
    .din31(EncoderWeights_31_copy_0_fu_406),
    .din32(EncoderWeights_32_copy_0_fu_410),
    .din33(EncoderWeights_33_copy_0_fu_414),
    .din34(EncoderWeights_34_copy_0_fu_418),
    .din35(EncoderWeights_35_copy_0_fu_422),
    .din36(EncoderWeights_36_copy_0_fu_426),
    .din37(EncoderWeights_37_copy_0_fu_430),
    .din38(EncoderWeights_38_copy_0_fu_434),
    .din39(EncoderWeights_39_copy_0_fu_438),
    .din40(add_ln310_fu_1401_p2),
    .dout(tmp_fu_1411_p42)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        EncoderWeights_0_out_preg <= 1'd0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln304_fu_1355_p2 == 1'd1))) begin
            EncoderWeights_0_out_preg <= EncoderWeights_0_copy_0_fu_282;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        EncoderWeights_10_out_preg <= 1'd0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln304_fu_1355_p2 == 1'd1))) begin
            EncoderWeights_10_out_preg <= EncoderWeights_10_copy_0_fu_322;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        EncoderWeights_11_out_preg <= 1'd0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln304_fu_1355_p2 == 1'd1))) begin
            EncoderWeights_11_out_preg <= EncoderWeights_11_copy_0_fu_326;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        EncoderWeights_12_out_preg <= 1'd0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln304_fu_1355_p2 == 1'd1))) begin
            EncoderWeights_12_out_preg <= EncoderWeights_12_copy_0_fu_330;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        EncoderWeights_13_out_preg <= 1'd0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln304_fu_1355_p2 == 1'd1))) begin
            EncoderWeights_13_out_preg <= EncoderWeights_13_copy_0_fu_334;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        EncoderWeights_14_out_preg <= 1'd0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln304_fu_1355_p2 == 1'd1))) begin
            EncoderWeights_14_out_preg <= EncoderWeights_14_copy_0_fu_338;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        EncoderWeights_15_out_preg <= 1'd0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln304_fu_1355_p2 == 1'd1))) begin
            EncoderWeights_15_out_preg <= EncoderWeights_15_copy_0_fu_342;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        EncoderWeights_16_out_preg <= 1'd0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln304_fu_1355_p2 == 1'd1))) begin
            EncoderWeights_16_out_preg <= EncoderWeights_16_copy_0_fu_346;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        EncoderWeights_17_out_preg <= 1'd0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln304_fu_1355_p2 == 1'd1))) begin
            EncoderWeights_17_out_preg <= EncoderWeights_17_copy_0_fu_350;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        EncoderWeights_18_out_preg <= 1'd0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln304_fu_1355_p2 == 1'd1))) begin
            EncoderWeights_18_out_preg <= EncoderWeights_18_copy_0_fu_354;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        EncoderWeights_19_out_preg <= 1'd0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln304_fu_1355_p2 == 1'd1))) begin
            EncoderWeights_19_out_preg <= EncoderWeights_19_copy_0_fu_358;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        EncoderWeights_1_out_preg <= 1'd0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln304_fu_1355_p2 == 1'd1))) begin
            EncoderWeights_1_out_preg <= EncoderWeights_1_copy_0_fu_286;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        EncoderWeights_20_out_preg <= 1'd0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln304_fu_1355_p2 == 1'd1))) begin
            EncoderWeights_20_out_preg <= EncoderWeights_20_copy_0_fu_362;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        EncoderWeights_21_out_preg <= 1'd0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln304_fu_1355_p2 == 1'd1))) begin
            EncoderWeights_21_out_preg <= EncoderWeights_21_copy_0_fu_366;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        EncoderWeights_22_out_preg <= 1'd0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln304_fu_1355_p2 == 1'd1))) begin
            EncoderWeights_22_out_preg <= EncoderWeights_22_copy_0_fu_370;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        EncoderWeights_23_out_preg <= 1'd0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln304_fu_1355_p2 == 1'd1))) begin
            EncoderWeights_23_out_preg <= EncoderWeights_23_copy_0_fu_374;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        EncoderWeights_24_out_preg <= 1'd0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln304_fu_1355_p2 == 1'd1))) begin
            EncoderWeights_24_out_preg <= EncoderWeights_24_copy_0_fu_378;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        EncoderWeights_25_out_preg <= 1'd0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln304_fu_1355_p2 == 1'd1))) begin
            EncoderWeights_25_out_preg <= EncoderWeights_25_copy_0_fu_382;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        EncoderWeights_26_out_preg <= 1'd0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln304_fu_1355_p2 == 1'd1))) begin
            EncoderWeights_26_out_preg <= EncoderWeights_26_copy_0_fu_386;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        EncoderWeights_27_out_preg <= 1'd0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln304_fu_1355_p2 == 1'd1))) begin
            EncoderWeights_27_out_preg <= EncoderWeights_27_copy_0_fu_390;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        EncoderWeights_28_out_preg <= 1'd0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln304_fu_1355_p2 == 1'd1))) begin
            EncoderWeights_28_out_preg <= EncoderWeights_28_copy_0_fu_394;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        EncoderWeights_29_out_preg <= 1'd0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln304_fu_1355_p2 == 1'd1))) begin
            EncoderWeights_29_out_preg <= EncoderWeights_29_copy_0_fu_398;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        EncoderWeights_2_out_preg <= 1'd0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln304_fu_1355_p2 == 1'd1))) begin
            EncoderWeights_2_out_preg <= EncoderWeights_2_copy_0_fu_290;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        EncoderWeights_30_out_preg <= 1'd0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln304_fu_1355_p2 == 1'd1))) begin
            EncoderWeights_30_out_preg <= EncoderWeights_30_copy_0_fu_402;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        EncoderWeights_31_out_preg <= 1'd0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln304_fu_1355_p2 == 1'd1))) begin
            EncoderWeights_31_out_preg <= EncoderWeights_31_copy_0_fu_406;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        EncoderWeights_32_out_preg <= 1'd0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln304_fu_1355_p2 == 1'd1))) begin
            EncoderWeights_32_out_preg <= EncoderWeights_32_copy_0_fu_410;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        EncoderWeights_33_out_preg <= 1'd0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln304_fu_1355_p2 == 1'd1))) begin
            EncoderWeights_33_out_preg <= EncoderWeights_33_copy_0_fu_414;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        EncoderWeights_34_out_preg <= 1'd0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln304_fu_1355_p2 == 1'd1))) begin
            EncoderWeights_34_out_preg <= EncoderWeights_34_copy_0_fu_418;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        EncoderWeights_35_out_preg <= 1'd0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln304_fu_1355_p2 == 1'd1))) begin
            EncoderWeights_35_out_preg <= EncoderWeights_35_copy_0_fu_422;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        EncoderWeights_36_out_preg <= 1'd0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln304_fu_1355_p2 == 1'd1))) begin
            EncoderWeights_36_out_preg <= EncoderWeights_36_copy_0_fu_426;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        EncoderWeights_37_out_preg <= 1'd0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln304_fu_1355_p2 == 1'd1))) begin
            EncoderWeights_37_out_preg <= EncoderWeights_37_copy_0_fu_430;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        EncoderWeights_38_out_preg <= 1'd0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln304_fu_1355_p2 == 1'd1))) begin
            EncoderWeights_38_out_preg <= EncoderWeights_38_copy_0_fu_434;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        EncoderWeights_39_out_preg <= 1'd0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln304_fu_1355_p2 == 1'd1))) begin
            EncoderWeights_39_out_preg <= EncoderWeights_39_copy_0_fu_438;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        EncoderWeights_3_out_preg <= 1'd0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln304_fu_1355_p2 == 1'd1))) begin
            EncoderWeights_3_out_preg <= EncoderWeights_3_copy_0_fu_294;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        EncoderWeights_4_out_preg <= 1'd0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln304_fu_1355_p2 == 1'd1))) begin
            EncoderWeights_4_out_preg <= EncoderWeights_4_copy_0_fu_298;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        EncoderWeights_5_out_preg <= 1'd0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln304_fu_1355_p2 == 1'd1))) begin
            EncoderWeights_5_out_preg <= EncoderWeights_5_copy_0_fu_302;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        EncoderWeights_6_out_preg <= 1'd0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln304_fu_1355_p2 == 1'd1))) begin
            EncoderWeights_6_out_preg <= EncoderWeights_6_copy_0_fu_306;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        EncoderWeights_7_out_preg <= 1'd0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln304_fu_1355_p2 == 1'd1))) begin
            EncoderWeights_7_out_preg <= EncoderWeights_7_copy_0_fu_310;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        EncoderWeights_8_out_preg <= 1'd0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln304_fu_1355_p2 == 1'd1))) begin
            EncoderWeights_8_out_preg <= EncoderWeights_8_copy_0_fu_314;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        EncoderWeights_9_out_preg <= 1'd0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln304_fu_1355_p2 == 1'd1))) begin
            EncoderWeights_9_out_preg <= EncoderWeights_9_copy_0_fu_318;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln304_fu_1355_p2 == 1'd1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        EncoderWeights_0_copy_0_fu_282 <= p_read;
    end else if (((1'b1 == ap_CS_fsm_state3) & (6'd0 == add_ln310_fu_1401_p2) & (icmp_ln307_fu_1389_p2 == 1'd0))) begin
        EncoderWeights_0_copy_0_fu_282 <= tmp_fu_1411_p42;
    end else if (((1'b1 == ap_CS_fsm_state3) & (6'd0 == add_ln310_fu_1401_p2) & (tmp_fu_1411_p42 == 1'd0) & (icmp_ln307_fu_1389_p2 == 1'd0))) begin
        EncoderWeights_0_copy_0_fu_282 <= 1'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        EncoderWeights_10_copy_0_fu_322 <= p_read10;
    end else if (((6'd10 == add_ln310_fu_1401_p2) & (1'b1 == ap_CS_fsm_state3) & (icmp_ln307_fu_1389_p2 == 1'd0))) begin
        EncoderWeights_10_copy_0_fu_322 <= tmp_fu_1411_p42;
    end else if (((6'd10 == add_ln310_fu_1401_p2) & (1'b1 == ap_CS_fsm_state3) & (tmp_fu_1411_p42 == 1'd0) & (icmp_ln307_fu_1389_p2 == 1'd0))) begin
        EncoderWeights_10_copy_0_fu_322 <= 1'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        EncoderWeights_11_copy_0_fu_326 <= p_read11;
    end else if (((6'd11 == add_ln310_fu_1401_p2) & (1'b1 == ap_CS_fsm_state3) & (icmp_ln307_fu_1389_p2 == 1'd0))) begin
        EncoderWeights_11_copy_0_fu_326 <= tmp_fu_1411_p42;
    end else if (((6'd11 == add_ln310_fu_1401_p2) & (1'b1 == ap_CS_fsm_state3) & (tmp_fu_1411_p42 == 1'd0) & (icmp_ln307_fu_1389_p2 == 1'd0))) begin
        EncoderWeights_11_copy_0_fu_326 <= 1'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        EncoderWeights_12_copy_0_fu_330 <= p_read12;
    end else if (((6'd12 == add_ln310_fu_1401_p2) & (1'b1 == ap_CS_fsm_state3) & (icmp_ln307_fu_1389_p2 == 1'd0))) begin
        EncoderWeights_12_copy_0_fu_330 <= tmp_fu_1411_p42;
    end else if (((6'd12 == add_ln310_fu_1401_p2) & (1'b1 == ap_CS_fsm_state3) & (tmp_fu_1411_p42 == 1'd0) & (icmp_ln307_fu_1389_p2 == 1'd0))) begin
        EncoderWeights_12_copy_0_fu_330 <= 1'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        EncoderWeights_13_copy_0_fu_334 <= p_read13;
    end else if (((6'd13 == add_ln310_fu_1401_p2) & (1'b1 == ap_CS_fsm_state3) & (icmp_ln307_fu_1389_p2 == 1'd0))) begin
        EncoderWeights_13_copy_0_fu_334 <= tmp_fu_1411_p42;
    end else if (((6'd13 == add_ln310_fu_1401_p2) & (1'b1 == ap_CS_fsm_state3) & (tmp_fu_1411_p42 == 1'd0) & (icmp_ln307_fu_1389_p2 == 1'd0))) begin
        EncoderWeights_13_copy_0_fu_334 <= 1'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        EncoderWeights_14_copy_0_fu_338 <= p_read14;
    end else if (((6'd14 == add_ln310_fu_1401_p2) & (1'b1 == ap_CS_fsm_state3) & (icmp_ln307_fu_1389_p2 == 1'd0))) begin
        EncoderWeights_14_copy_0_fu_338 <= tmp_fu_1411_p42;
    end else if (((6'd14 == add_ln310_fu_1401_p2) & (1'b1 == ap_CS_fsm_state3) & (tmp_fu_1411_p42 == 1'd0) & (icmp_ln307_fu_1389_p2 == 1'd0))) begin
        EncoderWeights_14_copy_0_fu_338 <= 1'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        EncoderWeights_15_copy_0_fu_342 <= p_read15;
    end else if (((6'd15 == add_ln310_fu_1401_p2) & (1'b1 == ap_CS_fsm_state3) & (icmp_ln307_fu_1389_p2 == 1'd0))) begin
        EncoderWeights_15_copy_0_fu_342 <= tmp_fu_1411_p42;
    end else if (((6'd15 == add_ln310_fu_1401_p2) & (1'b1 == ap_CS_fsm_state3) & (tmp_fu_1411_p42 == 1'd0) & (icmp_ln307_fu_1389_p2 == 1'd0))) begin
        EncoderWeights_15_copy_0_fu_342 <= 1'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        EncoderWeights_16_copy_0_fu_346 <= p_read16;
    end else if (((6'd16 == add_ln310_fu_1401_p2) & (1'b1 == ap_CS_fsm_state3) & (icmp_ln307_fu_1389_p2 == 1'd0))) begin
        EncoderWeights_16_copy_0_fu_346 <= tmp_fu_1411_p42;
    end else if (((6'd16 == add_ln310_fu_1401_p2) & (1'b1 == ap_CS_fsm_state3) & (tmp_fu_1411_p42 == 1'd0) & (icmp_ln307_fu_1389_p2 == 1'd0))) begin
        EncoderWeights_16_copy_0_fu_346 <= 1'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        EncoderWeights_17_copy_0_fu_350 <= p_read17;
    end else if (((6'd17 == add_ln310_fu_1401_p2) & (1'b1 == ap_CS_fsm_state3) & (icmp_ln307_fu_1389_p2 == 1'd0))) begin
        EncoderWeights_17_copy_0_fu_350 <= tmp_fu_1411_p42;
    end else if (((6'd17 == add_ln310_fu_1401_p2) & (1'b1 == ap_CS_fsm_state3) & (tmp_fu_1411_p42 == 1'd0) & (icmp_ln307_fu_1389_p2 == 1'd0))) begin
        EncoderWeights_17_copy_0_fu_350 <= 1'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        EncoderWeights_18_copy_0_fu_354 <= p_read18;
    end else if (((6'd18 == add_ln310_fu_1401_p2) & (1'b1 == ap_CS_fsm_state3) & (icmp_ln307_fu_1389_p2 == 1'd0))) begin
        EncoderWeights_18_copy_0_fu_354 <= tmp_fu_1411_p42;
    end else if (((6'd18 == add_ln310_fu_1401_p2) & (1'b1 == ap_CS_fsm_state3) & (tmp_fu_1411_p42 == 1'd0) & (icmp_ln307_fu_1389_p2 == 1'd0))) begin
        EncoderWeights_18_copy_0_fu_354 <= 1'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        EncoderWeights_19_copy_0_fu_358 <= p_read19;
    end else if (((6'd19 == add_ln310_fu_1401_p2) & (1'b1 == ap_CS_fsm_state3) & (icmp_ln307_fu_1389_p2 == 1'd0))) begin
        EncoderWeights_19_copy_0_fu_358 <= tmp_fu_1411_p42;
    end else if (((6'd19 == add_ln310_fu_1401_p2) & (1'b1 == ap_CS_fsm_state3) & (tmp_fu_1411_p42 == 1'd0) & (icmp_ln307_fu_1389_p2 == 1'd0))) begin
        EncoderWeights_19_copy_0_fu_358 <= 1'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        EncoderWeights_1_copy_0_fu_286 <= p_read1;
    end else if (((6'd1 == add_ln310_fu_1401_p2) & (1'b1 == ap_CS_fsm_state3) & (icmp_ln307_fu_1389_p2 == 1'd0))) begin
        EncoderWeights_1_copy_0_fu_286 <= tmp_fu_1411_p42;
    end else if (((6'd1 == add_ln310_fu_1401_p2) & (1'b1 == ap_CS_fsm_state3) & (tmp_fu_1411_p42 == 1'd0) & (icmp_ln307_fu_1389_p2 == 1'd0))) begin
        EncoderWeights_1_copy_0_fu_286 <= 1'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        EncoderWeights_20_copy_0_fu_362 <= p_read20;
    end else if (((6'd20 == add_ln310_fu_1401_p2) & (1'b1 == ap_CS_fsm_state3) & (icmp_ln307_fu_1389_p2 == 1'd0))) begin
        EncoderWeights_20_copy_0_fu_362 <= tmp_fu_1411_p42;
    end else if (((6'd20 == add_ln310_fu_1401_p2) & (1'b1 == ap_CS_fsm_state3) & (tmp_fu_1411_p42 == 1'd0) & (icmp_ln307_fu_1389_p2 == 1'd0))) begin
        EncoderWeights_20_copy_0_fu_362 <= 1'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        EncoderWeights_21_copy_0_fu_366 <= p_read21;
    end else if (((6'd21 == add_ln310_fu_1401_p2) & (1'b1 == ap_CS_fsm_state3) & (icmp_ln307_fu_1389_p2 == 1'd0))) begin
        EncoderWeights_21_copy_0_fu_366 <= tmp_fu_1411_p42;
    end else if (((6'd21 == add_ln310_fu_1401_p2) & (1'b1 == ap_CS_fsm_state3) & (tmp_fu_1411_p42 == 1'd0) & (icmp_ln307_fu_1389_p2 == 1'd0))) begin
        EncoderWeights_21_copy_0_fu_366 <= 1'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        EncoderWeights_22_copy_0_fu_370 <= p_read22;
    end else if (((6'd22 == add_ln310_fu_1401_p2) & (1'b1 == ap_CS_fsm_state3) & (icmp_ln307_fu_1389_p2 == 1'd0))) begin
        EncoderWeights_22_copy_0_fu_370 <= tmp_fu_1411_p42;
    end else if (((6'd22 == add_ln310_fu_1401_p2) & (1'b1 == ap_CS_fsm_state3) & (tmp_fu_1411_p42 == 1'd0) & (icmp_ln307_fu_1389_p2 == 1'd0))) begin
        EncoderWeights_22_copy_0_fu_370 <= 1'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        EncoderWeights_23_copy_0_fu_374 <= p_read23;
    end else if (((6'd23 == add_ln310_fu_1401_p2) & (1'b1 == ap_CS_fsm_state3) & (icmp_ln307_fu_1389_p2 == 1'd0))) begin
        EncoderWeights_23_copy_0_fu_374 <= tmp_fu_1411_p42;
    end else if (((6'd23 == add_ln310_fu_1401_p2) & (1'b1 == ap_CS_fsm_state3) & (tmp_fu_1411_p42 == 1'd0) & (icmp_ln307_fu_1389_p2 == 1'd0))) begin
        EncoderWeights_23_copy_0_fu_374 <= 1'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        EncoderWeights_24_copy_0_fu_378 <= p_read24;
    end else if (((6'd24 == add_ln310_fu_1401_p2) & (1'b1 == ap_CS_fsm_state3) & (icmp_ln307_fu_1389_p2 == 1'd0))) begin
        EncoderWeights_24_copy_0_fu_378 <= tmp_fu_1411_p42;
    end else if (((6'd24 == add_ln310_fu_1401_p2) & (1'b1 == ap_CS_fsm_state3) & (tmp_fu_1411_p42 == 1'd0) & (icmp_ln307_fu_1389_p2 == 1'd0))) begin
        EncoderWeights_24_copy_0_fu_378 <= 1'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        EncoderWeights_25_copy_0_fu_382 <= p_read25;
    end else if (((6'd25 == add_ln310_fu_1401_p2) & (1'b1 == ap_CS_fsm_state3) & (icmp_ln307_fu_1389_p2 == 1'd0))) begin
        EncoderWeights_25_copy_0_fu_382 <= tmp_fu_1411_p42;
    end else if (((6'd25 == add_ln310_fu_1401_p2) & (1'b1 == ap_CS_fsm_state3) & (tmp_fu_1411_p42 == 1'd0) & (icmp_ln307_fu_1389_p2 == 1'd0))) begin
        EncoderWeights_25_copy_0_fu_382 <= 1'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        EncoderWeights_26_copy_0_fu_386 <= p_read26;
    end else if (((6'd26 == add_ln310_fu_1401_p2) & (1'b1 == ap_CS_fsm_state3) & (icmp_ln307_fu_1389_p2 == 1'd0))) begin
        EncoderWeights_26_copy_0_fu_386 <= tmp_fu_1411_p42;
    end else if (((6'd26 == add_ln310_fu_1401_p2) & (1'b1 == ap_CS_fsm_state3) & (tmp_fu_1411_p42 == 1'd0) & (icmp_ln307_fu_1389_p2 == 1'd0))) begin
        EncoderWeights_26_copy_0_fu_386 <= 1'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        EncoderWeights_27_copy_0_fu_390 <= p_read27;
    end else if (((6'd27 == add_ln310_fu_1401_p2) & (1'b1 == ap_CS_fsm_state3) & (icmp_ln307_fu_1389_p2 == 1'd0))) begin
        EncoderWeights_27_copy_0_fu_390 <= tmp_fu_1411_p42;
    end else if (((6'd27 == add_ln310_fu_1401_p2) & (1'b1 == ap_CS_fsm_state3) & (tmp_fu_1411_p42 == 1'd0) & (icmp_ln307_fu_1389_p2 == 1'd0))) begin
        EncoderWeights_27_copy_0_fu_390 <= 1'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        EncoderWeights_28_copy_0_fu_394 <= p_read28;
    end else if (((6'd28 == add_ln310_fu_1401_p2) & (1'b1 == ap_CS_fsm_state3) & (icmp_ln307_fu_1389_p2 == 1'd0))) begin
        EncoderWeights_28_copy_0_fu_394 <= tmp_fu_1411_p42;
    end else if (((6'd28 == add_ln310_fu_1401_p2) & (1'b1 == ap_CS_fsm_state3) & (tmp_fu_1411_p42 == 1'd0) & (icmp_ln307_fu_1389_p2 == 1'd0))) begin
        EncoderWeights_28_copy_0_fu_394 <= 1'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        EncoderWeights_29_copy_0_fu_398 <= p_read29;
    end else if (((6'd29 == add_ln310_fu_1401_p2) & (1'b1 == ap_CS_fsm_state3) & (icmp_ln307_fu_1389_p2 == 1'd0))) begin
        EncoderWeights_29_copy_0_fu_398 <= tmp_fu_1411_p42;
    end else if (((6'd29 == add_ln310_fu_1401_p2) & (1'b1 == ap_CS_fsm_state3) & (tmp_fu_1411_p42 == 1'd0) & (icmp_ln307_fu_1389_p2 == 1'd0))) begin
        EncoderWeights_29_copy_0_fu_398 <= 1'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        EncoderWeights_2_copy_0_fu_290 <= p_read2;
    end else if (((6'd2 == add_ln310_fu_1401_p2) & (1'b1 == ap_CS_fsm_state3) & (icmp_ln307_fu_1389_p2 == 1'd0))) begin
        EncoderWeights_2_copy_0_fu_290 <= tmp_fu_1411_p42;
    end else if (((6'd2 == add_ln310_fu_1401_p2) & (1'b1 == ap_CS_fsm_state3) & (tmp_fu_1411_p42 == 1'd0) & (icmp_ln307_fu_1389_p2 == 1'd0))) begin
        EncoderWeights_2_copy_0_fu_290 <= 1'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        EncoderWeights_30_copy_0_fu_402 <= p_read30;
    end else if (((6'd30 == add_ln310_fu_1401_p2) & (1'b1 == ap_CS_fsm_state3) & (icmp_ln307_fu_1389_p2 == 1'd0))) begin
        EncoderWeights_30_copy_0_fu_402 <= tmp_fu_1411_p42;
    end else if (((6'd30 == add_ln310_fu_1401_p2) & (1'b1 == ap_CS_fsm_state3) & (tmp_fu_1411_p42 == 1'd0) & (icmp_ln307_fu_1389_p2 == 1'd0))) begin
        EncoderWeights_30_copy_0_fu_402 <= 1'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        EncoderWeights_31_copy_0_fu_406 <= p_read31;
    end else if (((6'd31 == add_ln310_fu_1401_p2) & (1'b1 == ap_CS_fsm_state3) & (icmp_ln307_fu_1389_p2 == 1'd0))) begin
        EncoderWeights_31_copy_0_fu_406 <= tmp_fu_1411_p42;
    end else if (((6'd31 == add_ln310_fu_1401_p2) & (1'b1 == ap_CS_fsm_state3) & (tmp_fu_1411_p42 == 1'd0) & (icmp_ln307_fu_1389_p2 == 1'd0))) begin
        EncoderWeights_31_copy_0_fu_406 <= 1'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        EncoderWeights_32_copy_0_fu_410 <= p_read32;
    end else if (((6'd32 == add_ln310_fu_1401_p2) & (1'b1 == ap_CS_fsm_state3) & (icmp_ln307_fu_1389_p2 == 1'd0))) begin
        EncoderWeights_32_copy_0_fu_410 <= tmp_fu_1411_p42;
    end else if (((6'd32 == add_ln310_fu_1401_p2) & (1'b1 == ap_CS_fsm_state3) & (tmp_fu_1411_p42 == 1'd0) & (icmp_ln307_fu_1389_p2 == 1'd0))) begin
        EncoderWeights_32_copy_0_fu_410 <= 1'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        EncoderWeights_33_copy_0_fu_414 <= p_read33;
    end else if (((6'd33 == add_ln310_fu_1401_p2) & (1'b1 == ap_CS_fsm_state3) & (icmp_ln307_fu_1389_p2 == 1'd0))) begin
        EncoderWeights_33_copy_0_fu_414 <= tmp_fu_1411_p42;
    end else if (((6'd33 == add_ln310_fu_1401_p2) & (1'b1 == ap_CS_fsm_state3) & (tmp_fu_1411_p42 == 1'd0) & (icmp_ln307_fu_1389_p2 == 1'd0))) begin
        EncoderWeights_33_copy_0_fu_414 <= 1'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        EncoderWeights_34_copy_0_fu_418 <= p_read34;
    end else if (((6'd34 == add_ln310_fu_1401_p2) & (1'b1 == ap_CS_fsm_state3) & (icmp_ln307_fu_1389_p2 == 1'd0))) begin
        EncoderWeights_34_copy_0_fu_418 <= tmp_fu_1411_p42;
    end else if (((6'd34 == add_ln310_fu_1401_p2) & (1'b1 == ap_CS_fsm_state3) & (tmp_fu_1411_p42 == 1'd0) & (icmp_ln307_fu_1389_p2 == 1'd0))) begin
        EncoderWeights_34_copy_0_fu_418 <= 1'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        EncoderWeights_35_copy_0_fu_422 <= p_read35;
    end else if (((6'd35 == add_ln310_fu_1401_p2) & (1'b1 == ap_CS_fsm_state3) & (icmp_ln307_fu_1389_p2 == 1'd0))) begin
        EncoderWeights_35_copy_0_fu_422 <= tmp_fu_1411_p42;
    end else if (((6'd35 == add_ln310_fu_1401_p2) & (1'b1 == ap_CS_fsm_state3) & (tmp_fu_1411_p42 == 1'd0) & (icmp_ln307_fu_1389_p2 == 1'd0))) begin
        EncoderWeights_35_copy_0_fu_422 <= 1'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        EncoderWeights_36_copy_0_fu_426 <= p_read36;
    end else if (((6'd36 == add_ln310_fu_1401_p2) & (1'b1 == ap_CS_fsm_state3) & (icmp_ln307_fu_1389_p2 == 1'd0))) begin
        EncoderWeights_36_copy_0_fu_426 <= tmp_fu_1411_p42;
    end else if (((6'd36 == add_ln310_fu_1401_p2) & (1'b1 == ap_CS_fsm_state3) & (tmp_fu_1411_p42 == 1'd0) & (icmp_ln307_fu_1389_p2 == 1'd0))) begin
        EncoderWeights_36_copy_0_fu_426 <= 1'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        EncoderWeights_37_copy_0_fu_430 <= p_read37;
    end else if (((6'd37 == add_ln310_fu_1401_p2) & (1'b1 == ap_CS_fsm_state3) & (icmp_ln307_fu_1389_p2 == 1'd0))) begin
        EncoderWeights_37_copy_0_fu_430 <= tmp_fu_1411_p42;
    end else if (((6'd37 == add_ln310_fu_1401_p2) & (1'b1 == ap_CS_fsm_state3) & (tmp_fu_1411_p42 == 1'd0) & (icmp_ln307_fu_1389_p2 == 1'd0))) begin
        EncoderWeights_37_copy_0_fu_430 <= 1'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        EncoderWeights_38_copy_0_fu_434 <= p_read38;
    end else if (((6'd38 == add_ln310_fu_1401_p2) & (1'b1 == ap_CS_fsm_state3) & (icmp_ln307_fu_1389_p2 == 1'd0))) begin
        EncoderWeights_38_copy_0_fu_434 <= tmp_fu_1411_p42;
    end else if (((6'd38 == add_ln310_fu_1401_p2) & (1'b1 == ap_CS_fsm_state3) & (tmp_fu_1411_p42 == 1'd0) & (icmp_ln307_fu_1389_p2 == 1'd0))) begin
        EncoderWeights_38_copy_0_fu_434 <= 1'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        EncoderWeights_39_copy_0_fu_438 <= p_read39;
    end else if ((~(6'd38 == add_ln310_fu_1401_p2) & ~(6'd37 == add_ln310_fu_1401_p2) & ~(6'd36 == add_ln310_fu_1401_p2) & ~(6'd35 == add_ln310_fu_1401_p2) & ~(6'd34 == add_ln310_fu_1401_p2) & ~(6'd33 == add_ln310_fu_1401_p2) & ~(6'd32 == add_ln310_fu_1401_p2) & ~(6'd31 == add_ln310_fu_1401_p2) & ~(6'd30 == add_ln310_fu_1401_p2) & ~(6'd29 == add_ln310_fu_1401_p2) & ~(6'd28 == add_ln310_fu_1401_p2) & ~(6'd27 == add_ln310_fu_1401_p2) & ~(6'd26 == add_ln310_fu_1401_p2) & ~(6'd25 == add_ln310_fu_1401_p2) & ~(6'd24 == add_ln310_fu_1401_p2) & ~(6'd23 == add_ln310_fu_1401_p2) & ~(6'd22 == add_ln310_fu_1401_p2) & ~(6'd21 == add_ln310_fu_1401_p2) & ~(6'd20 == add_ln310_fu_1401_p2) & ~(6'd19 == add_ln310_fu_1401_p2) & ~(6'd18 == add_ln310_fu_1401_p2) & ~(6'd17 == add_ln310_fu_1401_p2) & ~(6'd16 == add_ln310_fu_1401_p2) & ~(6'd15 == add_ln310_fu_1401_p2) & ~(6'd14 == add_ln310_fu_1401_p2) & ~(6'd13 == add_ln310_fu_1401_p2) & ~(6'd12 == add_ln310_fu_1401_p2) & ~(6'd11 == add_ln310_fu_1401_p2) & ~(6'd10 == add_ln310_fu_1401_p2) & ~(6'd9 == add_ln310_fu_1401_p2) & ~(6'd8 == add_ln310_fu_1401_p2) & ~(6'd7 == add_ln310_fu_1401_p2) & ~(6'd6 == add_ln310_fu_1401_p2) & ~(6'd5 == add_ln310_fu_1401_p2) & ~(6'd4 == add_ln310_fu_1401_p2) & ~(6'd3 == add_ln310_fu_1401_p2) & ~(6'd2 == add_ln310_fu_1401_p2) & ~(6'd1 == add_ln310_fu_1401_p2) & ~(6'd0 == add_ln310_fu_1401_p2) & (1'b1 == ap_CS_fsm_state3) & (icmp_ln307_fu_1389_p2 == 1'd0))) begin
        EncoderWeights_39_copy_0_fu_438 <= tmp_fu_1411_p42;
    end else if ((~(6'd38 == add_ln310_fu_1401_p2) & ~(6'd37 == add_ln310_fu_1401_p2) & ~(6'd36 == add_ln310_fu_1401_p2) & ~(6'd35 == add_ln310_fu_1401_p2) & ~(6'd34 == add_ln310_fu_1401_p2) & ~(6'd33 == add_ln310_fu_1401_p2) & ~(6'd32 == add_ln310_fu_1401_p2) & ~(6'd31 == add_ln310_fu_1401_p2) & ~(6'd30 == add_ln310_fu_1401_p2) & ~(6'd29 == add_ln310_fu_1401_p2) & ~(6'd28 == add_ln310_fu_1401_p2) & ~(6'd27 == add_ln310_fu_1401_p2) & ~(6'd26 == add_ln310_fu_1401_p2) & ~(6'd25 == add_ln310_fu_1401_p2) & ~(6'd24 == add_ln310_fu_1401_p2) & ~(6'd23 == add_ln310_fu_1401_p2) & ~(6'd22 == add_ln310_fu_1401_p2) & ~(6'd21 == add_ln310_fu_1401_p2) & ~(6'd20 == add_ln310_fu_1401_p2) & ~(6'd19 == add_ln310_fu_1401_p2) & ~(6'd18 == add_ln310_fu_1401_p2) & ~(6'd17 == add_ln310_fu_1401_p2) & ~(6'd16 == add_ln310_fu_1401_p2) & ~(6'd15 == add_ln310_fu_1401_p2) & ~(6'd14 == add_ln310_fu_1401_p2) & ~(6'd13 == add_ln310_fu_1401_p2) & ~(6'd12 == add_ln310_fu_1401_p2) & ~(6'd11 == add_ln310_fu_1401_p2) & ~(6'd10 == add_ln310_fu_1401_p2) & ~(6'd9 == add_ln310_fu_1401_p2) & ~(6'd8 == add_ln310_fu_1401_p2) & ~(6'd7 == add_ln310_fu_1401_p2) & ~(6'd6 == add_ln310_fu_1401_p2) & ~(6'd5 == add_ln310_fu_1401_p2) & ~(6'd4 == add_ln310_fu_1401_p2) & ~(6'd3 == add_ln310_fu_1401_p2) & ~(6'd2 == add_ln310_fu_1401_p2) & ~(6'd1 == add_ln310_fu_1401_p2) & ~(6'd0 == add_ln310_fu_1401_p2) & (1'b1 == ap_CS_fsm_state3) & (tmp_fu_1411_p42 == 1'd0) & (icmp_ln307_fu_1389_p2 == 1'd0))) begin
        EncoderWeights_39_copy_0_fu_438 <= 1'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        EncoderWeights_3_copy_0_fu_294 <= p_read3;
    end else if (((6'd3 == add_ln310_fu_1401_p2) & (1'b1 == ap_CS_fsm_state3) & (icmp_ln307_fu_1389_p2 == 1'd0))) begin
        EncoderWeights_3_copy_0_fu_294 <= tmp_fu_1411_p42;
    end else if (((6'd3 == add_ln310_fu_1401_p2) & (1'b1 == ap_CS_fsm_state3) & (tmp_fu_1411_p42 == 1'd0) & (icmp_ln307_fu_1389_p2 == 1'd0))) begin
        EncoderWeights_3_copy_0_fu_294 <= 1'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        EncoderWeights_4_copy_0_fu_298 <= p_read4;
    end else if (((6'd4 == add_ln310_fu_1401_p2) & (1'b1 == ap_CS_fsm_state3) & (icmp_ln307_fu_1389_p2 == 1'd0))) begin
        EncoderWeights_4_copy_0_fu_298 <= tmp_fu_1411_p42;
    end else if (((6'd4 == add_ln310_fu_1401_p2) & (1'b1 == ap_CS_fsm_state3) & (tmp_fu_1411_p42 == 1'd0) & (icmp_ln307_fu_1389_p2 == 1'd0))) begin
        EncoderWeights_4_copy_0_fu_298 <= 1'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        EncoderWeights_5_copy_0_fu_302 <= p_read5;
    end else if (((6'd5 == add_ln310_fu_1401_p2) & (1'b1 == ap_CS_fsm_state3) & (icmp_ln307_fu_1389_p2 == 1'd0))) begin
        EncoderWeights_5_copy_0_fu_302 <= tmp_fu_1411_p42;
    end else if (((6'd5 == add_ln310_fu_1401_p2) & (1'b1 == ap_CS_fsm_state3) & (tmp_fu_1411_p42 == 1'd0) & (icmp_ln307_fu_1389_p2 == 1'd0))) begin
        EncoderWeights_5_copy_0_fu_302 <= 1'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        EncoderWeights_6_copy_0_fu_306 <= p_read6;
    end else if (((6'd6 == add_ln310_fu_1401_p2) & (1'b1 == ap_CS_fsm_state3) & (icmp_ln307_fu_1389_p2 == 1'd0))) begin
        EncoderWeights_6_copy_0_fu_306 <= tmp_fu_1411_p42;
    end else if (((6'd6 == add_ln310_fu_1401_p2) & (1'b1 == ap_CS_fsm_state3) & (tmp_fu_1411_p42 == 1'd0) & (icmp_ln307_fu_1389_p2 == 1'd0))) begin
        EncoderWeights_6_copy_0_fu_306 <= 1'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        EncoderWeights_7_copy_0_fu_310 <= p_read7;
    end else if (((6'd7 == add_ln310_fu_1401_p2) & (1'b1 == ap_CS_fsm_state3) & (icmp_ln307_fu_1389_p2 == 1'd0))) begin
        EncoderWeights_7_copy_0_fu_310 <= tmp_fu_1411_p42;
    end else if (((6'd7 == add_ln310_fu_1401_p2) & (1'b1 == ap_CS_fsm_state3) & (tmp_fu_1411_p42 == 1'd0) & (icmp_ln307_fu_1389_p2 == 1'd0))) begin
        EncoderWeights_7_copy_0_fu_310 <= 1'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        EncoderWeights_8_copy_0_fu_314 <= p_read8;
    end else if (((6'd8 == add_ln310_fu_1401_p2) & (1'b1 == ap_CS_fsm_state3) & (icmp_ln307_fu_1389_p2 == 1'd0))) begin
        EncoderWeights_8_copy_0_fu_314 <= tmp_fu_1411_p42;
    end else if (((6'd8 == add_ln310_fu_1401_p2) & (1'b1 == ap_CS_fsm_state3) & (tmp_fu_1411_p42 == 1'd0) & (icmp_ln307_fu_1389_p2 == 1'd0))) begin
        EncoderWeights_8_copy_0_fu_314 <= 1'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        EncoderWeights_9_copy_0_fu_318 <= p_read9;
    end else if (((6'd9 == add_ln310_fu_1401_p2) & (1'b1 == ap_CS_fsm_state3) & (icmp_ln307_fu_1389_p2 == 1'd0))) begin
        EncoderWeights_9_copy_0_fu_318 <= tmp_fu_1411_p42;
    end else if (((6'd9 == add_ln310_fu_1401_p2) & (1'b1 == ap_CS_fsm_state3) & (tmp_fu_1411_p42 == 1'd0) & (icmp_ln307_fu_1389_p2 == 1'd0))) begin
        EncoderWeights_9_copy_0_fu_318 <= 1'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        d_fu_278 <= 3'd0;
    end else if (((1'b1 == ap_CS_fsm_state3) & (icmp_ln307_fu_1389_p2 == 1'd1))) begin
        d_fu_278 <= add_ln304_reg_2231;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state3) & (icmp_ln307_fu_1389_p2 == 1'd0))) begin
        h_reg_976 <= add_ln307_fu_1395_p2;
    end else if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln304_fu_1355_p2 == 1'd0))) begin
        h_reg_976 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        add_ln304_reg_2231 <= add_ln304_fu_1361_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln304_fu_1355_p2 == 1'd0))) begin
        zext_ln307_reg_2236[4 : 1] <= zext_ln307_fu_1381_p1[4 : 1];
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln304_fu_1355_p2 == 1'd1))) begin
        EncoderWeights_0_out = EncoderWeights_0_copy_0_fu_282;
    end else begin
        EncoderWeights_0_out = EncoderWeights_0_out_preg;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln304_fu_1355_p2 == 1'd1))) begin
        EncoderWeights_0_out_ap_vld = 1'b1;
    end else begin
        EncoderWeights_0_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln304_fu_1355_p2 == 1'd1))) begin
        EncoderWeights_10_out = EncoderWeights_10_copy_0_fu_322;
    end else begin
        EncoderWeights_10_out = EncoderWeights_10_out_preg;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln304_fu_1355_p2 == 1'd1))) begin
        EncoderWeights_10_out_ap_vld = 1'b1;
    end else begin
        EncoderWeights_10_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln304_fu_1355_p2 == 1'd1))) begin
        EncoderWeights_11_out = EncoderWeights_11_copy_0_fu_326;
    end else begin
        EncoderWeights_11_out = EncoderWeights_11_out_preg;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln304_fu_1355_p2 == 1'd1))) begin
        EncoderWeights_11_out_ap_vld = 1'b1;
    end else begin
        EncoderWeights_11_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln304_fu_1355_p2 == 1'd1))) begin
        EncoderWeights_12_out = EncoderWeights_12_copy_0_fu_330;
    end else begin
        EncoderWeights_12_out = EncoderWeights_12_out_preg;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln304_fu_1355_p2 == 1'd1))) begin
        EncoderWeights_12_out_ap_vld = 1'b1;
    end else begin
        EncoderWeights_12_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln304_fu_1355_p2 == 1'd1))) begin
        EncoderWeights_13_out = EncoderWeights_13_copy_0_fu_334;
    end else begin
        EncoderWeights_13_out = EncoderWeights_13_out_preg;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln304_fu_1355_p2 == 1'd1))) begin
        EncoderWeights_13_out_ap_vld = 1'b1;
    end else begin
        EncoderWeights_13_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln304_fu_1355_p2 == 1'd1))) begin
        EncoderWeights_14_out = EncoderWeights_14_copy_0_fu_338;
    end else begin
        EncoderWeights_14_out = EncoderWeights_14_out_preg;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln304_fu_1355_p2 == 1'd1))) begin
        EncoderWeights_14_out_ap_vld = 1'b1;
    end else begin
        EncoderWeights_14_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln304_fu_1355_p2 == 1'd1))) begin
        EncoderWeights_15_out = EncoderWeights_15_copy_0_fu_342;
    end else begin
        EncoderWeights_15_out = EncoderWeights_15_out_preg;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln304_fu_1355_p2 == 1'd1))) begin
        EncoderWeights_15_out_ap_vld = 1'b1;
    end else begin
        EncoderWeights_15_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln304_fu_1355_p2 == 1'd1))) begin
        EncoderWeights_16_out = EncoderWeights_16_copy_0_fu_346;
    end else begin
        EncoderWeights_16_out = EncoderWeights_16_out_preg;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln304_fu_1355_p2 == 1'd1))) begin
        EncoderWeights_16_out_ap_vld = 1'b1;
    end else begin
        EncoderWeights_16_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln304_fu_1355_p2 == 1'd1))) begin
        EncoderWeights_17_out = EncoderWeights_17_copy_0_fu_350;
    end else begin
        EncoderWeights_17_out = EncoderWeights_17_out_preg;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln304_fu_1355_p2 == 1'd1))) begin
        EncoderWeights_17_out_ap_vld = 1'b1;
    end else begin
        EncoderWeights_17_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln304_fu_1355_p2 == 1'd1))) begin
        EncoderWeights_18_out = EncoderWeights_18_copy_0_fu_354;
    end else begin
        EncoderWeights_18_out = EncoderWeights_18_out_preg;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln304_fu_1355_p2 == 1'd1))) begin
        EncoderWeights_18_out_ap_vld = 1'b1;
    end else begin
        EncoderWeights_18_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln304_fu_1355_p2 == 1'd1))) begin
        EncoderWeights_19_out = EncoderWeights_19_copy_0_fu_358;
    end else begin
        EncoderWeights_19_out = EncoderWeights_19_out_preg;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln304_fu_1355_p2 == 1'd1))) begin
        EncoderWeights_19_out_ap_vld = 1'b1;
    end else begin
        EncoderWeights_19_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln304_fu_1355_p2 == 1'd1))) begin
        EncoderWeights_1_out = EncoderWeights_1_copy_0_fu_286;
    end else begin
        EncoderWeights_1_out = EncoderWeights_1_out_preg;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln304_fu_1355_p2 == 1'd1))) begin
        EncoderWeights_1_out_ap_vld = 1'b1;
    end else begin
        EncoderWeights_1_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln304_fu_1355_p2 == 1'd1))) begin
        EncoderWeights_20_out = EncoderWeights_20_copy_0_fu_362;
    end else begin
        EncoderWeights_20_out = EncoderWeights_20_out_preg;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln304_fu_1355_p2 == 1'd1))) begin
        EncoderWeights_20_out_ap_vld = 1'b1;
    end else begin
        EncoderWeights_20_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln304_fu_1355_p2 == 1'd1))) begin
        EncoderWeights_21_out = EncoderWeights_21_copy_0_fu_366;
    end else begin
        EncoderWeights_21_out = EncoderWeights_21_out_preg;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln304_fu_1355_p2 == 1'd1))) begin
        EncoderWeights_21_out_ap_vld = 1'b1;
    end else begin
        EncoderWeights_21_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln304_fu_1355_p2 == 1'd1))) begin
        EncoderWeights_22_out = EncoderWeights_22_copy_0_fu_370;
    end else begin
        EncoderWeights_22_out = EncoderWeights_22_out_preg;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln304_fu_1355_p2 == 1'd1))) begin
        EncoderWeights_22_out_ap_vld = 1'b1;
    end else begin
        EncoderWeights_22_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln304_fu_1355_p2 == 1'd1))) begin
        EncoderWeights_23_out = EncoderWeights_23_copy_0_fu_374;
    end else begin
        EncoderWeights_23_out = EncoderWeights_23_out_preg;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln304_fu_1355_p2 == 1'd1))) begin
        EncoderWeights_23_out_ap_vld = 1'b1;
    end else begin
        EncoderWeights_23_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln304_fu_1355_p2 == 1'd1))) begin
        EncoderWeights_24_out = EncoderWeights_24_copy_0_fu_378;
    end else begin
        EncoderWeights_24_out = EncoderWeights_24_out_preg;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln304_fu_1355_p2 == 1'd1))) begin
        EncoderWeights_24_out_ap_vld = 1'b1;
    end else begin
        EncoderWeights_24_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln304_fu_1355_p2 == 1'd1))) begin
        EncoderWeights_25_out = EncoderWeights_25_copy_0_fu_382;
    end else begin
        EncoderWeights_25_out = EncoderWeights_25_out_preg;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln304_fu_1355_p2 == 1'd1))) begin
        EncoderWeights_25_out_ap_vld = 1'b1;
    end else begin
        EncoderWeights_25_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln304_fu_1355_p2 == 1'd1))) begin
        EncoderWeights_26_out = EncoderWeights_26_copy_0_fu_386;
    end else begin
        EncoderWeights_26_out = EncoderWeights_26_out_preg;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln304_fu_1355_p2 == 1'd1))) begin
        EncoderWeights_26_out_ap_vld = 1'b1;
    end else begin
        EncoderWeights_26_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln304_fu_1355_p2 == 1'd1))) begin
        EncoderWeights_27_out = EncoderWeights_27_copy_0_fu_390;
    end else begin
        EncoderWeights_27_out = EncoderWeights_27_out_preg;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln304_fu_1355_p2 == 1'd1))) begin
        EncoderWeights_27_out_ap_vld = 1'b1;
    end else begin
        EncoderWeights_27_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln304_fu_1355_p2 == 1'd1))) begin
        EncoderWeights_28_out = EncoderWeights_28_copy_0_fu_394;
    end else begin
        EncoderWeights_28_out = EncoderWeights_28_out_preg;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln304_fu_1355_p2 == 1'd1))) begin
        EncoderWeights_28_out_ap_vld = 1'b1;
    end else begin
        EncoderWeights_28_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln304_fu_1355_p2 == 1'd1))) begin
        EncoderWeights_29_out = EncoderWeights_29_copy_0_fu_398;
    end else begin
        EncoderWeights_29_out = EncoderWeights_29_out_preg;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln304_fu_1355_p2 == 1'd1))) begin
        EncoderWeights_29_out_ap_vld = 1'b1;
    end else begin
        EncoderWeights_29_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln304_fu_1355_p2 == 1'd1))) begin
        EncoderWeights_2_out = EncoderWeights_2_copy_0_fu_290;
    end else begin
        EncoderWeights_2_out = EncoderWeights_2_out_preg;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln304_fu_1355_p2 == 1'd1))) begin
        EncoderWeights_2_out_ap_vld = 1'b1;
    end else begin
        EncoderWeights_2_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln304_fu_1355_p2 == 1'd1))) begin
        EncoderWeights_30_out = EncoderWeights_30_copy_0_fu_402;
    end else begin
        EncoderWeights_30_out = EncoderWeights_30_out_preg;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln304_fu_1355_p2 == 1'd1))) begin
        EncoderWeights_30_out_ap_vld = 1'b1;
    end else begin
        EncoderWeights_30_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln304_fu_1355_p2 == 1'd1))) begin
        EncoderWeights_31_out = EncoderWeights_31_copy_0_fu_406;
    end else begin
        EncoderWeights_31_out = EncoderWeights_31_out_preg;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln304_fu_1355_p2 == 1'd1))) begin
        EncoderWeights_31_out_ap_vld = 1'b1;
    end else begin
        EncoderWeights_31_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln304_fu_1355_p2 == 1'd1))) begin
        EncoderWeights_32_out = EncoderWeights_32_copy_0_fu_410;
    end else begin
        EncoderWeights_32_out = EncoderWeights_32_out_preg;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln304_fu_1355_p2 == 1'd1))) begin
        EncoderWeights_32_out_ap_vld = 1'b1;
    end else begin
        EncoderWeights_32_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln304_fu_1355_p2 == 1'd1))) begin
        EncoderWeights_33_out = EncoderWeights_33_copy_0_fu_414;
    end else begin
        EncoderWeights_33_out = EncoderWeights_33_out_preg;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln304_fu_1355_p2 == 1'd1))) begin
        EncoderWeights_33_out_ap_vld = 1'b1;
    end else begin
        EncoderWeights_33_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln304_fu_1355_p2 == 1'd1))) begin
        EncoderWeights_34_out = EncoderWeights_34_copy_0_fu_418;
    end else begin
        EncoderWeights_34_out = EncoderWeights_34_out_preg;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln304_fu_1355_p2 == 1'd1))) begin
        EncoderWeights_34_out_ap_vld = 1'b1;
    end else begin
        EncoderWeights_34_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln304_fu_1355_p2 == 1'd1))) begin
        EncoderWeights_35_out = EncoderWeights_35_copy_0_fu_422;
    end else begin
        EncoderWeights_35_out = EncoderWeights_35_out_preg;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln304_fu_1355_p2 == 1'd1))) begin
        EncoderWeights_35_out_ap_vld = 1'b1;
    end else begin
        EncoderWeights_35_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln304_fu_1355_p2 == 1'd1))) begin
        EncoderWeights_36_out = EncoderWeights_36_copy_0_fu_426;
    end else begin
        EncoderWeights_36_out = EncoderWeights_36_out_preg;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln304_fu_1355_p2 == 1'd1))) begin
        EncoderWeights_36_out_ap_vld = 1'b1;
    end else begin
        EncoderWeights_36_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln304_fu_1355_p2 == 1'd1))) begin
        EncoderWeights_37_out = EncoderWeights_37_copy_0_fu_430;
    end else begin
        EncoderWeights_37_out = EncoderWeights_37_out_preg;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln304_fu_1355_p2 == 1'd1))) begin
        EncoderWeights_37_out_ap_vld = 1'b1;
    end else begin
        EncoderWeights_37_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln304_fu_1355_p2 == 1'd1))) begin
        EncoderWeights_38_out = EncoderWeights_38_copy_0_fu_434;
    end else begin
        EncoderWeights_38_out = EncoderWeights_38_out_preg;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln304_fu_1355_p2 == 1'd1))) begin
        EncoderWeights_38_out_ap_vld = 1'b1;
    end else begin
        EncoderWeights_38_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln304_fu_1355_p2 == 1'd1))) begin
        EncoderWeights_39_out = EncoderWeights_39_copy_0_fu_438;
    end else begin
        EncoderWeights_39_out = EncoderWeights_39_out_preg;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln304_fu_1355_p2 == 1'd1))) begin
        EncoderWeights_39_out_ap_vld = 1'b1;
    end else begin
        EncoderWeights_39_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln304_fu_1355_p2 == 1'd1))) begin
        EncoderWeights_3_out = EncoderWeights_3_copy_0_fu_294;
    end else begin
        EncoderWeights_3_out = EncoderWeights_3_out_preg;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln304_fu_1355_p2 == 1'd1))) begin
        EncoderWeights_3_out_ap_vld = 1'b1;
    end else begin
        EncoderWeights_3_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln304_fu_1355_p2 == 1'd1))) begin
        EncoderWeights_4_out = EncoderWeights_4_copy_0_fu_298;
    end else begin
        EncoderWeights_4_out = EncoderWeights_4_out_preg;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln304_fu_1355_p2 == 1'd1))) begin
        EncoderWeights_4_out_ap_vld = 1'b1;
    end else begin
        EncoderWeights_4_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln304_fu_1355_p2 == 1'd1))) begin
        EncoderWeights_5_out = EncoderWeights_5_copy_0_fu_302;
    end else begin
        EncoderWeights_5_out = EncoderWeights_5_out_preg;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln304_fu_1355_p2 == 1'd1))) begin
        EncoderWeights_5_out_ap_vld = 1'b1;
    end else begin
        EncoderWeights_5_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln304_fu_1355_p2 == 1'd1))) begin
        EncoderWeights_6_out = EncoderWeights_6_copy_0_fu_306;
    end else begin
        EncoderWeights_6_out = EncoderWeights_6_out_preg;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln304_fu_1355_p2 == 1'd1))) begin
        EncoderWeights_6_out_ap_vld = 1'b1;
    end else begin
        EncoderWeights_6_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln304_fu_1355_p2 == 1'd1))) begin
        EncoderWeights_7_out = EncoderWeights_7_copy_0_fu_310;
    end else begin
        EncoderWeights_7_out = EncoderWeights_7_out_preg;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln304_fu_1355_p2 == 1'd1))) begin
        EncoderWeights_7_out_ap_vld = 1'b1;
    end else begin
        EncoderWeights_7_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln304_fu_1355_p2 == 1'd1))) begin
        EncoderWeights_8_out = EncoderWeights_8_copy_0_fu_314;
    end else begin
        EncoderWeights_8_out = EncoderWeights_8_out_preg;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln304_fu_1355_p2 == 1'd1))) begin
        EncoderWeights_8_out_ap_vld = 1'b1;
    end else begin
        EncoderWeights_8_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln304_fu_1355_p2 == 1'd1))) begin
        EncoderWeights_9_out = EncoderWeights_9_copy_0_fu_318;
    end else begin
        EncoderWeights_9_out = EncoderWeights_9_out_preg;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln304_fu_1355_p2 == 1'd1))) begin
        EncoderWeights_9_out_ap_vld = 1'b1;
    end else begin
        EncoderWeights_9_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        PrevEncoderWeightChanges_ce0 = 1'b1;
    end else begin
        PrevEncoderWeightChanges_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) & (icmp_ln307_fu_1389_p2 == 1'd0))) begin
        PrevEncoderWeightChanges_we0 = 1'b1;
    end else begin
        PrevEncoderWeightChanges_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) | (ap_done_reg == 1'b1))) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

assign ap_ST_fsm_state2_blk = 1'b0;

assign ap_ST_fsm_state3_blk = 1'b0;

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln304_fu_1355_p2 == 1'd1))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln304_fu_1355_p2 == 1'd1))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln304_fu_1355_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((1'b1 == ap_CS_fsm_state3) & (icmp_ln307_fu_1389_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign PrevEncoderWeightChanges_address0 = zext_ln313_fu_1406_p1;

assign PrevEncoderWeightChanges_d0 = 1'd0;

assign add_ln304_fu_1361_p2 = (d_fu_278 + 3'd1);

assign add_ln307_fu_1395_p2 = (h_reg_976 + 4'd1);

assign add_ln310_fu_1401_p2 = (zext_ln307_reg_2236 + zext_ln307_1_fu_1385_p1);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

always @ (*) begin
    ap_block_state1 = ((ap_start == 1'b0) | (ap_done_reg == 1'b1));
end

assign empty_47_fu_1367_p1 = d_fu_278[1:0];

assign icmp_ln304_fu_1355_p2 = ((d_fu_278 == 3'd4) ? 1'b1 : 1'b0);

assign icmp_ln307_fu_1389_p2 = ((h_reg_976 == 4'd10) ? 1'b1 : 1'b0);

assign tmp_3_fu_1371_p4 = {{{empty_47_fu_1367_p1}, {empty_47_fu_1367_p1}}, {1'd0}};

assign zext_ln307_1_fu_1385_p1 = h_reg_976;

assign zext_ln307_fu_1381_p1 = tmp_3_fu_1371_p4;

assign zext_ln313_fu_1406_p1 = add_ln310_fu_1401_p2;

always @ (posedge ap_clk) begin
    zext_ln307_reg_2236[0] <= 1'b0;
    zext_ln307_reg_2236[5] <= 1'b0;
end

endmodule //Autoencoder_BackPropagateEncoderWeights
